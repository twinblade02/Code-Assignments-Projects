username,submission_week,function_summaries
abbott34,10,"['LinearRegression', 'LinearRegression.fit', 'abs', 'bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.head', 'data.info', 'data.rename', 'dict', 'import', 'len', 'list', 'mean_absolute_error', 'mean_squared_error', 'np.mean', 'pd.DataFrame', 'pd.DataFrame.from_dict', 'pd.DataFrame.from_records', 'pd.Series', 'pd.append', 'pd.concat', 'pd.factorize', 'pd.series', 'plt.bar', 'plt.bar.plot', 'plt.plot', 'pred_id.MAE.append', 'pred_id.MSE.append', 'pred_id.actual.append', 'pred_id.prediction.append', 'pred_id.predictions.append', 'prediction_list_data.head', 'print', 'query_job.to_dataframe', 'query_job.to_dataframe.head', 'range', 'reg.predict', 'relevant_unemployment_df.apply', 'relevant_unemployment_df.astype', 'relevant_unemployment_df.convert_dtypes', 'relevant_unemployment_df.convert_dtypes.info', 'relevant_unemployment_df.drop', 'relevant_unemployment_df.drop_duplicates', 'relevant_unemployment_df.dropna', 'relevant_unemployment_df.dropna.info', 'relevant_unemployment_df.groupby', 'relevant_unemployment_df.groupby.count', 'relevant_unemployment_df.groupby.count.pd.DataFrame.plot', 'relevant_unemployment_df.head', 'relevant_unemployment_df.info', 'relevant_unemployment_df.isna', 'relevant_unemployment_df.isna.sum', 'relevant_unemployment_df.join', 'relevant_unemployment_df.map', 'relevant_unemployment_df.value_counts', 'relevant_unemployment_df.value_counts.plot', 'relevant_unemployment_df.value_counts.plot.bar', 'relevant_unemployment_df.value_counts.values', 'results_df.explode', 'row.append', 'row.concat', 'set', 'temp_df.append', 'temp_df.convert_dtypes', 'temp_df.drop', 'temp_df.head', 'temp_df.head.values', 'temp_df.info', 'temp_df.isna', 'temp_df.isna.temp_df.loc.head', 'temp_df.isnull', 'temp_df.reset_index', 'temp_df.reset_index.info', 'test.head', 'total_claims_avg.append', 'tracts.append', 'type', 'unemployment_data.head', 'wage_data.head', 'wage_data.order_by', 'wage_data.set_index', 'wage_data.sort_values', 'warnings.simplefilter']"
ahhp0521,10,[]
akatti7,10,"['Bigquery.Client', 'bigquery.Client', 'bigquery_client.query', 'data.head', 'import', 'print', 'query_job.to_dataframe']"
amaltom,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'merged_data.head', 'pd.merge', 'prediction_list.head', 'prediction_list.merge', 'print', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'unemployment_data.describe', 'unemployment_data.groupby', 'unemployment_data.groupby.mean', 'unemployment_data.head', 'unemployment_data.value_counts', 'unemplyment_data.value_counts', 'unmeployment_data.groupby', 'unmeployment_data.groupby.mean', 'wage_data.head']"
amoghkokari,10,"['ARIMA', 'LeaveOneOut', 'Mdf.head', 'Mdf.to_csv', 'bigquery.Client', 'bigquery_client.query', 'cdf.head', 'cdf.unique', 'covid19_cases_data.head', 'data.plot', 'data1.drop', 'data1.index.value_counts', 'data1.plot', 'data1.set_index', 'data1.sort_index', 'data1.value_counts', 'df.mean', 'dfp.keys', 'dfp.val', 'dfp.vals', 'dfp.values', 'dfp.valus', 'dict', 'dtf.set_index', 'dtf.sort_index', 'emp_cols.mdf.replace', 'f1_df.plot', 'f1_df.set_index', 'f2_df.describe', 'f2_df.drop_duplicates', 'f2_df.groupby', 'f2_df.groupby.mean', 'f2_df.groupby.set_index', 'f2_df.set_index', 'f2_df.unique', 'f2_df.value_counts', 'f3_df.drop', 'f3_df.drop_duplicates', 'f3_df.np.array.flatten', 'f3_df.value_count', 'f3_df.value_counts', 'f3_df.values_count', 'f_df.drop_duplicates', 'f_df.f_df.groupby.mean', 'f_df.groupby', 'f_df.groupby.mean', 'f_df.nunique', 'f_df.set_index', 'f_df.unique', 'f_df.value_counts', 'fdf.value_counts', 'format', 'import', 'int', 'itertools.product', 'len', 'lgb.Dataset', 'lgb.LightGBMTunerCV', 'lgb.reset_parameter', 'list', 'loo.split', 'max', 'mdf.corr', 'mdf.drop', 'mdf.drop_duplicates', 'mdf.head', 'mdf.nunique', 'mdf.replace', 'mdf.unique', 'mdf.value_counts', 'mod.fit', 'mod.predict', 'n1.to_csv', 'new.columns', 'new.set_index', 'new.to_csv', 'new1.columns', 'new1.drop', 'np.array', 'optuna.create_study', 'optuna.logging.set_verbosity', 'pandas.DataFrame', 'pd.DataFrame.from_dict', 'pd.read_csv', 'pd.to_numeric', 'pdf.drop', 'pdf.head', 'pdf.sort', 'pdf.to_csv', 'pdf.value_counts', 'plt.figure', 'plt.show', 'print', 'query1_job.to_dataframe', 'query_job.to_dataframe', 'range', 'results.predict', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'sorted', 'total_claims.append', 'tuner.run', 'udf.columns', 'udf.corr', 'udf.drop', 'udf.head', 'udf.nunique', 'udf.replace', 'udf.to_csv', 'udf.unique', 'udf.value_counts', 'uu_id.append', 'wdf.head', 'wdf.to_csv', 'week_number.append']"
anamita01,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.head', 'import', 'query_job.to_dataframe', 'querydb']"
anamitapowwow,10,"['BIGQUERY.Client', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'unemployment_data.head', 'wage_data.head']"
ananyaipsita,10,"['np.cumsum', 'np.linspace', 'np.random.randn']"
anirudhtunga,10,[]
arjun-2dstevens,10,[]
aubohlin,10,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'csv.writer', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df_pred.df_pred.where.dropna', 'df_pred.df_un.where.dropna', 'df_pred.where', 'df_un.df_un.sort', 'df_un.df_un.sort_values', 'df_un.df_un.sort_values.drop_duplicates', 'df_un.df_un.sort_values.drop_duplicates.set_index', 'df_un.df_un.sortby', 'df_un.df_un.where.dropna', 'df_un.where', 'df_wage.head', 'df_working.mean', 'enumerate', 'import', 'key.tract_dict.ewm', 'key.tract_dict.ewm.mean', 'key.tract_dict.mean', 'key.tract_dict.rolling', 'key.tract_dict.rolling.mean', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'open', 'pd.Series', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'prediction_dict.items', 'print', 'query_job.to_dataframe', 'querydb', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'str', 'tract.df_un.df_un.sort_values', 'tract.df_un.df_un.sort_values.drop_duplicates', 'tract.df_un.df_un.sort_values.drop_duplicates.set_index', 'tract.head', 'tract_dict.head', 'tract_dict.items', 'tract_dict.plot', 'tract_dict.tail', 'writer.writerow', 'y.plot', 'y_pred.plot', 'zip']"
avprasad125,10,"['bigquery.Client', 'bigquery_client.query', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'plt.figure', 'plt.legend', 'plt.plot', 'query_job.to_dataframe']"
beingmerry,10,[]
cadenjarausch,10,[]
cardshistory,10,[]
carrol54,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
crystalhappycat,10,"['bigquery.Client', 'bigquery_client.query', 'client.list_tables', 'covid19_cases_data.head', 'df.mean', 'format', 'import', 'pandas.DataFrame', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'unemployment_data.head', 'wage_data.head']"
dadal09,10,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe', 'unemployment_data.drop_duplicates']"
dayoonsuh,10,"['ARMAmodel.fit', 'ARMAmodel.get_forecast', 'ARMAmodel.predict', 'LinearRegression', 'RandomForestRegressor', 'SARIMAX', 'StandardScaler', 'X.head', 'average_wage.median', 'bigquery.Client', 'bigquery_client.query', 'claim_sum_week.first', 'claim_sum_week.head', 'claims.append', 'covid19_cases_data.head', 'covid19_cases_data.sort_values', 'csv.writer', 'csvwriter.writerow', 'csvwriter.writerows', 'data.drop', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.sort_values', 'data.total_claims.astype', 'data.total_claims.median', 'data.total_claims.values.reshape', 'data.tract.unique', 'data.week_number.values.reshape', 'data_count.items', 'errors', 'f', 'f10', 'float', 'float.data.total_claims.astype.values.reshape', 'groupby_id.first', 'groupby_id.get_group', 'groupby_id.to_dict', 'import', 'int', 'len', 'lessthanten.append', 'list', 'lm.fit', 'mean_absolute_error', 'mean_squared_error', 'median', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'metrics.r2_score', 'np.arange', 'np.array', 'np.asarray', 'np.linspace', 'np.mean', 'np.poly1d', 'np.polyfit', 'np.sqrt', 'open', 'pd.DataFrame', 'pd.concat', 'pd.merge', 'pd.read_csv', 'plt.grid', 'plt.legend', 'plt.line', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'predict_claim', 'predict_claim.head', 'predict_claims', 'prediction_list.tolist', 'prediction_list.uu_id.tolist', 'prediction_list.uu_id.value_counts', 'prediction_list.uu_id.value_counts.to_dict', 'predictions.apply', 'predictions.tolist', 'preprocessing.scale', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'regr.fit', 'regr.predict', 'regressor.fit', 'regressor.predict', 'result.head', 'result.np.array.reshape', 'result.prediction.iloc.round', 'result.reshape', 'result.sort_values', 'rfr.fit', 'rfr.predict', 'rfr.score', 'round', 'rows.append', 'sc.fit_transform', 'sc.transform', 'scale', 'shape', 'sns.heatmap', 'train_test_split', 'unemployment_data.drop', 'unemployment_data.drop.head', 'unemployment_data.drop_duplicates', 'unemployment_data.drop_duplicates.fillna', 'unemployment_data.dropna', 'unemployment_data.duplicated', 'unemployment_data.edu_grades_9_11.unique', 'unemployment_data.fillna', 'unemployment_data.fillna.corr', 'unemployment_data.filter', 'unemployment_data.groupby', 'unemployment_data.groupby.median', 'unemployment_data.groupby.median.get_group', 'unemployment_data.groupby.pd.DataFrame.head', 'unemployment_data.groupby.sum', 'unemployment_data.head', 'unemployment_data.isnull', 'unemployment_data.isnull.sum', 'unemployment_data.nunique', 'unemployment_data.shape', 'unemployment_data.sort_values', 'unemployment_data.sort_values.reindex', 'unemployment_data.sort_values.reset_index', 'unemployment_data.tail', 'unemployment_data.top_category_employer1.head', 'unemployment_data.tract.count', 'unemployment_data.tract.count.sum', 'unemployment_data.tract.duplicated', 'unemployment_data.tract.duplicated.sum', 'unemployment_data.tract.duplicates', 'unemployment_data.tract.isnull', 'unemployment_data.tract.isnull.sum', 'unemployment_data.tract.nunique', 'unemployment_data.tract.unique', 'unemployment_data.tract.unique.sum', 'unemployment_data.tract.value_counts', 'unemployment_data.tract.value_counts.sort_values', 'unemployment_data.usnull', 'unemployment_data.usnull.sum', 'unemployment_data.uu_id.count_values', 'unemployment_data.uu_id.tolist', 'unemployment_data.uu_id.unique', 'unemployment_data.uu_id.unique.count', 'unemployment_data.uu_id.unique.sum', 'unemployment_data.uu_id.value_counts', 'unemployment_data.uu_id.value_counts.sort', 'unemployment_data.uu_id.value_counts.to_dict', 'unemployment_data.uu_id.value_counts.tolist', 'unemployment_data.uu_ids.count_values', 'uuid.unemployment_data.uu_id.unemployment_data.copy', 'uuids.remove', 'wage.isnull', 'wage.isnull.sum', 'wage.tract.nunique', 'wage_data.average_wage.fillna', 'wage_data.average_wage.median', 'wage_data.drop_duplicates', 'wage_data.fillna', 'wage_data.filter', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.sum', 'wage_data.tract.nunique', 'wage_data.uu_id.nunique', 'warnings.filterwarnings', 'y_pred.conf_int', 'y_pred.flatten', 'y_pred.tolist', 'y_test.flatten', 'y_test.tolist', 'y_test.values.ravel', 'y_train.values.ravel']"
deep-2d20,10,[]
destryed,10,"['RandomForestRegressor', 'StandardScaler', 'StandardScaler.fit_transform', 'abs', 'adfuller', 'autocorrelation_plot', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'bigqury_client.query', 'col.df3.astype', 'col.df3.nunique', 'col.df3.replace', 'col.df3.str.replace', 'col.np.nan.df3.df3.unique', 'covid19_cases_data.head', 'data.head', 'df.astype', 'df.copy', 'df.corr', 'df.drop', 'df.mean', 'df.replace', 'df.uu_id_enc.nunique', 'df1.head', 'df1.to_csv', 'df1.uu_id.nunique', 'df1.uu_id.unique', 'df2.head', 'df2.uu_id.nunique', 'df3.abs.sum', 'df3.astype', 'df3.columns.remove', 'df3.columns.str.replace', 'df3.copy', 'df3.corr', 'df3.drop', 'df3.dropna', 'df3.fillna', 'df3.fillna.replace', 'df3.race_white.unique', 'df3.replace', 'df3.split', 'df3.str.replace', 'df3.str.split', 'df3.sum', 'df3.test_df.pd.merge.drop', 'df3.test_df.pd.merge.drop.drop_duplicates', 'df3.time.unique', 'df3.timeperiod.unique', 'df3.timeperiods.unique', 'df3.unique', 'df3.uu_id.nunique', 'df3.uu_id.unique', 'df3.uu_id_enc.nunique', 'df3.uu_id_enc.unique', 'df3.week_number.df3.sort_values', 'df3_.drop_duplicates', 'df3_.plot', 'df3_.week_number.unique', 'df4.total_claims.df4.total_claims.df4.all', 'features.k.k.test_df.drop', 'final_pred', 'float', 'format', 'g.week_number.g.mean', 'import', 'int', 'itertools.cycle', 'itertools.product', 'k.df3.sum', 'k.df3.uu_id.df3.mean', 'li.append', 'list', 'mean', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'mod.fit', 'next', 'no.log', 'np.array', 'np.exp', 'np.isnan', 'np.log', 'np.mean', 'np.nan.df3.df3.unique', 'np.nan.temp.temp.unique', 'np.sqrt', 'opt_features', 'opt_features2', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Datetime', 'pd.concat', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'pd.tools.plotting.autocorrelation_plot', 'plt.legend', 'plt.show', 'plt.subplots', 'pred.conf_int', 'pred.predicted_mean.plot', 'print', 'query_job.to_dataframe', 'query_job.todataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_DataFrame', 'query_job3.to_dataframe', 'range', 'reg.fit', 'reg.predict', 'res.sum', 'results.get_prediction', 'results.get_prediction.plot', 'results.plot_diagnostics', 'results.summary', 'rf.fit', 'rf.predict', 'rg', 'round', 'sc.fit_transform', 'sc.optimize', 'sc.transform', 'scipy.optimize', 'scipy.optimize.maximize', 'scipy.optimize.minimize', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.color_palette', 'sns.heatmap', 'sns.lineplot', 'sns.scatterplot', 'sp.optimize', 'statistics.mean', 'str', 'str.df3.unique', 'submission_prediction_output.fillna', 'submission_prediction_output.isna', 'submission_prediction_output.isna.values.any', 'submission_prediction_output.isnull', 'submission_prediction_output.isnull.values.any', 'submission_prediction_output.to_csv', 'submission_prediction_output.total_claims.nunique', 'submission_prediction_output.uu_id.nunique', 'submission_prediction_output.uu_id.unique', 'submission_prediction_output.uu_id_enc.unique', 'sum', 'temp.astype', 'temp.drop', 'temp.replace', 'temp.sort_values', 'temp2.drop', 'tesmp.replace', 'test_df.astype', 'test_df.copy', 'test_df.drop', 'test_df.drop_duplicates', 'test_df.drop_duplicates.dropna', 'test_df.isna', 'test_df.race_black.unique', 'test_df.to_csv', 'test_df.total_claims.unique', 'test_df.uu_id.unique', 'test_df.uu_id_enc.unique', 'test_df.week_number.test_df.sort_values', 'test_df3.fillna', 'test_features.drop', 'test_features.dropna', 'test_features.dropna.drop', 'test_features.dropna.drop.drop_duplicates', 'time_pred', 'train_test_split', 'unemp_data.head', 'val.predict', 'wage_data.head', 'xgb.XGBRegressor', 'y.plot']"
divya2890,10,"['LinearRegression', 'Unemployment_data.head', 'Unemployment_data.shape', 'X_test.head', 'X_test.index', 'X_test.shape', 'a.astype', 'a.rename', 'a.replace', 'a.style.hide_index', 'a.to_csv', 'a.to_string', 'abs', 'astype', 'bigquery.Client', 'bigquery_client.query', 'count.a.astype', 'covid19_cases_data.head', 'data.astype', 'data.columns', 'data.corr', 'data.drop', 'data.fillna', 'data.head', 'data.max', 'data.min', 'import', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'pd.DataFrame', 'pd.Dataframe', 'pd.to_csv', 'plt.figure', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'test.astype', 'test.drop', 'test.fillna', 'y_pred.shape']"
dougcrabill,10,"['ExponentialSmoothing', 'IterativeImputer', 'IterativeImputer.fit', 'LinearRegression', 'SimpleImputer', 'VARMAX', 'X.X.loc.values.reshape', 'X.dropna', 'X_train.head', 'abs', 'allweeks.drop', 'allweeks.fillna', 'allweeks.join', 'allweeks.loc', 'allweeks.mean', 'allweeks.median', 'allweeks.set_index', 'allweeks.shape', 'allweeks.to_numpy', 'allweeks.to_numpy.shape', 'allweeks.values.len', 'allweeks.values.range', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.append', 'data.corr', 'data.corr.round', 'data.drop', 'data.head', 'data.tail', 'data.values', 'data.values.np.array.reshape', 'data.values.reshape', 'describe', 'df.fillna', 'df.fillna.to_numpy', 'df.fillna.to_numpy.flatten', 'df.mean', 'df.to_numpy', 'df.to_numpy.flatten', 'df.to_numpy.flatten.fillna', 'display', 'dopred', 'dp.dataframe', 'empdata.astype', 'empdata.columns', 'empdata.corr', 'empdata.describe', 'empdata.describe.transpose', 'empdata.describe.transpose.shape', 'empdata.drop', 'empdata.drop_duplicates', 'empdata.dropna', 'empdata.edu_grades_9_11.loc', 'empdata.edu_grades_9_11.plot', 'empdata.empdata.empdata.loc.values.reshape', 'empdata.empdata.loc.describe', 'empdata.empdata.loc.drop', 'empdata.empdata.loc.drop_duplicates', 'empdata.empdata.loc.loc.plot', 'empdata.empdata.loc.mean', 'empdata.empdata.loc.median', 'empdata.empdata.loc.plot', 'empdata.empdata.loc.reshape', 'empdata.empdata.loc.values.dp.dataframe.plot', 'empdata.empdata.loc.values.pandas.dataframe.plot', 'empdata.empdata.loc.values.plot', 'empdata.empdata.loc.values.reshape', 'empdata.get_dummies', 'empdata.getdummies', 'empdata.head', 'empdata.head.transpose', 'empdata.keys', 'empdata.keys.drop', 'empdata.loc', 'empdata.loc.describe', 'empdata.max', 'empdata.mean', 'empdata.median', 'empdata.nunique', 'empdata.plot', 'empdata.plot.box', 'empdata.plot.scatter', 'empdata.replace', 'empdata.set_index', 'empdata.shape', 'empdata.shift', 'empdata.sort', 'empdata.sort_values', 'empdata.sort_values.plot', 'empdata.sum', 'empdata.transpose', 'empdata.transpose.head', 'empdata.unique', 'empdata.unique.np.sort', 'empdata.unique.numpy.sort', 'empdata.unique.reshape', 'empdata.unique.sort', 'empdata.unique.sort_values', 'empdata.unique.sorted', 'empdata.uupred.pd.merge.head', 'empdata.value_sort', 'empdata.values', 'empdata.values.reshape', 'empdata.values.reshape.sort', 'empdata.values.reshape.sort_values', 'empdata.values.sort', 'empdata.values.sort_values', 'empdata.values_sort', 'example_function', 'final_prediction_data.drop', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'head', 'help', 'i.empdata.empdata.loc.mean', 'i.empdata.empdata.loc.to_list', 'imp_mean.fit', 'imp_mean.transform', 'import', 'imputer.fit', 'imputer.transform', 'int', 'int64', 'last_week.range.pd.DataFrame.join', 'lastw.range.pd.DataFrame.join', 'len', 'list', 'load_lynx', 'load_wineind', 'm.fit', 'm.fit.predict', 'm.predict', 'm_fit.predict', 'm_fit.simulate', 'meancpw.append', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'model.score', 'model_fit.forecast', 'model_fit.simulate', 'np.array', 'np.asarray', 'np.cumsum', 'np.linspace', 'np.plot', 'np.random.randn', 'np.sort', 'np.sqrt', 'pandas.DataFrame', 'pandas.dataframe', 'pd.DataFrame', 'pd.Series', 'pd.get_dummies', 'pd.join', 'pd.merge', 'pd.to_datetime', 'plot', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'pm.auto_arima', 'pm.datasets.load_wineind', 'pm.plot_acf', 'print', 'qtables.head', 'query_from_statement', 'query_job.to_dataframe', 'query_job.to_dataframe.drop_duplicates', 'query_job.to_dataframe.drop_duplicates.fillna', 'race_hawaiiannative.empdata.nunique', 'random', 'range', 'range.pd.DataFrame.join', 'regressor.fit', 'regressor.predict', 'shape', 'sns.heatmap', 'sort', 'str', 'sum', 'testuu_id', 'testuu_id.allweeks.join.fillna', 'testuu_id.fillna', 'testuu_id.index', 'testuu_id.join', 'testuu_id.last_week.range.pd.DataFrame.join.fillna', 'testuu_id.lastw.range.pd.DataFrame.join.fillna', 'testuu_id.median', 'testuu_id.median.int', 'testuu_id.range.pd.DataFrame.join.fillna', 'testuu_id.set_index', 'train_test_split', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_prediction_data.head', 'unemployment_prediction_data.join', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.set_index', 'uu.uupred.uupred.loc.flatten', 'uupread.head', 'uupred.astype', 'uupred.at', 'uupred.concat', 'uupred.describe', 'uupred.drop', 'uupred.drop.join', 'uupred.dtypes', 'uupred.head', 'uupred.join', 'uupred.loc', 'uupred.max', 'uupred.merge', 'uupred.merge.join', 'uupred.to_csv', 'uupred.uupred.loc.flatten', 'uupred.values.shape', 'wagedata.head', 'week37.rename', 'weekdata.plot.box', 'weeks.sort', 'weeks.sorted', 'weeks.to_numpy.sort', 'weeks.to_numpy.sorted', 'x.append', 'x.plot', 'y.align', 'y.plot', 'y_pred.fillna', 'y_pred.flatten', 'y_pred.plot', 'y_pred.reshape', 'y_pred.values', 'y_pred.view', 'y_test.flatten', 'y_test.reshape', 'y_test.reshape.flatten', 'y_test.reshape.to_numpy.flatten', 'y_test.to_numpy', 'y_test.to_numpy.flatten']"
drsuriya1991,10,[]
dwijenchawra,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
dylanadal0,10,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
esquared13,10,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery.erinenzinger', 'bigquery_client.query', 'data.corr', 'data.drop', 'data.head', 'data.loc', 'data.plot', 'data.sample', 'data.set_index', 'data.values.reshape', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.Series', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'regressor.fit', 'sns.heatmap', 'sns.set', 'str', 'train_test_split', 'unemployment_data.head']"
eveclarke1,10,"['', 'Actual.y_test', 'Image.open', 'Image1.show', 'LinearRegression', 'LinearRegression.fit', 'Linear_Regression', 'Linear_Regression.fit', 'LogisticRegression', 'MAPE', 'MSPE', 'Predicted.y_pred', 'SimpleImputer', 'StandardScaler', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'axs.legend', 'axs.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'bike.drop', 'cols_plot.data.plot', 'combine', 'covid19_cases_data.head', 'csv.reader', 'cv2.imread', 'data.copy', 'data.corr', 'data.drop', 'data.head', 'data.ironhacks_competition', 'data.ironhacks_competition.head', 'data.isna', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'data.values.reshape', 'dataBalanceCheck', 'dataFillNa', 'dataIdentifyDWM', 'data_balance.fillna', 'data_balance.index.duplicated', 'data_balance.index.unique', 'data_balance.interpolate', 'data_balance.reset_index', 'data_balance.set_index', 'data_balance.set_index.reindex', 'data_balance.sort_index', 'data_balance.week_number.max', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.set_index.reindex.reset_index', 'data_balance.week_number.min', 'data_balance_train.drop', 'data_balance_train_x_m1.astype', 'data_balance_valid.drop', 'data_balance_valid_x_m1.astype', 'data_pred_query.copy', 'data_train.drop', 'data_valid.drop', 'data_valid_x_m1.astype', 'dataset.head', 'df.drop', 'df.head', 'df.mean', 'df.plot.bar', 'df.unique', 'df.uu_id.unique', 'df1.plot', 'dict', 'enumerate', 'example_function', 'fnmatch.filter', 'g.copy', 'g.copy.reset_index', 'g.loc.impute_iterative.reset_index', 'g.unique', 'g.values.tolist', 'gen_find', 'get_week_number_map', 'id.data.data.isnull', 'id.data.data.isnull.all', 'im.show', 'image.SHOW', 'image.show', 'img.copy', 'img.mean', 'img.show', 'imp_tot.to_csv', 'import', 'impute_iterative', 'impute_total_claims.raw_full.groupby.apply.reset_index', 'imputer.fit_transform', 'insert_na_week_number.raw.groupby.apply.reset_index', 'install.packages', 'int', 'int.np.linspace.reshape', 'ironhacks_competition.head', 'ironhacks_competition.unemployment_data.head', 'ironhacks_data.ironhacks_competition.head', 'len', 'library', 'linear_model.LinearRegression', 'linear_model.predict', 'linear_regressor.fit', 'linear_regressor.predict', 'load_data', 'load_data_full', 'load_imp_tot', 'lr.fit', 'lr.predict_proba', 'max', 'mean_absolute_error', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'min', 'mnist.load_data', 'model.fit', 'model.predict', 'model.score', 'mpimg.imread', 'mpimg.imsave', 'myImage.show', 'next', 'np.abs', 'np.arange', 'np.arange.reshape', 'np.arrange', 'np.array', 'np.array.reshape', 'np.cumsum', 'np.linspace', 'np.mean', 'np.random.rand', 'np.random.randn', 'np.sqrt', 'nrow', 'open', 'os.path.isfile', 'os.path.join', 'os.walk', 'pandas.DataFrame', 'params.append', 'paste', 'pd.DataFrame', 'pd.MultiIndex.from_product', 'pd.Series', 'pd.get_dummies', 'pd.read', 'pd.read_csv', 'pd.set_option', 'pd.to_datetime', 'pd.unique', 'plot_acf', 'plot_decision_regions', 'plot_impute_iterative', 'plot_ly', 'plt.figure', 'plt.grid', 'plt.imshow', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.xscale', 'plt.ylabel', 'preddiction_list_data.head', 'prediction_data.head', 'prediction_lisst.head', 'print', 'pyplot.get_cmap', 'pyplot.imshow', 'pyplot.show', 'query', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'range', 'raw.drop', 'raw.drop_duplicates', 'raw.groupby', 'raw.groupby.apply', 'raw.replace', 'raw.reset_index', 'raw.sort_values', 'raw.to_csv', 'raw_full.groupby', 'raw_full.groupby.apply', 'raw_full.to_csv', 'regr.itercept_predict', 'regressor.fit', 'regressor.predict', 'reshape', 'reshapre', 'result.predict', 'results.summary', 'sample', 'scaler.fit_transform', 'scaler.transform', 'series.map', 'set.seed', 'sklearn.impute.IterativeImputer', 'sm.OLS', 'sns.boxplot', 'sns.heatmap', 'sns.scatterplot', 'sns.set', 'sorted', 'train_test_split', 'type', 'u.join', 'unemployment.head', 'unemployment_data.head', 'wage_data.head', 'wage_data_data.head', 'weights.append', 'ww.set_index', 'y.plot', 'y.reshape', 'y_pred', 'y_pred.flatten', 'y_pred.plot', 'y_test', 'y_test.flatten', 'zip']"
goughes,10,[]
harshitbd,10,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
harshpavuluri,10,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.shift', 'df.mean', 'import', 'main', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'sns.set', 'y.plot', 'y_pred.plot']"
hiram31,10,"['bigquery.Client', 'print']"
janejoseph20,10,"['Claims_by_timeperiod.plot', 'Claims_by_timeperiod.plot.set', 'Claims_by_week.plot', 'Claims_by_week.plot.set', 'Final_df.astype', 'Final_df.corr', 'Final_df.corr.round', 'Final_df.describe', 'Final_df.edu_8th_or_less.sum', 'Final_df.edu_grades_9_11.sum', 'Final_df.edu_hs_grad_equiv.sum', 'Final_df.edu_post_hs.sum', 'Final_df.edu_unknown.sum', 'Final_df.gender_female.sum', 'Final_df.gender_male.sum', 'Final_df.gender_na.sum', 'Final_df.groupby', 'Final_df.groupby.agg', 'Final_df.groupby.agg.sort', 'Final_df.groupby.sum', 'Final_df.groupby.sum.sort_values', 'Final_df.groupby.sum.sort_values.head', 'Final_df.head', 'Final_df.ols.fit', 'Final_df.pivot_table', 'Final_df.pivot_table.round', 'Final_df.race_amerindian.sum', 'Final_df.race_asian.sum', 'Final_df.race_black.sum', 'Final_df.race_noanswer.sum', 'Final_df.race_other.sum', 'Final_df.race_white.sum', 'Final_df.replace', 'Final_df.select_dtypes', 'Final_df.shape', 'Final_df.sort_values', 'Final_df.sum', 'Final_df.top_category_employer1.value_counts', 'Final_df.top_category_employer2.value_counts', 'Final_df.top_category_employer3.value_counts', 'Final_df.unique', 'Final_df.uu_id.value_counts', 'Final_df.value_counts', 'Final_df.value_counts.plot', 'GridSearchCV', 'LabelEncoder', 'LinearRegression', 'MSE', 'Mean_Claims_by_week.plot', 'Mean_Claims_by_week.plot.set', 'Mean_of_Total_Claims_per_UUID_every_week.head', 'Mean_of_Total_Claims_per_UUID_every_week.plot', 'Melt.head', 'Melt.sort_values', 'Merged_unemployment_wage.Head', 'Merged_unemployment_wage.drop_duplicates', 'Merged_unemployment_wage.drop_duplicates.head', 'Merged_unemployment_wage.duplicated', 'Merged_unemployment_wage.duplicated.sum', 'Merged_unemployment_wage.head', 'Predicted_Values.tolist', 'Prediction.tolist', 'RandomForestRegressor', 'SimpleImputer', 'Top_10_claimers.head', 'Top_10_claimers.tail', 'Total_Claims_per_UUID_every_week.describe', 'Total_Claims_per_UUID_every_week.fillna', 'Total_Claims_per_UUID_every_week.head', 'Total_Claims_per_UUID_every_week.melt', 'Total_Claims_per_UUID_every_week.plot', 'Total_Claims_per_UUID_every_week.rename_axis', 'Total_Claims_per_UUID_every_week_nulls_addressed.head', 'Wage_updated.isnull', 'Wage_updated.isnull.sum', 'X.head', 'X_test._get_numeric_data', 'X_train._get_numeric_data', 'average_wage_by_uuid.head', 'average_wage_by_uuid.isin', 'average_wage_by_uuid.uu_id.average_wage_by_uuid.isin', 'average_wage_null_rows.head', 'average_wage_null_rows.unique', 'bigquery.Client', 'bigquery_client.query', 'classification_report', 'cleaned_df.all', 'cleaned_df.corr', 'cleaned_df.corr.round', 'cleaned_df.drop', 'cleaned_df.drop.head', 'cleaned_df.groupby', 'cleaned_df.groupby.agg', 'cleaned_df.head', 'cleaned_df.isnull', 'cleaned_df.isnull.sum', 'cleaned_df.pivot_table', 'cleaned_df.pivot_table.head', 'cleaned_df.pivot_table.round', 'cleaned_df.sort_values', 'cleaned_df.timeperiod.cleaned_df.groupby.sum', 'cleaned_df.timeperiod.cleaned_df.groupby.sum.add_prefix', 'cleaned_df.total_claims.cleaned_df.week_number.cleaned_df.uu_id.pd.crosstab.reset_index', 'cleaned_df.total_claims.cleaned_df.week_number.cleaned_df.uu_id.pd.crosstab.reset_index.fillna', 'cleaned_df.uu_id.unique', 'cleaned_df.uu_id.unique.count', 'cleaned_df.uu_id.unique.size', 'cleaned_df.week_number.Final_df.groupby.mean', 'cleaned_df.week_number.Final_df.groupby.mean.add_prefix', 'cleaned_df.week_number.Final_df.groupby.sum', 'cleaned_df.week_number.Final_df.groupby.sum.add_prefix', 'cleaned_df.week_number.cleaned_df.groupby.sum', 'cleaned_df.week_number.cleaned_df.groupby.sum.add_prefix', 'compare.head', 'data.head', 'df.corr', 'df.drop', 'df.drop_duplicates', 'df.groupby', 'df.head', 'df.iloc.to_numpy', 'df.sort_values', 'df.to_csv', 'df1.plot', 'df_actual_pred.head', 'df_group.first', 'df_numerics_only.drop', 'df_test.drop', 'df_train.drop', 'drop_duplicates.duplicated', 'drop_duplicates.duplicated.sum', 'drop_duplicates.fillna', 'drop_duplicates.fillna.head', 'drop_duplicates.groupby', 'drop_duplicates.groupby.agg', 'drop_duplicates.head', 'drop_duplicates.isna', 'drop_duplicates.isna.sum', 'drop_duplicates.isnull', 'drop_duplicates.isnull.any', 'drop_duplicates.isnull.sum', 'drop_duplicates.mean', 'drop_duplicates.mean.round', 'drop_duplicates.tail', 'drop_duplicates.uu_id.drop_duplicates.groupby.mean', 'drop_duplicates.uu_id.drop_duplicates.groupby.mean.isnull', 'drop_duplicatesf.mean', 'enumerate', 'features.head', 'fig.add_trace', 'fig.show', 'gender_by_uuid.head', 'gkk.first', 'go.Figure', 'go.Heatmap', 'grid.fit', 'gridcv_xgb.predict', 'groupby_uuid.head', 'groupby_uuid.mean.round', 'import', 'imputer.fit_transform', 'imputer.transform', 'int', 'le.fit_transform', 'len', 'linear_model.LinearRegression', 'list', 'mape', 'mdl.fit', 'mdl.predict', 'melt.head', 'melt_train.drop', 'melt_train.dropna', 'melt_train.groupby', 'melt_train.groupby.diff', 'melt_train.groupby.shift', 'melt_train.head', 'melt_train.melt_train.head', 'melt_train.tail', 'melt_valid.groupby', 'melt_valid.groupby.diff', 'melt_valid.groupby.shift', 'melt_valid.melt_valid.copy', 'melt_valid.tail', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model1.summary', 'name.cleaned_df.hist', 'name.dataset.hist', 'new_examples.columns', 'new_examples.head', 'np.abs', 'np.arange', 'np.array', 'np.isfinite', 'np.mean', 'np.ravel', 'np.sqrt', 'np.sum', 'ols', 'pd.DataFrame', 'pd.crosstab', 'pd.melt', 'pd.merge', 'pd.set_option', 'plt.bar', 'plt.barh', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.legend.head', 'plt.matshow', 'plt.plot', 'plt.show', 'plt.style.use', 'plt.subplot', 'plt.subplots', 'plt.text', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'plt.yticks', 'prediction_list.head', 'prediction_list.merge', 'print', 'pyplot.figure', 'pyplot.show', 'pyplot.subplot', 'pyplot.title', 'query_job.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'regressor.fit', 'regressor.predict', 'regressor.score', 'regressor.tolist', 'result.predict', 'round', 'sns.countplot', 'sns.distplot', 'sns.heatmap', 'sns.histplot', 'sns.pairplot', 'sns.relplot', 'sns.set', 'sns.set_style', 'split_point.melt.melt.copy', 'str', 'total_claims_prediction.head', 'total_claims_prediction.mean.round', 'total_claims_prediction.rename', 'total_claims_prediction.round', 'total_claims_prediction.to_csv', 'total_claims_prediction.total_claims.round', 'total_claims_prediction_week_39.head', 'total_claims_prediction_week_39.rename', 'total_claims_prediction_week_39.replace', 'total_claims_prediction_week_39.total_claims.round', 'total_claims_prediction_week_40.apply', 'total_claims_prediction_week_40.head', 'total_claims_prediction_week_40.isnull', 'total_claims_prediction_week_40.isnull.sum', 'total_claims_prediction_week_40.rename', 'total_claims_prediction_week_40.round', 'total_claims_prediction_week_40.to_csv', 'total_claims_prediction_week_40.total_claims.round', 'train_test_split', 'unemployment_data.describe', 'unemployment_data.duplicated', 'unemployment_data.duplicated.sum', 'unemployment_data.head', 'unemployment_data.merge', 'unemployment_data.query', 'unemployment_data.to_csv', 'unique', 'uu_id.average_wage_by_uuid.isin', 'uuid_claims_df.groupby', 'uuid_claims_df.groupby.agg', 'uuid_claims_df.head', 'uuid_claims_df.prediction_total_claims.round', 'wage_data.head', 'wage_data.to_csv', 'warnings.filterwarnings', 'wmape', 'x_test._get_numeric_data', 'x_train._get_numeric_data', 'xgb.XGBClassifier', 'xgb.XGBRegressor', 'xgb_model.fit', 'xgboost.XGBClassifier', 'y_pred.flatten', 'y_test.flatten', 'y_test.values.head', 'y_train.np.ravel.X_train._get_numeric_data.xgb_model.fit.predict', 'y_train.np.ravel.x_train._get_numeric_data.xgb_model.fit.predict']"
jdsk789,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.drop', 'data.dropna', 'data.head', 'import', 'pred.head', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'query_job4.to_dataframe', 'unem.head', 'unemployment.head', 'wage.head']"
jennapl,10,"['LinearRegression', 'X_train.head', 'a.head', 'a.plot', 'a.unique', 'ax1.plot', 'bar', 'bigquery.Client', 'bigquery_client.query', 'data.head', 'data.values.reshape', 'df.df.loc.groupby', 'df.df.loc.groupby.count', 'df.filter', 'df.groupby', 'df.groupby.count', 'df.groupby.mean', 'df.groupby.sum', 'df.sort_values', 'df.sort_values.groupby', 'df.sort_values.groupby.count', 'head', 'import', 'len', 'np.array', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.DataFrame', 'plt.bar', 'plt.barchart', 'plt.barplot', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'print', 'query_job.to_dataframe', 'regressor.fit', 'sort', 'train_test_split', 'unemp.DataFrame', 'unemp.count', 'unemp.filter', 'unemp.groupby', 'unemp.groupby.Tract.value_counts', 'unemp.groupby.Tract.value_counts.nlargest', 'unemp.groupby.filter', 'unemp.groupby.len', 'unemp.head', 'unemp.plot', 'unemp.sum', 'unemp.tail', 'unemp.to_dataframe', 'unemp.unemp.dropNA', 'unemp.unemp.dropna', 'unemp.unemp.filter.groupby', 'unemp.unemp.groupby.mean', 'unemp.unemp.groupby.mean.plot', 'unemp.unemp.groupby.mean.print', 'unemp.unemp.loc.head', 'unemp.value_counts', 'unemp.values.reshape', 'y.head']"
jialincheoh,10,"['AutoModel.from_pretrained', 'AutoTokenizer.from_pretrained', 'GridSearchCV', 'MSE', 'bigquery.Client', 'bigquery_client.query', 'client.list_tables', 'create_pooled_embedding_df', 'data.keys', 'df.drop', 'df.head', 'df.symptoms.apply', 'df_test.drop', 'df_train.drop', 'diseases.append', 'flatten', 'format', 'grid.fit', 'grid.predict', 'gridcv_xgb.predict', 'import', 'j.read', 'join', 'json.loads', 'len', 'list', 'model', 'np.sqrt', 'open', 'output.pooler_output.detach', 'output.pooler_output.detach.numpy', 'pd.DataFrame', 'pd.DatetimeIndex', 'plot_importance', 'plt.legend', 'plt.plot', 'plt.style.use', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'sns.set_style', 'specialties.append', 'symptoms.append', 'tokenizer', 'torch.device', 'torch.linspace', 'torch.rand', 'torch.randn', 'torch.sin', 'unemployment_data.head', 'unemployment_data.nunique', 'wage_data.head', 'xgb.XGBRegressor']"
jmahedy1,10,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'df.mean', 'example_function', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'unemploymentData.head', 'y.plot', 'y_pred.plot', 'zip']"
josephwildey,10,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
jverduzc,10,"['Dense', 'Dropout', 'IterativeImputer', 'KernelRidge', 'KernelRidge.fit', 'LinearRegression', 'LinearRegression.fit', 'LogisticRegression', 'LogisticRegression.fit', 'OneHotEncoder', 'RandomForestRegressor', 'RandomForestRegressor.fit', 'SGDRegressor', 'Sequential', 'StandardScaler', 'ax.flatten', 'ax.legend', 'ax.scatter', 'bigquery.Client', 'bigquery_client.query', 'complete_unemployment_prediction_data.drop', 'complete_unemployment_prediction_data.drop_duplicates', 'data.apply', 'data.astype', 'data.corr', 'data.corr.round', 'data.drop', 'data.groupby', 'data.groupby.apply', 'data.head', 'data.set_index', 'data.std', 'data.tail', 'data.unique', 'data.values.np.array.reshape', 'data.values.reshape', 'data.values.reshape.list.tract_name_encoder.transform.toarray', 'df.head', 'df.tail', 'display', 'final_prediction_data.drop', 'final_prediction_data.isna', 'final_prediction_data.isna.sum', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'future_weeks_pred.round', 'g.columns.g.loc.copy', 'g.fillna', 'g.head', 'g.mean', 'g.merge', 'grouped_data.groups.keys', 'i.split', 'i.split.split', 'i.split.strip', 'i.split.strip.split', 'imp.fit', 'imp.transform', 'import', 'initializers.RandomNormal', 'initializers.Zeros', 'inputs.drop', 'inputs.head', 'keras.optimizers.Adam', 'krr_model.fit', 'l_mae.round', 'l_mape.round', 'len', 'lin_model.predict', 'linear_model.Lasso', 'linear_model.Lasso.fit', 'list', 'logistic_model.fit', 'logistic_model.predict', 'make_pipeline', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.r2_score', 'new_data.head', 'nn_mae.round', 'nn_mape.round', 'nn_model.add', 'nn_model.compile', 'nn_model.fit', 'nn_model.predict', 'nn_model.summary', 'np.array', 'np.clip', 'np.round', 'parameters.RandomForestRegressor.fit', 'pd.DataFrame', 'pd.concat', 'pd.plotting.lag_plot', 'pd.set_option', 'pd.unique', 'plt.figure', 'plt.legend', 'plt.make_subplots', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'print', 'prnint', 'query_from_statement', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'rf_mae.round', 'rf_mape.round', 'rf_model.predict', 'sgd_mape.round', 'sgd_model.fit', 'sgd_model.predict', 'sklearn.linear_model.Lasso', 'sklearn.linear_model.Lasso.fit', 'sns.heatmap', 'str', 'sum', 'supplement_testing_data.drop', 'supplement_testing_data.set_index', 'svm.SVR', 'svm.SVR.fit', 'svm_mape.round', 'svm_model.fit', 'svm_model.predict', 'time_i.np.array.shift', 'time_i.shift', 'tmp.copy', 'tract_name_encoder.fit', 'tract_name_encoder.fit_transform', 'tract_name_encoder.transform', 'train_test_split', 'type', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.groupby', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_claims_data.set_index', 'unemployment_claims_data.sort_values', 'unemployment_prediction_data.drop', 'unemployment_prediction_data.drop_duplicates', 'unemployment_prediction_data.head', 'unemployment_prediction_data.isna', 'unemployment_prediction_data.isna.sum', 'unemployment_prediction_data.join', 'unemployment_prediction_data.to_csv', 'unemployment_wage_data.drop_duplicates', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.set_index', 'y.ravel', 'y_train.ravel']"
jz322,10,"['BIGQUERY.Client', 'BIGQUERY_PROJECT.Client', 'bigquery.Client', 'bigquery_client.query', 'data.Client', 'df.mean', 'import', 'pandas.DataFrame', 'print', 'query_job.to_dataframe']"
kasyaprk,10,"['bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.describe', 'data.drop', 'data.head', 'data.info', 'data.isnull', 'data.isnull.sum', 'data.shape', 'i.data.isnull', 'i.data.isnull.sum', 'i.data.value_counts', 'import', 'l.append', 'len', 'plt.figure', 'plt.show', 'print', 'query_job.to_dataframe', 'race_white.data.isnull', 'sns.countplot', 'sns.heatmap', 'sum']"
katldewitt,10,[]
kborgen37,10,"['bigquery.Client', 'bigquery_client.query', 'csv.writer', 'dict.fromkeys', 'exploreData.head', 'export.append', 'i.answers.insert', 'import', 'len', 'list', 'open', 'pd.set_option', 'plt.bar', 'plt.plot', 'predictionData.values.tolist', 'print', 'query_job.to_dataframe', 'set', 'statistics.mean', 'statistics.median', 'statistics.stdev', 'temp.append', 'testListx.append', 'testListy.append', 'tuple', 'unemploymentData.head', 'unemploymentData.values.tolist', 'uuid.append', 'uuid.count', 'values.append', 'write.writerow', 'write.writerows', 'x1.append', 'xCount.append', 'xValues.append', 'xValues.count', 'y.count', 'y1.append', 'y1.index']"
kd-2dvaghela,10,[]
konoikon,10,"['ProfileReport', 'Prophet', 'bigquery.Client', 'bigquery_client.query', 'df.drop', 'df.drop_duplicates', 'df.fillna', 'df.mean', 'import', 'm.add_seasonality', 'm.fit', 'm.make_future_dataframe', 'm.plot', 'm.predict', 'model.make_future_dataframe', 'new_prof.to_notebook_iframe', 'np.ceil', 'pd.DatetimeIndex', 'pd.to_datetime', 'prediction_list.head', 'preprocessing', 'print', 'profile.to_notebook_iframe', 'query_job.to_dataframe', 'str', 'type', 'unemployment_data.apply', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.head', 'unemployment_data.sort_values', 'wage_data.head']"
krongch2,10,"['COL_MAP', 'COL_MAP.d.dropna', 'COL_MAP.d.loc.reset_index', 'COL_MAP.dd.get_dummies', 'COL_MAP.g.dropna', 'COL_MAP.keys', 'ConvergenceWarning', 'IterativeImputer', 'LinearRegression', 'RandomForestRegressor', 'VAR', 'X.head', 'X.replace', 'a.groupby', 'abs', 'alpha.g.ewm.mean', 'arimax', 'arma.join', 'arma39.to_dict', 'arma_ewm.set_index', 'arma_week39.predicted_mean.astype', 'arma_week39.to_dict', 'avg.corr', 'ax.fill_between', 'ax.legend', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_xlim', 'ax.set_yabel', 'ax.set_ylabel', 'ax.set_ylim', 'ax.title', 'axs.legend', 'axs.set_ylabel', 'best_results.get_prediction', 'best_results.plot_diagnostics', 'bifquery.Client', 'bigquery.Client', 'bigquery_client.query', 'c.columns.difference', 'check', 'check_edu', 'clean', 'col.df.mean', 'col.g.isnull', 'col.g.isnull.all', 'col.gg.isnull', 'col.gg.isnull.all', 'colname.g.impute_logistic.copy', 'cols_numeric.d.loc.astype', 'combine', 'compare_arima', 'compare_ewm', 'compare_two_arima_rms', 'compared_ewm', 'cond1.all', 'cond2.cond1.all', 'convert_to_submission', 'covid19_cases_data.head', 'd.apply', 'd.astype', 'd.average_wage.isna', 'd.columns.difference', 'd.columns.differnce', 'd.corr', 'd.drop', 'd.dropna', 'd.fillna', 'd.filt.reset_index', 'd.get_subset.impute_industry.head', 'd.gropuby', 'd.groupby', 'd.groupby.apply', 'd.groupby.mean', 'd.groupby.sort_values', 'd.groupby.transform', 'd.interpolate', 'd.isnull', 'd.isnull.sum', 'd.items', 'd.join', 'd.keys', 'd.pd.to_datetime.astype', 'd.preprocess_xgb.isnull', 'd.preprocess_xgb.isnull.sum', 'd.replace', 'd.reset_index', 'd.sort_values', 'd.to_csv', 'd.total_claims.max', 'd.uu_id.unique', 'd.uu_ids.unique', 'd.values', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'datetime.datetime.strptime', 'datetime.strptime', 'dd.astype', 'dd.drop', 'dd.head', 'dd.index.pd.DatetimeIndex.to_period', 'dd.map', 'dd.plot', 'dd.set_index', 'dd.sort_values', 'dd.top_category_employer1.unique', 'dd.top_category_employer2.unique', 'dd.uu_id.unique', 'df.any', 'df.copy', 'df.copy.reset_index', 'df.fillna', 'df.iterrows', 'df.mean', 'df.replace', 'df.to_csv', 'df.to_dict', 'df.to_dict.iterrows', 'df.unique', 'df.uu_id.unique', 'df.values.tolist', 'df_imputed.drop', 'dict', 'dir', 'e.fillna', 'e.head', 'encoder.fit_transform', 'enumberate', 'enumerate', 'ewm.to_csv', 'f.sort_values', 'f.sort_values.reset_index', 'fig.tight_layout', 'fill_na_weeks', 'fill_na_weeks.d.groupby.apply.reset_index', 'fill_non_existing_weeks', 'fill_non_existing_weeks.d.groupby.apply.reset_index', 'filt', 'fit.predict', 'float', 'format', 'fsm.ols', 'g.any', 'g.apply', 'g.astype', 'g.columns.difference', 'g.concat', 'g.copy', 'g.copy.reset_index', 'g.drop', 'g.ewm', 'g.ewm.mean', 'g.ewm.mean.reset_index', 'g.iloc.values.mean', 'g.index.pd.DatetimeIndex.to_period', 'g.isnull', 'g.join', 'g.loc.impute_iterative.reset_index', 'g.method.unique', 'g.plot', 'g.replace', 'g.set_index', 'g.sort_values', 'g.to_dict', 'g.total_claims.mean', 'g.unique', 'g.values.tolist', 'g.week_number.unique', 'g_na.g.pd.concat.sort_values', 'get_all', 'get_avg_total_claims.d.groupby.apply.reset_index', 'get_best_params', 'get_cols', 'get_cols.d.copy', 'get_cols.d.loc.copy', 'get_cols.g.drop.astype', 'get_cols.gg.loc.head', 'get_cols.gg_replace.loc.head', 'get_covid', 'get_dummies', 'get_edu_cols', 'get_gender_cols', 'get_industry', 'get_industry_cols', 'get_mae', 'get_one_hot', 'get_prediction', 'get_race_cols', 'get_result_map', 'get_rms', 'get_subset', 'get_tables', 'get_train_test', 'get_unemployment', 'get_wage', 'get_week_number_map', 'gg.columns.difference', 'gg.copy', 'gg.drop', 'gg.dropna', 'gg.impute_func.head', 'gg.impute_iterative.head', 'gg.impute_rowsum.head', 'gg.plot', 'grid.best_estimator_.predict', 'grid.fit', 'grp.fsm.ols.fit', 'imp.apply', 'imp.to_csv', 'imp_tot.groupby', 'imp_tot.groupby.apply', 'imp_tot.to_csv', 'import', 'imput', 'impute', 'impute.d.groupby.apply.reset_index', 'impute_all', 'impute_all.imp_tot.groupby.apply.reset_index', 'impute_all.raw.groupby.apply.reset_index', 'impute_all.raw_full.groupby.apply.reset_index', 'impute_func', 'impute_industry', 'impute_industry.d.groupby.apply.reset_index', 'impute_iterative', 'impute_logistic', 'impute_mice', 'impute_rowsum', 'impute_total_claims.raw_full.groupby.apply.reset_index', 'imputer.fit_transform', 'impyute.imputation.cs.mice', 'insert_na_week_number', 'insert_na_week_number.raw.groupby.apply.reset_index', 'int', 'iter_cat', 'itertools.product', 'l.append', 'l.pd.DataFrame.reset_index', 'l.pd.DataFrame.sort_values', 'last.to_dict', 'last_week_number.x.week_number.x.loc.copy', 'len', 'list', 'load_clean', 'load_data', 'load_data_full', 'load_ewm', 'load_imp', 'load_imp_industry', 'load_imp_tot', 'load_raw', 'load_raw.isnull', 'load_raw.isnull.sum', 'load_raw_full', 'max', 'max_avail_week_number.x.week_number.x.loc.copy', 'min', 'mod.fit', 'model.fit', 'model.get_params', 'model.predict', 'model.score', 'model.select_order', 'moving_average', 'np.abs', 'np.arange', 'np.arange.print.map', 'np.array', 'np.cumsum', 'np.isnan', 'np.linspace', 'np.random.randn', 'np.range', 'optimize_xbg', 'optimize_xgb', 'os.path.isfile', 'others.sum', 'p.astype', 'p.fillna', 'p.iterrows', 'p.map', 'p.replace', 'p.to_csv', 'p.total_claims.isna', 'p.uu_id.unique', 'pandas.DataFrame', 'pd.DataFrame', 'pd.DateOffset', 'pd.DatetimeIndex', 'pd.Series', 'pd.Timestamp', 'pd.concat', 'pd.get_dummies', 'pd.plotting.autocorrelation_plot', 'pd.read_csv', 'pd.set_option', 'pd.to_datetime', 'plot', 'plot_arima_linear', 'plot_avg_total_claims', 'plot_cat', 'plot_edu', 'plot_impute', 'plot_impute_iterative', 'plot_industry', 'plot_regression', 'plot_rf', 'plot_varmax', 'plot_xbg', 'plot_xgb', 'plt.close', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.tight_layout', 'pred.conf_int', 'pred.predicted_mean.plot', 'predict', 'predict_all', 'preprocess_xgb', 'print', 'print_impute', 'print_impute_cat', 'print_impute_rowsum', 'proprocess_xgb', 'query', 'query_job.to_dataframe', 'r.astype', 'r.set_index', 'r.to_csv', 'range', 'raw.drop', 'raw.drop_duplicates', 'raw.duplicated', 'raw.gropuby', 'raw.gropuby.apply', 'raw.group', 'raw.groupby', 'raw.groupby.apply', 'raw.loc.duplicated', 'raw.replace', 'raw.reset_index', 'raw.sort_values', 'raw.to_csv', 'raw.top_category_employer1.isna', 'raw.uu_id.unique', 'raw.week_number.unique', 'raw_full.groupby', 'raw_full.groupby.apply', 'raw_full.to_csv', 'read_data', 'reg.fit', 'reg.predict', 'regression.fit', 'replace_na_cols', 'replace_nan_cols', 'result.week_number.max', 'result_rf.to_csv', 'results.forecast', 'results.get_prediction', 'results.plot', 'results.plot_acorr', 'results.plot_diagnostic', 'results.plot_diagnostics', 'results.plot_forcast', 'results.plot_forecast', 'results.predict', 'results.summary', 'results.summeary', 'results.summery', 'results.to_csv', 'rf.fit', 'rf.predict', 'rf_industry', 'rf_industry.d.groupby.apply.reset_index', 'rf_industry_wrap', 'rf_industry_wrap.d.groupby.apply.reset_index', 'row.isna', 'row.isna.row.index.map', 'row.isna.row.map', 'row.isna.sum', 'row.np.array.isna', 'row.np.array.isna.sum', 'row.np.array.isnull', 'row.np.array.isnull.sum', 'row.values', 'row.values.isna', 'row.values.isnan', 'row.values.np.array.isnull', 'row.values.np.array.isnull.sum', 'rr.to_dict', 'run_rf', 'run_rf_all', 'run_var', 'run_var.d.groupby.apply.reset_index', 'run_var_all', 'run_varmax', 'run_xbg', 'run_xgb', 'run_xgb_all', 'run_xgb_old', 's.map', 'series.map', 'simplefilter', 'sk.model_selection.GridSearchCV', 'sklearn.ensemble.RandomForestRegressor', 'sklearn.ensemble.RandomForestRegressor.fit', 'sklearn.impute.IterativeImputer', 'sklearn.impute.SimpleImputer', 'sklearn.linear_model.LinearRegression', 'sklearn.linear_model.LogisticRegression', 'sklearn.linear_model.LogisticRegression.fit', 'sklearn.model_selection.GridSearchCV', 'sklearn.model_selection.train_test_split', 'sklearn.preprocessing.LabelEncoder', 'sklearn.proprocessing.LabelEncoder', 'sm.tsa.VARMAX', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'sns.set', 'sorted', 'str', 'sum', 't.to_csv', 'temp.astype', 'temp.to_dict', 'test', 'test.fillna', 'test.plot', 'test_ewm', 'test_moving_average', 'total_claims.tail', 'train.drop', 'train_test_split', 'tt.drop', 'type', 'u.county_fips.unique', 'u.countyfips.unique', 'u.edu_8th_or_less.isna', 'u.join', 'u.sort_values', 'u.to_csv', 'u.tract.unique', 'u.tract_name.unique', 'u.uu_id.unique', 'u.uuid.unique', 'var.fit', 'var.select_order', 'varmax', 'w.to_csv', 'w.uu_id.average_wage', 'w.uu_id.unique', 'warnings.filterwarnings', 'warnings.simplefilter', 'week_number.g.week_number.g.loc.to_dict', 'week_number_to_date', 'week_number_to_datetime', 'weeknumber.g.week_number.g.loc.to_dict', 'weights.items', 'weights.values', 'ww.set_index', 'x.copy', 'x.dropna', 'x.dropna.mean', 'x.mean', 'x.mean.dropna', 'x.reset_index', 'x.shift', 'x.week_number.max', 'x.week_number.x.loc.copy', 'x_test.copy', 'xgb.XGBRegressor', 'xgb_next', 'y.any', 'y.corr', 'y.drop', 'y.plot', 'y.reset_index', 'y.values.ravel', 'y_pred.plot', 'y_train.get_dummies', 'y_train.ravel', 'y_train.uniques', 'y_train.values.ravel', 'y_train.values.uniques', 'ycol.g.copy', 'ycol.g.isnull', 'ycol.y_train.unique', 'yhat.copy', 'ylabel.g.astype']"
ktang,10,"['DataFrame', 'LinearRegression', 'LogisticRegression', 'SGDRegressor', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'covid19_cases_data.tail', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.append', 'df.mean', 'df_pred_list.head', 'df_pred_list.unique', 'df_schema.head', 'df_three_col.drop_duplicates', 'df_three_col.head', 'df_three_col.isin', 'df_three_col.sort_values', 'df_three_col.tail', 'df_three_col.to_csv', 'df_unemployment.head', 'df_unemployment.unique', 'df_unemployment.unique.sort', 'df_wage.head', 'example_function', 'head', 'import', 'int', 'isin', 'len', 'lgb.Dataset', 'lgb.plot_importance', 'lgb.train', 'load_boston', 'logisticRegr.fit', 'logisticRegr.predict', 'logreg.fit', 'logreg.predict', 'max', 'max_week.isin.test_data.test_data.values', 'max_week.test_data.isin.test_data.values', 'mean_squared_error', 'min', 'model.fit', 'model.predict', 'np.array', 'np.array.reshape', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.reshape', 'pandas.DataFrame', 'pandas.concat', 'pd.DataFrame', 'pd.Series', 'pd.concat', 'pd.to_datetime', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'print', 'query.to_dataframe', 'query_job.to_dataframe', 'query_job_un.to_dataframe', 'random.seed', 'range', 'reg.fit', 'reg.predict', 'res.append', 'res.concat', 'res.to_csv', 'seaborn.lmplot', 'sgdr.fit', 'sgdr.predict', 'sns.boxplot', 'sns.heatmap', 'sns.lmplot', 'sns.scatterplot', 'sorted', 'test_data.isin', 'test_data.mean', 'test_data.np.array.reshape', 'test_data.tail', 'test_data.to_numpy', 'test_data.tolist', 'test_data.values.np.array.reshape', 'train_test_split', 'week_id.isin.test_data.test_data.values', 'week_id.test_data.isin.test_data.values', 'y.plot', 'y_pred.plot', 'zip']"
kushald2805,10,"['LinearRegression', 'abs', 'ax', 'ax.figure', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.data_type', 'data.describe', 'data.drop', 'data.dtype', 'data.dtypes', 'data.head', 'data.isna', 'data.isna.sum', 'data.shift', 'data.value_counts', 'df.dtype', 'df.mean', 'figsize', 'figure', 'import', 'list', 'model.fit', 'model.predict', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Dataframe', 'pd.Series', 'pd.dtype', 'pd.set_option', 'pd.to_dataframe', 'pd.to_datetime', 'plt.figure', 'plt.figure.set_figwidth', 'plt.show', 'print', 'query_job.to_dataframe', 'set', 'sns.heatmap', 'type', 'y.plot', 'y_pred.plot']"
lawalogunfowora,10,"['LinearRegression', 'abs', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'columns_arima.append', 'columns_rel.append', 'const.show', 'cont.show', 'csv.DictReader', 'data.corr', 'data.data.to_list', 'data.drop_duplicates', 'data.fillna', 'data.gender_female.unique', 'data.gender_male.unique', 'data.gender_na.unique', 'data.head', 'data.info', 'data.plot', 'data.race_amerindian.unique', 'data.race_asian.unique', 'data.race_black.unique', 'data.race_hawaiiannative.unique', 'data.race_noanswer.unique', 'data.race_other.unique', 'data.sample', 'data.set_index', 'data.uu_id.unique', 'data_arima.groupby', 'data_arima.groupby.reset_index', 'data_arima.groupby.sum', 'data_arima.groupby.sum.reset_index', 'data_arima.head', 'data_arima.reset_index', 'data_arima.set_index', 'data_arima.to_DataFrame', 'data_arima.to_frame', 'data_arima.unique', 'data_arima.unique.to_list', 'data_dict.key', 'data_dict.keys', 'file_param.to_dict', 'file_seasonal.to_dict', 'filename.head', 'filename.to_dict', 'final_file.to_csv', 'first_trial.head', 'format', 'i.data_arima.data_arima.groupby', 'i.data_arima.data_arima.groupby.sum', 'i.data_arima.data_arima.groupby.sum.reset_index', 'import', 'itertools.product', 'j.set_index', 'key.results.forecast', 'len', 'list', 'max', 'min', 'mod.fit', 'model.fit', 'my_dict.keys', 'np.array', 'np.asarray', 'open', 'param_dict_copy.pd.DataFrame.to_csv', 'param_dict_copy.to_csv', 'pd.DataFrame', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.show', 'pred.append', 'pred.conf_int', 'pred.predicted_mean.plot', 'print', 'query_job.to_dataframe', 'rand_list.append', 'range', 'relevant_features.index.to_list', 'relevant_features.to_list', 'results.keys', 'seasonal_dict_copy.pd.DataFrame.to_csv', 'sm.tsa.statespace.SARIMAX', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'submit.head', 'submit.info', 'submit.uu_id.unique', 'submit.uu_id.unique.size', 'test_2.info', 'tuple', 'warnings.filterwarnings', 'x.data_dict.plot', 'x.results.forecast', 'x.results.get_prediction', 'x.results.plot_diagnostics', 'y.astype']"
linkthelord,10,"['Dense', 'Dropout', 'GradientBoostingRegressor', 'LE.fit_transform', 'LSTM', 'LSTM_regressor.add', 'LSTM_regressor.compile', 'LSTM_regressor.fit', 'LabelEncoder', 'RB_other.transform', 'RobustScaler', 'SC_other.fit_transform', 'SC_other.transform', 'Sequential', 'StandardScaler', 'a.drop', 'a.isna', 'a.isna.sum', 'a.select_dtypes', 'a.select_dtypes.columns.a.fillna', 'approximatedimputation', 'auto_arima', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bestp.append', 'bigquery.Client', 'bigquery_client.list_datasets', 'bigquery_client.query', 'c.drop', 'c.drop.reset_index', 'c.drop.to_csv', 'c_XTest.to_numpy', 'c_XTrain.astype', 'c_XTrain.to_numpy', 'c_YTrain.astype', 'col.df3.astype', 'col.df3.nunique', 'col.df3.str.replace', 'combined.drop', 'combined.dropna', 'combined.dtype', 'combined.fill_na', 'combined.fillna', 'combined.groupby', 'combined.groupby.sum', 'combined.groupby.sum.reset_index', 'combined.head', 'combined.iloc.drop', 'combined.isna', 'combined.isna.sum', 'combined.max.combined.combined.prediction.merge.to_csv', 'combined.max.combined.combined.prediction.pd.merge.drop_duplicates', 'combined.max.combined.combined.prediction.pd.merge.drop_duplicates.to_csv', 'combined.max.combined.combined.prediction.pd.merge.to_csv', 'combined.mean', 'combined.plot', 'combined.prediction.pd.merge.drop_duplicates', 'combined.prediction.pd.merge.drop_duplicates.to_csv', 'combined.prediction.pd.merge.to_csv', 'combined.rename', 'combined.to_csv', 'combinedd.drop', 'complete.i.complete.mean', 'complete.mean', 'covid19_cases_data.head', 'data.colname', 'data.colnames', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.unique', 'data.valuas', 'data.values', 'df.mean', 'df1.uu_id.nunique', 'df2.uu_id.nunique', 'df3.astype', 'df3.copy', 'df3.corr', 'df3.drop', 'df3.replace', 'df3.uu_id.nunique', 'df3.uu_id.unique', 'experiment.append', 'experiment.groupby', 'experiment.groupby.sum', 'experiment.groupby.sum.reset_index', 'experiment.unique', 'experiment.unique.prediction.prediction.loc.index.astype', 'f.read', 'firstgroup.combined.sum', 'format', 'gb.get_group', 'gbr.fit', 'gbr.predict', 'gbr.score', 'get_predictions', 'groups.append', 'groups.groupby', 'groups.groupby.sum', 'groups.groupby.sum.reset_index', 'groups.unique', 'groups.unique.prediction.prediction.loc.index', 'groups.unqiue', 'groups.values', 'head', 'i.combined.fillna', 'i.combined.mean', 'i.combined.mode', 'i.groups.groupby', 'i.groups.groupby.sum', 'i.groups.groupby.sum.reset_index', 'i.groups.unique', 'i.groups.unique.prediction.prediction.loc.index.astype', 'import', 'int', 'itertools.product', 'j.i.data.values.isna', 'l.append', 'len', 'line.split', 'list', 'max', 'mean', 'mean_squared_error', 'mod.fit', 'nn.Linear', 'nn.ReLU', 'np.array', 'np.asarray', 'np.insert', 'np.na', 'np.reshape', 'open', 'os.makedirs', 'pandas.DataFrame', 'pd.DataFrame', 'pd.get_dummies', 'pd.isna', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.legend', 'plt.show', 'pred.conf_int', 'pred.forecast', 'pred.predicted_mean', 'pred.predicted_mean.plot', 'prediction.columns.tolist', 'prediction.merge', 'prediction.to_csv', 'prediction.unique', 'prediction_list.copy', 'prediction_list.loc.to_csv', 'prediction_list.to_csv', 'prediction_sub.to_csv', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'range', 'regressor.predict', 'result_list.append', 'results.get_prediction', 'results.plot_diagnostics', 'results.summary', 'sc.fit_transform', 'sc.transform', 'secondgroup.combined.sum', 'self.MyNetwork.super.__init__', 'self.fc1', 'self.fc2', 'self.relu', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.lineplot', 'sns.scatterplot', 'stats.linregress', 'stepwise_fit.summary', 'str', 'subgroups.set_index', 'sum', 'super', 'temp.astype', 'thirdgroup.combined.sum', 'torch.rand', 'train_test_split', 'type', 'unique', 'warnings.filterwarnings', 'y.astype', 'y.plot']"
m-2dschnell,10,"['GridSearchCV', 'HistGradientBoostingRegressor', 'RandomForestRegressor', 'abs', 'bigquery.Client', 'bigquery_client.query', 'col.i.x.x.loc.mean', 'col.x.max', 'data.astype', 'data.corr', 'data.describe', 'data.drop', 'data.drop_duplicates', 'data.duplicated', 'data.factorize', 'data.fillna', 'data.fillna.head', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.race_amerindian.sum', 'data.set_index', 'data.sum', 'data.total_claims.sum', 'df.duplicated', 'format', 'grid.fit', 'gridcv_xgb.predict', 'import', 'itertools.product', 'len', 'li.append', 'list', 'mod.fit', 'model.compile', 'model.fit', 'model.predict', 'model.score', 'np.asarray', 'np.where', 'out_df.to_csv', 'pd.DataFrame', 'pd.Index', 'pd.to_datetime', 'pd.to_numeric', 'plt.figure', 'plt.show', 'pred.apply', 'pred.describe', 'pred.drop', 'pred.factorize', 'pred.head', 'pred.isin', 'pred.summary', 'pred.to_numeric', 'pred.x.x.loc.mean', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'results.summary', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'tf.keras.Sequential', 'tf.keras.layers.Dense', 'tf.keras.losses.SparseCategoricalCrossentropy', 'train_test_split', 'type', 'uu_id.factorize', 'x.astype', 'x.factorize', 'x.isin', 'x.max', 'x_train.fillna', 'xgb.XGBRegressor', 'y.astype', 'y.plot']"
manthankeim,10,"['Counter', 'N.rndperm.df.loc.copy', 'PCA', 'Pipeline', 'StandardScaler', 'TSNE', 'UMAP', 'ax.matshow', 'ax.scatter', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'ax.set_zlabel', 'ax.subplot.gca', 'axs.plot', 'axs.set_title', 'bigquery.Client', 'bigquery_client.query', 'chart_metrics.keys', 'col.df.plot', 'col.df_post.plot', 'col.df_pre.plot', 'credentials.Certificate', 'csv.writer', 'data.plot.bar', 'data.user_email.isin', 'data_active.apply', 'data_active.str.find', 'data_active.tolist', 'database.collection', 'database.collection.get', 'database.collection.where', 'datetime.now', 'df.apply', 'df.plot', 'df.to_csv', 'df_post.head', 'df_post.plot', 'df_post.set_color_cycle', 'df_pre.column', 'df_pre.columns', 'df_pre.head', 'df_pre.plot', 'dict', 'digits.target.astype', 'display', 'doc.id.lower', 'doc.id.str.database.collection.get', 'doc.to_dict', 'doc.to_dict.value_counts', 'docs.to_csv', 'draw_imports_subplots', 'dt', 'email_list.append', 'event.append', 'event.value_counts', 'exp_plot.participant.emotion.pn.Column.embed', 'feat_cols.i.rndperm.df.loc.values.reshape', 'feat_cols.i.rndperm.df.loc.values.reshape.astype', 'fetch_openml', 'fig.add_subplot', 'fig.add_trace', 'fig.gca', 'fig.show', 'fig.update_layout', 'fig.update_traces', 'fig_2d.show', 'fig_3d.show', 'fig_3d.update_traces', 'fig_means.add_trace', 'fig_means.show', 'fig_means.update_layout', 'file.read', 'final_plat.isin', 'final_plat.sum', 'final_plat.to_csv', 'firebase_admin.initialize_app', 'firestore.client', 'float', 'form.to_dict', 'format', 'go.Bar', 'go.Box', 'go.Figure', 'go.Scatter', 'go.scatter.Line', 'go.scatter.Marker', 'have_queried.apply', 'have_queried.str.find', 'hub_metrics_object', 'i.strip', 'i.strip.split', 'import', 'inactive.apply', 'inactive.str.find', 'inactive.to_list', 'len', 'list', 'load_digits', 'load_iris', 'load_wine', 'make_subplots', 'math.pow', 'metric.submission_group_means.append', 'metric.submission_means.append', 'my_ax.set_color_cycle', 'np.fromfile', 'np.random.permutation', 'np.random.seed', 'open', 'open.readlines', 'out', 'pandas.DataFrame', 'pca.fit_transform', 'pd.DataFrame', 'pd.ExcelFile', 'pd.concat', 'pipe.fit_transform', 'plot.legend_elements', 'plot_mean_line', 'plt.figure', 'plt.figure.gca', 'plt.gray', 'plt.legend', 'plt.scatter', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'pn.Column', 'pn.Widgets.IntSlider', 'pn.Widgets.Select', 'pn.depends', 'pn.widgets.IntSlider', 'pn.widgets.Select', 'post.parse', 'post_plot.plot', 'pre.parse', 'pre_plot.plot', 'print', 'print_hub_metrics_list', 'print_stats_result', 'print_t_result', 'px.bar', 'px.data.iris', 'px.line', 'px.scatter', 'px.scatter_3d', 'px.scatter_matrix', 'query_job.to_dataframe', 'range', 'read_json_file', 'run_submission_t_tests', 'scistats.ttest_ind', 'set', 'sns.color_palette', 'sns.scatterplot', 'stats.mean', 'stats.stdev', 'str', 'submissionId.submission_data.append', 'submissionId.submission_group_data.append', 'submission_t_test', 'subplot_labels.append', 'subplot_labels_arr.append', 't_test', 'temp_df.bar', 'temp_df.hvplot', 'temp_df.plot', 'ten_days.database.collection.where.stream', 'time.time', 'timedelta', 'torch.rand', 'tsne.fit_transform', 'type', 'umap_2d.fit', 'umap_2d.fit_transform', 'umap_2d.transform', 'umap_3d.fit_transform', 'user.lower', 'user_em.append', 'user_ids.append', 'user_metrics.keys', 'writer.writerows', 'x.most_common', 'y.most_common']"
mapldx,10,[]
meenwp,10,"['DataFrame', 'LinearRegression', 'X.columns.score', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'corrheatmap', 'covid19_cases_data.head', 'data.corr', 'data.corr.round', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'data.tail', 'data.values.np.array.reshape', 'des_stat', 'df.average_wage.unique', 'df.corr', 'df.describe', 'df.drop', 'df.dropna', 'df.dtypes', 'df.edu_8th_or_less.unique', 'df.edu_grades_9_11.unique', 'df.edu_hs_grad_equiv.unique', 'df.edu_unknown.unique', 'df.fillna', 'df.gender_female.unique', 'df.gender_male.unique', 'df.gender_na.unique', 'df.groupby', 'df.groupby.sum', 'df.head', 'df.info', 'df.isnull', 'df.isnull.any', 'df.mean', 'df.plot', 'df.race_amerindian.unique', 'df.unique', 'df2.dropna', 'display', 'employ_wage_data.score', 'example_function', 'final_prediction_data.drop', 'final_reg.fit', 'final_reg.predict', 'float', 'format', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'hist_claims', 'import', 'int', 'max', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.mean_squared_error', 'min', 'model.fit', 'model.predict', 'modelevaluation', 'np.array', 'np.sqrt', 'np.triu_indices_from', 'np.zeros_like', 'ols', 'ols.fit', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.merge', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'plt.xlabel', 'plt.ylabel', 'pred_claims.astype', 'prediction_data.drop', 'prediction_data.groupby', 'prediction_data.groupby.mean', 'prediction_data.head', 'prediction_list.head', 'prediction_list.to_csv', 'prediction_list.uu_id.unique', 'print', 'query_from_statement', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'reduce', 'reg.fit', 'reg.predict', 'reg.score', 'reg_model.summary', 'regressor.fit', 'regressor.predict', 'result.summary', 'round', 'sm.OLS', 'sns.boxplot', 'sns.distplot', 'sns.diverging_palette', 'sns.heatmap', 'sns.lineplot', 'sns.relplot', 'sns.set', 'sum', 'train_test_split', 'umemploy_wage_data.ols.fit', 'unemploy_predict.drop', 'unemploy_predict.head', 'unemploy_wage_data.corr', 'unemploy_wage_data.describe', 'unemploy_wage_data.drop', 'unemploy_wage_data.fillna', 'unemploy_wage_data.groupby', 'unemploy_wage_data.groupby.mean', 'unemploy_wage_data.groupby.sum', 'unemploy_wage_data.head', 'unemploy_wage_data.ols.fit', 'unemploy_wage_data.score', 'unemploy_wage_data.value.reshape', 'unemploy_wage_data.values.reshape', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_data', 'unemployment_data.head', 'unemployment_data.size', 'unemployment_data.uu_id.size', 'unemployment_data.uu_id.unique', 'unemployment_data.week_number.unique', 'unemployment_prediction_data.head', 'unemployment_prediction_data.join', 'unemployment_prediction_data.to_csv', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.ols.fit', 'unemployment_wage_data.set_index', 'wage_data.average_wage.fillna', 'wage_data.average_wage.isnull', 'wage_data.average_wage.isnull.any', 'wage_data.average_wage.mean', 'wage_data.average_wage.where.mean', 'wage_data.fillna', 'wage_data.groupby', 'wage_data.groupby.mean', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.any', 'wage_data.tract.unique', 'wage_data.uu_id.unique', 'wage_data2.head', 'y.plot', 'y_pred.flatten', 'y_pred.plot', 'y_test.flatten', 'zip']"
memoriahu,10,"['DecisionTreeClassifier', 'Index', 'RandomForestClassifier', 'RandomForestRegressor', 'X_grid.reshape', 'a.head', 'a.to_dataframe', 'abs', 'bigquery.Client', 'bigquery_client.query', 'clf.fit', 'data.drop', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.set_index', 'df.pred.join.to_csv', 'df_tmp.reset_index', 'dotfile.getvalue', 'dotfile.getvalue.pydotplus.graph_from_dot_data.write_png', 'employ.drop', 'employ.head', 'employ.head.describe', 'employ.iloc.drop', 'en', 'example_function', 'export_graphviz', 'fo.write', 'import', 'int', 'len', 'list', 'load_iris', 'make_regression', 'max', 'mean_squared_error', 'min', 'model.fit', 'np.arange', 'np.around', 'np.arrage', 'np.arrange', 'np.array', 'np.ceil', 'np.floor', 'np.mean', 'np.random.randint', 'np.random.uniform', 'np.rint', 'np.round', 'o.to_csv', 'open', 'os.system', 'overall.describe', 'overall.drop', 'overall.groupby', 'overall.groupby.sum', 'overall.groupby.sum.reset_index', 'overall.head', 'overview.head', 'pd.DataFrame', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.axis', 'plt.bar', 'plt.figure', 'plt.grid', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'pred.drop', 'pred.groupby', 'pred.head', 'pred.insert', 'pred.join', 'pred.set_index', 'pred.set_index.join', 'pred.to_csv', 'predictions.astype', 'predictions.head', 'predn.describe', 'predn.head', 'predn.join', 'print', 'pydotplus.graph_from_dot_data', 'q1.head', 'q1.top_category_employer1.replace', 'q1.top_category_employer2.replace', 'q1.top_category_employer3.replace', 'q2.head', 'qn1.reset_index', 'query1.bigquery_client.query.to_dataframe', 'query1.top_category_employer1.replace', 'query1.top_category_employer2.replace', 'query1.top_category_employer3.replace', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_jobb.to_dataframe', 'query_jobbb.to_dataframe', 'query_jobbbb.to_dataframe', 'regr.fit', 'regr.predict', 'regressor.fit', 'regressor.head', 'regressor.predict', 'regressor1.fit', 'regressor1.predict', 'rf.fit', 'rf.predict', 'round', 'str', 'sum', 'test_features.regressor.predict.astype', 'top_category_employer1.replace', 'top_category_employer2.replace', 'top_category_employer3.replace', 'train_test_split', 'tree.export_graphviz', 'tree.plot_tree', 'type', 'wage.head', 'week41.to_csv', 'x.any', 'x.len.any', 'x.max.any', 'x.min.any', 'x.np.array.reshape', 'x.reshape', 'x_test.regressor.predict.astype', 'y.np.array.reshape', 'y.reshape']"
moonooooo,10,"['Decimal', 'Exception', 'a.to_integral_value', 'bigquery.Client', 'bigquery_client.query', 'd.split', 'd.split.split', 'd.value', 'd.values', 'data.append', 'data.fillna', 'data.fillna.iloc', 'data.to_string', 'data_less_10w.append', 'data_missing.append', 'data_missing.drop_duplicates', 'data_missing.head', 'df.drop', 'df.sort_index', 'df.sort_index.reset_index', 'display', 'enumerate', 'fill_week4_and_week23', 'format', 'import', 'int', 'iter', 'len', 'list', 'mae_loss', 'map', 'next', 'np.absolute', 'np.around', 'np.array', 'np.mean', 'np.rint', 'np.round', 'num_of_uuids.np.array.sum', 'pd.DataFrame', 'pd.DataFrame.from_dict', 'pd.read_csv', 'pl_query_job.to_dataframe', 'plot_visit_count', 'plt.axhline', 'plt.bar', 'plt.barh', 'plt.eventplot', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.show', 'plt.text', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.ylabel', 'plt.yticks', 'pp.pprint', 'pp.print', 'pprint', 'pprint.PrettyPrinter', 'prediction_list.to_csv', 'print', 'query.bigquery_client.query.to_dataframe', 'query.bigquery_client.query.to_dataframe.head', 'query.bigquery_client.query.to_dataframe.to_string', 'query_all_total_claims', 'query_job.to_dataframe', 'query_job.to_dataframe.drop_duplicates', 'query_job.to_dataframe.drop_duplicates.to_numpy', 'query_job.to_dataframe.to_list', 'query_job.to_dataframe.to_numpy', 'range', 'raw_data_df_list.append', 'raw_total_claims_data.append', 'raw_total_claims_df.T.to_numpy', 'raw_total_claims_df.to_csv', 'result_to_csv.to_csv', 'round', 'row.np.array.mean', 'str', 'temp.head', 'temp.sort_index', 'temp.sort_index.reset_index', 'ten_35w_data.append', 'test.append', 'test.to_string', 'ud_query_job.to_dataframe', 'unemployement_data.columns', 'unemployement_data.columns.tolist', 'unemployement_data.head', 'unemployement_data.to_csv', 'unemployement_data.top', 'uuid.raw_total_claims_data.append', 'wage_data.head', 'wage_data.to_csv', 'warnings.filterwarnings', 'wd_query_job.to_dataframe', 'week_available.append', 'week_available.shape', 'week_number_count.T.style.hideIndex', 'week_number_count.T.style.hide_index', 'week_number_count.T.to_numpy', 'week_number_count.T.to_string', 'week_number_count.head', 'week_number_count.style.hide_index', 'week_number_count.to_dict', 'week_number_count.to_list', 'week_number_count.to_numpy', 'week_number_count.to_string', 'week_number_count_filled.append']"
nnonno,10,"['LinearRegression', 'bigquery.Client', 'bigquery_client.query', 'data.values.reshape', 'df.head', 'df1.plot', 'enumerate', 'enumerous', 'import', 'len', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'np.sqrt', 'pd.DataFrame', 'pd.isna', 'pd.unique', 'plt.grid', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_list.copy', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'train_test_split', 'unemployment_data.copy', 'unemployment_sample.drop', 'unemployment_sample.drop.to_numpy', 'unemployment_sample.drop.values.reshape', 'unemployment_sample.dropna', 'unemployment_sample.loc', 'unemployment_sample.to_numpy', 'wage_data.copy', 'wage_sample.drop', 'y_pred.flatten', 'y_test.flatten']"
oubotong,10,[]
raghu1996,10,"['A.score', 'ARIMA', 'ARIMA_model.plot_diagnostics', 'C_arr.append', 'GridSearchCV', 'Index', 'KNN_GV.fit', 'KNN_GV.score', 'KNeighborsClassifier', 'LabelEncoder', 'LinearRegression', 'MSE', 'OneHotEncoder', 'Print', 'R_arr.append', 'RandomForestRegressor', 'SARIMAX', 'SARIMAX_model.fit', 'SARIMA_model.plot_diagnostics', 'StandardScaler', 'X.astype', 'X.columns', 'X.drop', 'X_train.astype', 'X_train.columns', 'abs', 'actual.append', 'actual_nonstat.append', 'actual_stat.append', 'add.append', 'adfuller', 'ans.append', 'ans_df.sort_values', 'arange', 'auto_arima', 'ax.axvline', 'bigquery.Client', 'bigquery_client.list_datasets', 'bigquery_client.list_tables', 'bigquery_client.query', 'boundary_week.data.data.loc.dropna', 'boundary_week.data.data.loc.item', 'boundary_week.data.uuid.data.data.loc.max', 'boundary_week.data.uuid.data.data.loc.min', 'check_stationarity', 'check_stationary', 'client.list_tables', 'col.boundary_week.data.data.loc.asfloat', 'col.boundary_week.data.data.loc.astype', 'col.boundary_week.data.data.loc.dropna', 'col.boundary_week.data.data.loc.dropna.to_numpy', 'col.boundary_week.data.data.loc.dropna.to_numpy.reshape', 'col.boundary_week.data.data.loc.reshape', 'col.boundary_week.data.data.loc.reshape.astype', 'col.boundary_week.data.data.loc.to_numpy', 'col.boundary_week.data.data.loc.to_numpy.reshape', 'col.boundary_week.data.data.loc.values.reshape', 'col.boundary_week.data.data.loc.values.reshape.astype', 'col.data.diff', 'col.data.diff.dropna', 'col.data.dropna', 'col.df.isnull', 'col.df.isnull.sum', 'col.df.unique', 'col.merged_data.interpolate', 'col.merged_data.replace', 'col.ts_train.astype', 'cols.nextt.item', 'cols.prev.item', 'cols.train_data.fillna', 'cols.train_data.isnull', 'cols.train_data.isnull.sum', 'data.all', 'data.apply', 'data.asfreq', 'data.asfreq.fillna', 'data.astype', 'data.columns', 'data.data.loc.item', 'data.data.reset_index', 'data.diff', 'data.diff.apply', 'data.diff.diff', 'data.diff.dropna', 'data.diff.dropna.apply', 'data.drop', 'data.drop_duplicates', 'data.dropna', 'data.dtypes', 'data.fillna', 'data.head', 'data.interpolate', 'data.isna', 'data.isnull', 'data.isnull.sum', 'data.item', 'data.iterrows', 'data.max', 'data.max.item', 'data.plot', 'data.rolling', 'data.rolling.mean', 'data.rolling.std', 'data.set_index', 'data.shift', 'data.unique', 'data.values', 'data.values.apply', 'data2.eq', 'data2.iterrows', 'dataBalanceCheck', 'dataExplore', 'dataFillNa', 'dataIdentifyDateMonth', 'data_filtered.corr', 'data_lastWeek.drop_duplicates', 'data_lastWeek.set_index', 'data_new.plot', 'data_pred.astype', 'data_pred.drop', 'data_pred.head', 'data_pred.set_index', 'data_pred.set_index.join', 'data_pred_query.copy', 'data_train.apply', 'data_train.asfreq', 'data_train.diff', 'data_train.diff.diff', 'data_train.diff.diff.diff', 'data_train.diff.diff.diff.fillna', 'data_train.diff.diff.fillna', 'data_train.diff.fillna', 'data_train.drop', 'data_train.fillna', 'data_train.fillna.diff', 'data_train.fillna.len.range.i.i.reshape', 'data_train.get_dummies', 'data_train.group_by', 'data_train.group_by.interpolate', 'data_train.groupby', 'data_train.groupby.apply', 'data_train.groupby.interpolate', 'data_train.index.max', 'data_train.index.min', 'data_train.interpolate', 'data_train.iterrows', 'data_train.max', 'data_train.numpy', 'data_train.numpy.reshape', 'data_train.reindex', 'data_train.reshape', 'data_train.set_index', 'data_train.to_numpy', 'data_train.to_numpy.reshape', 'data_train.values.reshape', 'data_train_x_m1.astype', 'data_train_y.astype', 'data_valid.drop', 'data_valid_x_m1.astype', 'datetime.datetime.strptime', 'datetime_list.append', 'decompose_data.plot', 'decomposition.plot', 'df.index.max', 'df.index.min', 'df_reindexed.fillna', 'df_reindexed.fillna.interpolate', 'df_reindexed.interpolate', 'diff_inv', 'encoder.fit', 'encoder.transform', 'entry_count.append', 'entry_count.sort', 'enumerate', 'err_arr.append', 'errors.np.isnan.sum', 'exog.data_train.fillna', 'exog_col.boundary_week.data.data.loc.dropna', 'final_output.assign', 'final_output.astype', 'final_output.rename', 'final_output.reset_index', 'final_output.to_csv', 'final_test_data.assign', 'final_test_data.copy', 'final_test_data.drop', 'final_test_data.dropna', 'final_test_data.isnull', 'final_test_data.isnull.sum', 'final_test_data.iterrows', 'float.ts_train.astype.reshape', 'float.ts_train.astype.reshape.shape', 'float.ts_train.astype.shape', 'float.ts_train.astype.to_numpy', 'float.ts_train.astype.to_numpy.shape', 'float.ts_train.to_numpy.astype.shape', 'forecast', 'forecast_col.boundary_week.data.data.loc.dropna', 'format', 'get_datetime', 'grid.fit', 'gridcv_xgb.predict', 'id.data.data.isnull', 'id.data.data.isnull.all', 'id.merged_data.merged_data.sort_values', 'id.ts_data.ts_data.ts_data.loc.unique', 'id.ts_data.unique.ts_data.ts_data.loc.unique', 'id1.data2.eq.any', 'idd.merged_data.merged_data.loc.copy', 'idd.merged_data.merged_data.sort_values', 'idd.merged_data.merged_data.unique', 'idd.ts_data.ts_data.sort_index', 'ids.merged_data.merged_data.loc.copy', 'ids.merged_data.merged_data.loc.diff', 'ids.merged_data.merged_data.loc.diff.diff', 'ids.merged_data.merged_data.loc.diff.diff.diff', 'ids.merged_data.merged_data.loc.diff.diff.diff.dropna', 'ids.merged_data.merged_data.loc.diff.diff.dropna', 'ids.merged_data.merged_data.loc.diff.dropna', 'import', 'int', 'is_na.append', 'itertools.product', 'le.fit', 'le.inverse_transform', 'le.inversetransform', 'le.transform', 'le_emp1.fit', 'le_emp1.transform', 'le_emp2.fit', 'le_emp2.transform', 'le_emp3.fit', 'le_emp3.transform', 'le_tractname.fit', 'le_tractname.transform', 'le_uuid.fit', 'le_uuid.inverse_transform', 'le_uuid.transform', 'len', 'list', 'loss', 'loss_arr.append', 'mape.isnull', 'mape.isnull.sum', 'mape.np.isnan.sum', 'max', 'max_.seasonal.idxmin', 'max_week_no.data.data.item', 'max_week_no.data.data.loc.item', 'max_week_number.data.data.loc.item', 'max_week_number.item', 'max_week_number.ts_data.uuid.ts_data.ts_data.loc.item', 'merged_data.asfreq', 'merged_data.copy', 'merged_data.drop', 'merged_data.drop.drop_duplicates', 'merged_data.drop_duplicates', 'merged_data.dropna', 'merged_data.fillna', 'merged_data.head', 'merged_data.isnull', 'merged_data.isnull.sum', 'merged_data.len.unique', 'merged_data.merged_data.merged_data.loc.copy', 'merged_data.set_index', 'merged_data.sort_index', 'merged_data.unique', 'merged_data.unique.sort', 'merged_data.uu_id.unique', 'merged_data.week_number.unique', 'min', 'min_2.seasonal.idxmax', 'mod.fit', 'model', 'model.fit', 'model.fit_transform', 'model.get_forecast', 'model.predict', 'model.score', 'new_data.asfreq', 'new_data.asfreq.dropna', 'new_data.asfreq.fillna', 'new_data.drop_duplicates', 'new_data.dropna', 'nextt.item', 'np.abs', 'np.antilog', 'np.arange', 'np.asarray', 'np.exp', 'np.floor', 'np.isnan', 'np.log', 'np.log.data_train.apply.fillna', 'np.log10', 'np.log10.data_train.apply.fillna', 'np.matrix', 'np.mean', 'np.nanmean', 'np.range', 'np.reshape', 'np.round', 'np.sort', 'np.sqrt', 'np.sqrt.data_train.apply.fillna', 'np.where', 'np.zeros', 'onehot.fit_transform', 'out.unique', 'output.append', 'output_df.Metric.values', 'pd.DataFrame', 'pd.Dataframe', 'pd.DatetimeIndex', 'pd.Series', 'pd.concat', 'pd.date_range', 'pd.get_dummies', 'pd.isna', 'pd.merge', 'pd.series', 'pd.to_datetime', 'pd.unique', 'pdq.append', 'pdqs.append', 'plot_acf', 'plot_pacf', 'plt.axvline', 'plt.colorbar', 'plt.figure', 'plt.grid', 'plt.imshow', 'plt.legend', 'plt.plot', 'plt.savefig', 'plt.set_title', 'plt.show', 'plt.stem', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.xtickslabels', 'plt.ylabel', 'plt.yticks', 'pm.auto_arima', 'poission_model.fit', 'pred.append', 'pred_df.iterrows', 'pred_nonstat.append', 'pred_stat.append', 'prediction.item', 'prediction_data.copy', 'prediction_data.head', 'prediction_data.iterrows', 'prediction_out.astype', 'prepocessing.LabelEncoder', 'preprocessing.LabelEncoder', 'prev.item', 'print', 'print_column_info', 'print_na_info', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'query_job4.to_dataframe', 'query_job_pred.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'req.item', 'result.summary', 'rf.fit', 'rf.predict', 'rf1.fit', 'rf1.predict', 'rolling_mean.shift', 'round', 'row.item', 'row.item.pred_df.pred_df.loc.item', 'row.pred_df.pred_df.item', 'row.pred_df.pred_df.loc.item', 'sarimax_forecast', 'sarimax_gridsearch', 'scaler.fit', 'scaler.transform', 'seaborn.heatmap', 'seasonal.idxmax', 'seasonal.idxmin', 'seasonal.plot', 'seasonal_decompose', 'series.copy', 'series_undifferenced.cumsum', 'sm.GLM', 'sm.families.Poisson', 'sm.tsa.statespace.SARIMAX', 'start_week.data.boundary_week.data.data.loc.copy', 'start_week.data.boundary_week.data.data.loc.drop', 'start_week.ts_data.uuid.ts_data.ts_data.loc.copy', 'start_week_nonstat.ts_data.uuid.ts_data.ts_data.loc.copy', 'start_week_stat.ts_data.uuid.ts_data.ts_data.loc.copy', 'stat.append', 'str', 'test.drop', 'timeseries_data.head', 'timeseries_data.iterrows', 'timestamp_data.iterrows', 'tot_claims.append', 'total_claims.item', 'total_claims_list.append', 'train.drop', 'train_data.assign', 'train_data.drop', 'train_data.drop_na', 'train_data.dropna', 'train_data.eval', 'train_data.fillna', 'train_data.interpolate', 'train_data.isnull', 'train_data.isnull.sum', 'train_data.iterrows', 'train_data.sort_values', 'train_data.str.strip', 'train_data.unique', 'train_test_split', 'ts_data.asfreq', 'ts_data.drop_duplicates', 'ts_data.head', 'ts_data.rolling', 'ts_data.rolling.mean', 'ts_data.rolling.std', 'ts_data.sort_index', 'ts_data.unique', 'ts_data.uuid.ts_data.ts_data.loc.copy', 'ts_test.append', 'ts_test.ts_test.item', 'ts_test.ts_test.loc.item', 'ts_test_ex.astype', 'ts_train.astype', 'ts_train.drop_index', 'ts_train.max', 'ts_train.min', 'ts_train.numpy', 'ts_train.reset_index', 'ts_train.shape', 'ts_train.to_numpy', 'ts_train.to_numpy.astype', 'ts_train.to_numpy.shape', 'ts_train.values.astype', 'ts_train_ex.astype', 'ts_trainex.astype', 'unemployment_data.copy', 'unemployment_data.head', 'unemployment_data.unique', 'useful_data.astype', 'useful_data.drop', 'useful_data.fillna', 'useful_data.reshape', 'useful_data.to_numpy', 'useful_data.to_numpy.reshape', 'useful_data.toarray', 'useful_data.toarray.reshape', 'uu_id.ts_data.ts_data.rolling', 'uu_id.ts_data.ts_data.rolling.mean', 'uu_id_const.train_data.train_data.loc.unique', 'uu_id_const.vis_data.vis_data.loc.unique', 'uu_id_const.vis_data.week.vis_data.vis_data.loc.total_claims.item', 'uuid.ts_data.s_data.loc.rolling', 'uuid.ts_data.s_data.loc.rolling.std', 'uuid.ts_data.ts_data.loc.copy', 'uuid.ts_data.ts_data.loc.rolling', 'uuid.ts_data.ts_data.loc.rolling.mean', 'uuid.ts_data.ts_data.loc.rolling.std', 'uuid.ts_data.ts_data.loc.unique', 'uuid.ts_data.ts_data.rolling', 'uuid.ts_data.ts_data.rolling.mean', 'uuid_list.append', 'val.sort_values', 'val.val.rows', 'vals.items', 'values1.items', 'vis_data.append', 'vis_data.drop', 'vis_data.drop.drop_duplicates', 'vis_data.fillna', 'vis_data.isin', 'vis_data.isnull', 'vis_data.isnull.sum', 'vis_data.plot', 'vis_data.reset_index', 'vis_data.set_index', 'vis_data.set_index.reindex', 'vis_data.sort_values', 'vis_data.unique', 'vis_data.vis_data.loc.sort_values', 'vis_data.week_number.unique', 'wage_data.head', 'wage_data.unique', 'warnings.filterwarnings', 'warnings.simplefilter', 'week.data.data.reset_index', 'week_no_list.append', 'week_number.ts_data.uuid.ts_data.ts_data.loc.item', 'week_number.ts_data.uuid.ts_data.ts_data.loc.max', 'week_number_list.append', 'weeks.append', 'x.interpolate', 'xgb.XGBRegressor', 'y.astype', 'y.columns', 'y.isnull', 'y.isnull.sum', 'y.item', 'y.items', 'y.value', 'y.values', 'y_pred.conf_int', 'y_pred_df.data.data.loc.item', 'y_test.np.isnan.sum']"
reevapatel,10,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.describe', 'data.drop', 'data.head', 'data.info', 'data.plot', 'data_3.drop', 'df.mean', 'final_training_data.drop', 'final_training_data.dropna', 'final_training_data.head', 'hash', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.get_dummies', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'y.plot', 'y_pred.plot']"
rithvikd24,10,"['bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.head', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'unemployment_data.head', 'wage_data.head']"
rpresent,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'prediction_list.head', 'prediction_list.to_csv', 'query_job.to_dataframe', 'unemployment_data.describe', 'unemployment_data.head', 'unemployment_data.summary', 'unemployment_data.total_claims.describe', 'unemployment_data.total_claims.summary', 'wage_data.head']"
saikrishna99-2dcreator,10,['import']
sanket1105,10,"['ARIMA', 'GridSearchCV', 'LinearRegression', 'MAPE', 'RandomForestRegressor', 'RandomizedSearchCV', 'X.copy', 'X2.apply', 'XGBRegressor', 'a.data.replace', 'a.data.str.replace', 'a.data.str.split', 'a.unique', 'bigquery.Client', 'bigquery_client.query', 'breakcolumn', 'data.copy', 'data.drop', 'data.head', 'data.info', 'data.isna', 'data.isna.sum', 'data.replace', 'data.replce', 'data.str.split', 'data.uu_id.head', 'data1.copy', 'data1.drop', 'data1.fillna', 'data1.head', 'data1.info', 'data1.nunique', 'data2.drop', 'data2.drop_duplicates', 'data2.groupby', 'data2.head', 'data2.index.nunique', 'data2.join', 'data2.nunique', 'data2.set_index', 'data2.unique', 'data2.uu_id.nunique', 'data2.uu_is.nunique', 'df.astype', 'df.convert_dtypes', 'df.dtype', 'df.fillna', 'df.info', 'df.str.split', 'df.type', 'df1.copy', 'df1.drop', 'df2.apply', 'df2.drop', 'df3.drop_duplicates', 'df3.head', 'final_data.head', 'final_prediction.drop', 'final_prediction.head', 'final_prediction.info', 'final_prediction.reset_index', 'future_weeks_pred.astype', 'grid_search.fit', 'grid_search.predict', 'i.data1.replace', 'import', 'int', 'iterator.mean', 'iterator.std', 'iterator.std.iterator.mean.iterator.round', 'k.first', 'k.head', 'k.isna', 'k.isna.sum', 'k.tail', 'k.uu_id.pd.unique.sum', 'label_encoder.fit_transform', 'len', 'linreg.fit', 'linreg.predict', 'list', 'max', 'max_depth.append', 'mean_squared_error', 'model.fit', 'np.abs', 'np.cumsum', 'np.linspace', 'np.mean', 'np.nunique', 'np.random.randn', 'np.round', 'pd.DataFrame', 'pd.merge', 'pd.nunique', 'pd.option_context', 'pd.set_option', 'pd.to_numeric', 'pd.unique', 'plt.figure', 'plt.legend', 'plt.plot', 'prediction.pd.DataFrame.head', 'prediction.set_index', 'prediction.to_csv', 'prediction.uu_id.nunique', 'preprocessing.LabelEncoder', 'print', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'range', 'regressor.fit', 'regressor.predict', 'rf_random.fit', 'rfr.fit', 'rfr.predict', 'round', 'set', 'str.df.astype.astype', 'train_test_split', 'unemployment_data.copy', 'unemployment_data.drop_duplicates', 'unemployment_data.duplicated', 'unemployment_data.head', 'wage_data.drop_duplicates', 'wage_data.head', 'xgb.XGBRegressor', 'xgb_grid.fit', 'xgb_grid.predict']"
sawula,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
sbrunswi,10,[]
shahryarbq,10,"['LinearRegression', 'OneHotEncoder', 'SimpleImputer', 'X.corr', 'X.head', 'X.pd.DataFrame.corr', 'X.pd.dataFrame.corr', 'X.pd.dataframe.corr', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.mean', 'enc.fit_transform', 'imp.fit_transform', 'import', 'information_data.head', 'len', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.dataFrame', 'pd.dataframe', 'pd.get_dummies', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'unemployment_data.corr', 'unemployment_data.drop', 'unemployment_data.head', 'unemployment_data.set_index', 'wage_data.corr', 'wage_data.head', 'y.plot', 'y_pred.plot', 'zip']"
shangjia35,10,"['bigquery.Client', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'plt.figure', 'plt.legend', 'plt.plot', 'print']"
shlok2002,10,"['bigquery.Client', 'bigquery_client.query', 'df.describe', 'df.head', 'df.value_counts', 'df.value_counts.group', 'import', 'pd.set_option', 'query_job.to_dataframe']"
shuuul,10,"['bigquery.Client', 'import', 'plt.style.use', 'sns.set_style']"
sogunmod,10,"['np.cumsum', 'np.linspace', 'np.random.randn', 'print']"
souradipp76,10,[]
tame0001,10,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.head', 'df.mean', 'df.to_csv', 'get_data', 'import', 'int', 'len', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Dataframe', 'plt.figure', 'plt.legend', 'plt.plot', 'pred._to_csv', 'pred.to_csv', 'pred.to_list', 'pred.to_list.apply', 'pred.to_numpy', 'pred.to_numpy.as_type', 'pred.to_numpy.astype', 'prediction_list.groupby', 'print', 'query_job.to_dataframe', 'sub.to_list', 'submission.head', 'type', 'unemploy.groupby', 'unemploy.groupby.apply', 'unemploy.groupby.get_group', 'unemploy.groupby.mean', 'unemploy.groupby.mean.apply', 'unemployment.head', 'unemployment.unemployment.sort_by', 'unemployment.unemployment.sort_values', 'unemployment.unemployment.sort_values.drop_duplicates', 'unemployment.unemployment.sort_values.ewm', 'unemployment.unemployment.sort_values.ewm.mean', 'unemployment.unemployment.sort_values.ewm.mean.dtype', 'unemployment.unemployment.sort_values.ewm.mean.tail', 'unemployment.unemployment.sort_values.ewm.mean.to_numpy', 'unemployment.unemployment.sort_values.mean', 'unemployment.unemployment.sort_values.mean.apply', 'unemployment.unemployment.sort_values.tail', 'unemployment.unemployment.sortby', 'wage.head', 'x.sort_values', 'x.sort_values.drop_duplicates', 'x.sort_values.drop_duplicates.ewm', 'x.sort_values.drop_duplicates.ewm.mean', 'x.sort_values.drop_duplicates.ewm.mean.to_numpy', 'x.sort_values.ewm', 'x.sort_values.ewm.mean', 'x.sort_values.ewm.mean.to_numpy', 'x.sort_values.tail']"
tigr-2d10,10,"['DataFrame', 'LinearRegression', 'abs', 'array.reshape', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'cols_plot.unemployment_claims_data.plot', 'cols_plot.unemployment_wage_data.plot', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.head', 'df1.plot', 'final_reg.fit', 'final_reg.predict', 'final_regressor.fit', 'final_regressor.predict', 'float', 'import', 'max', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'min', 'model.fit', 'model.predict', 'np.DataFrame', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.sqrt', 'pd.DataFrame', 'pd.Series', 'pd.merge', 'pd.to_datetime', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'pred_claims.astype', 'prediction_data.drop', 'prediction_data.groupby', 'prediction_data.groupby.mean', 'prediction_data.head', 'prediction_list.head', 'prediction_list.to_csv', 'print', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'regressor.fit', 'regressor.predict', 'sns.distplot', 'sns.heatmap', 'sns.set', 'sum', 'train_test_split', 'unemployment_claim_data', 'unemployment_claims_data', 'unemployment_claims_data.corr', 'unemployment_claims_data.drop', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.plot', 'unemployment_claims_data.set_index', 'unemployment_claims_data.values.reshape', 'unemployment_data.corr', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.duplicated', 'unemployment_data.head', 'unemployment_data.plot', 'unemployment_data.reshape', 'unemployment_data.set_index', 'unemployment_wage_data.corr', 'unemployment_wage_data.drop', 'unemployment_wage_data.drop_duplicates', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.head', 'unemployment_wage_data.plot', 'unemployment_wage_data.set_index', 'unemployment_wage_data.shift', 'unemployment_wage_data.values.reshape', 'unemplyment_data.drop', 'wage_data.average_wage.mean', 'wage_data.fillna', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.any', 'wage_data2.head', 'y.flatten', 'y.plot', 'y_pred.flatten', 'y_pred.plot', 'y_test.flatten']"
tingchunkuo,10,"['AutoARIMA', 'AutoARIMA.fit', 'AutoARIMA.fit_predict', 'X.append', 'autoarima_args.AutoARIMA.fit_predict', 'bigquery.Client', 'bigquery_client.query', 'bigquery_client.query.to_dataframe', 'bigquery_client.query.to_dataframe.drop_duplicates', 'bigquery_client.query.to_dataframe.drop_duplicates.reset_index', 'bigquery_client.query.to_dataframe.nunique', 'c.startswith', 'cols.data.fillna', 'cols.data.groupby.sum', 'cols.data.groupby.sum.plot', 'cols.data.replace', 'cols.data.replace.describe', 'cols.data.replace.sum', 'cols.data.sum', 'cols_race.data.groupby.sum', 'cols_race.data.groupby.sum.plot', 'common_cols.data_dict.data_dict.merge.sort_values', 'common_cols.data_dict.data_dict.merge.sort_values.drop_duplicates', 'common_cols.data_dict.data_dict.merge.sort_values.drop_duplicates.reset_index', 'common_cols.data_dict.data_dict.merge.sort_values.reset_index', 'cvalues.isna', 'cvalues.isna.sum', 'data.data.set_index', 'data.data.set_index.loc.plot', 'data.dropna', 'data.get_dummies', 'data.groupby', 'data.groupby.count', 'data.groupby.count.max', 'data.groupby.count.plot', 'data.groupby.count.sum', 'data.groupby.max', 'data.groupby.plot.scatter', 'data.groupby.sum', 'data.groupby.sum.plot', 'data.groupby.sum.plot.scatter', 'data.groupby.sum.reset_index', 'data.groupby.sum.reset_index.merge', 'data.iloc.data.data.set_index', 'data.iloc.data.data.set_index.asfreq', 'data.iloc.data.data.set_index.asfreq.bfill', 'data.iloc.data.data.set_index.plot', 'data.items', 'data.min.data.data.set_index', 'data.min.data.data.set_index.asfreq', 'data.min.data.data.set_index.asfreq.bfill', 'data.nunique', 'data.plot', 'data.plot.scatter', 'data.scatter', 'data.set_index', 'data.set_index.groupby', 'data.set_index.groupby.plot', 'data.set_index.groupby.scatter', 'data.set_index.plot', 'data.sum', 'data.unique', 'data_dict.data_dict.merge.sort_values', 'data_dict.data_dict.merge.sort_values.drop_duplicates', 'data_dict.data_dict.merge.sort_values.drop_duplicates.reset_index', 'data_dict.data_dict.merge.sort_values.reset_index', 'data_dict.data_dict.sum.all', 'data_dict.items', 'data_dict.merge', 'data_dict.sum', 'data_dict.values', 'data_tables.tolist', 'data_tables.unique', 'dd.items', 'df.describe', 'dict', 'e.data.groupby.sum', 'e.data.groupby.sum.plot', 'format', 'i.data.data.set_index', 'i.data.data.set_index.asfreq', 'i.data.data.set_index.asfreq.bfill', 'i.data.data.set_index.asfreq.reindex', 'i.data.groupby.count', 'import', 'int', 'ironhacks_competition.bigquery_client.query.to_dataframe', 'len', 'list', 'map', 'max', 'min', 'model.predict', 'model.predict.reset_index', 'model.predict.reset_index.rename', 'model.predict.reset_index.rename.merge', 'n_periods.AutoARIMA.fit_predict', 'pd.DataFrame', 'pd.Series', 'pd.concat', 'pd.date_range', 'pd.date_range.range.pd.Series.reset_index', 'pd.date_range.rename', 'pd.date_range.rename.range.pd.Series.reset_index', 'pd.date_range.rename.to_series', 'pd.date_range.to_series', 'pd.date_range.to_series.rename', 'pd.get_dummies', 'pd.to_datetime', 'plt.bar', 'plt.figure', 'pred_results.append', 'pred_results.pd.DataFrame.data_dict.merge.to_csv', 'pred_results.pd.DataFrame.prediction_list.merge.to_csv', 'prediction_list.merge', 'print', 'print_missing', 'query_job.to_dataframe', 'range', 'round', 'schema.bigquery_client.query.to_dataframe', 'schema.data_tables.data_tables.loc.tolist', 'seaborn.scatterplot', 'set', 'sns.legend', 'sns.plot', 'sns.scatterplot', 'str', 'table_name.bigquery_client.query.to_dataframe', 'table_name.schema.bigquery_client.query.to_dataframe', 'time_index.y.reindex.fillna', 'tqdm', 'train_timeperiods.i.data.data.set_index.asfreq.reindex.fillna', 'tuple', 'visual_data.merge', 'wt.astype', 'wt.set_index', 'wt.set_index.loc.astype', 'wt.set_index.loc.to_series', 'wt.y.index.max.sum', 'x.merge', 'y.index.max', 'y.index.max.astype', 'y.index.max.date', 'y.plot', 'y.reindex']"
tungvu3117,10,[]
twinblade02,10,"['BayesianRidge', 'Bidirectional', 'DL_X.describe', 'DL_X.head', 'DL_XTest.astype', 'DL_XTest.describe', 'DL_XTest.reshape', 'DL_XTest.to_numpy', 'DL_XTrain.astype', 'DL_XTrain.to_numpy', 'DL_YTest.astpye', 'DL_YTest.to_numpy', 'DL_YTrain.astype', 'DL_data.describe', 'DL_data.drop', 'DL_data.head', 'Dense', 'Dropout', 'ENet.predict', 'ElasticNetCV', 'GS.fit', 'GridSearchCV', 'LE.fit_transform', 'LE.transform', 'LR.fit', 'LR.predict', 'LR2.fit', 'LR2.predict', 'LSTM', 'LSTM_regressor.add', 'LSTM_regressor.compile', 'LSTM_regressor.fit', 'LSTM_regressor.predict', 'LabelEncoder', 'Lasso', 'LassoCV', 'LinearRegression', 'MM_claims.fit_transform', 'MM_claims.inverse_transform', 'MM_other.fit_transform', 'MM_other.inverse_transform', 'MM_wage.fit_transform', 'MinMaxScaler', 'PReg.fit_transform', 'PolynomialFeatures', 'RB_claims.fit_transform', 'RB_claims.inverse_transform', 'RB_other.fit_transform', 'RB_other.inverse_transform', 'RB_other.transform', 'RandomForestRegressor', 'RandomizedSearchCV', 'Regressor_BR.fit', 'Regressor_BR.predict', 'Regressor_LA_bestFit.fit', 'Regressor_Lasso.predict', 'Regressor_RF.predict', 'Regressor_RF_bestFit.fit', 'Regressor_RF_bestFit.predict', 'Regressor_SVR.fit', 'Regressor_SVR.predict', 'RepeatedKFold', 'RepeatedKFoldKFold', 'RepeatedStratifiedKFold', 'RobustScaler', 'SC_other.fit_transform', 'SC_other.transform', 'SVR', 'Sequential', 'StackLSTM_Regressor.add', 'StackLSTM_Regressor.compile', 'StackLSTM_Regressor.fit', 'StackLSTM_Regressor.predict', 'StackLSTM_regressor.predict', 'StandardScaler', 'X.ravel', 'X_Train.head', 'X_test.ENet.predict.reshape', 'X_test.Regressor_BR.predict.reshape', 'X_test.Regressor_Lasso.predict.reshape', 'X_test.Regressor_RF.predict.reshape', 'X_test.Regressor_RF_bestFit.predict.reshape', 'X_test.Regressor_SVR.predict.reshape', 'X_test.describe', 'X_test.values.Regressor_RF_bestFit.predict.reshape', 'X_train.head', 'Y.describe', 'Y.ravel', 'Y.reshape', 'Y.shape', 'Y_pred_BR.flatten', 'Y_pred_ENet.flatten', 'Y_pred_Lasso.flatten', 'Y_pred_RFR.flatten', 'Y_pred_SVR.flatten', 'Y_pred_SVR.reshape', 'Y_test.RB_claims.inverse_transform.flatten', 'Y_test.flatten', 'Y_train.ravel', 'ax.bar', 'ax.legend', 'bigquery.Client', 'bigquery_client.query', 'check_unemployment.isnull', 'check_unemployment.isnull.sum', 'check_unemployment.isnulll', 'check_unemployment.isnulll.sum', 'check_unemployment.unique', 'check_unemployment.unique.value_counts', 'check_unemployment.value_counts', 'clean_uemp.dropna', 'clean_umepl.corr', 'clean_umepl.isnull', 'clean_umepl.isnull.sum', 'clean_umepl.value_counts', 'clean_unemploymentDf.corr', 'clean_unemploymentDf.duplicated', 'clean_unemploymentDf.fillna', 'clean_unemploymentDf.isnull', 'clean_unemploymentDf.isnull.sum', 'confusion_matrix', 'datetime.strptime', 'dict', 'edu_hist.plot', 'evaluate_regreENetor', 'evaluate_regressor', 'evaluate_regressorENet', 'float', 'gender_demographics.plot', 'get_pred_frame', 'get_predictions', 'grid.fit', 'import', 'ingest.describe', 'ingest.drop', 'ingest.to_csv', 'int', 'len', 'loguniform', 'main_df.copy', 'main_df.corr', 'main_df.datetime.strptime.strftime', 'main_df.describe', 'main_df.drop', 'main_df.dropna', 'main_df.dtype', 'main_df.groupby', 'main_df.groupby.count', 'main_df.groupby.mean', 'main_df.groupby.sum', 'main_df.isna', 'main_df.isna.sum', 'main_df.isnull', 'main_df.isnull.sum', 'main_df.nuinque', 'main_df.nunique', 'main_df.rename', 'main_df.unique', 'main_df.unique.count', 'main_df.values.reshape', 'mean_absolute_error', 'mean_squared_error', 'merged_ingest.copy', 'merged_ingest.describe', 'merged_ingest.drop', 'merged_ingest.head', 'merged_ingest.isnull', 'merged_ingest.isnull.sum', 'merged_ingest.sample', 'merged_ingest.to_csv', 'np.abs', 'np.arange', 'np.array', 'np.insert', 'np.mean', 'np.ones_like', 'np.reshape', 'np.sqrt', 'np.triu', 'old_ingest.describe', 'os.makedirs', 'pd.DataFrame', 'pd.concat', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.ylabel', 'poly.fit_transform', 'poly.transform', 'prediction_array.flatten', 'prediction_list.copy', 'prediction_list.dtype', 'prediction_sub.append', 'prediction_sub.to_csv', 'print', 'query_job.to_dataframe', 'range', 'regressor.predict', 'result_list.append', 'result_list.dtypes', 'search.fit', 'search_Lasso.fit', 'sns.barplot', 'sns.displot', 'sns.heatmap', 'sns.hist', 'sns.histplot', 'sns.kdeplot', 'sns.pairplot', 'sns.scatterplot', 'sum', 'sum.main_df.groupby.sum', 'train_test_split', 'unemployment_data.copy', 'unemployment_data.corr', 'unemployment_data.describe', 'unemployment_data.fillna', 'unemployment_data.info', 'unemployment_data.isnull', 'unemployment_data.isnull.sum', 'unemployment_data.notnull', 'unemployment_data.replace', 'unemployment_data.unique', 'uniform', 'updated_ingest.copy', 'updated_ingest.drop', 'updated_ingest.to_csv', 'wage_data.dropna', 'wage_data.duplicated', 'wage_data.fillna', 'wage_data.info', 'wage_data.isnull', 'wage_data.isnull.sum', 'wage_data.mean', 'zip']"
venkys96,10,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
vishalcv98,10,[]
vishveshvsk,10,"['LabelEncoder.fit_transform', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'id.work_data_collection.drop', 'id.work_data_collection.drop_duplicates', 'import', 'linear_model.LinearRegression', 'lm.fit', 'lm.score', 'num_data.interpolate', 'pd.merge', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'series.interploate', 'sns.heatmap', 'type', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.fillna', 'unemployment_data.head', 'unemployment_data.iloc.astype', 'unemployment_data.iloc.interpolate', 'unemployment_data.interpolate', 'unemployment_data.to_csv', 'wage_data.drop', 'wage_data.fillna', 'wage_data.head', 'work_data.drop_dulpicates', 'work_data.drop_duplicates', 'work_data.head']"
vpoliset,10,"['LinearRegression', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'df.head', 'df.mean', 'df.values.reshape', 'df1.plot', 'df2.to_csv', 'dtype', 'edu_level.groupby', 'edu_level.groupby.count', 'edu_level.groupby.count.reset_index', 'edu_level.groupby.count.reset_index.sort_values', 'edu_level.head', 'edu_lvl.head', 'edu_lvl.max', 'edu_lvl.min', 'example_function', 'gender.groupby', 'gender.groupby.count', 'gender.groupby.count.reset_index', 'gender.groupby.count.reset_index.sort_values', 'gender.head', 'gender.max', 'genders.head', 'genders.max', 'import', 'len', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.sqrt', 'pandas.DataFrame', 'pd.DataFrame', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'table_data.head', 'train_test_split', 'unemployment_data.columns', 'unemployment_data.dropna', 'unemployment_data.head', 'wage_data.head', 'y_pred.flatten', 'y_test.flatten']"
xiaohanyu1,10,[]
xp1orer,10,[]
xuhenggao,10,[]
yaminipraneetha,10,"['LinearRegression', 'LinearRegression.fit', 'PCA', 'XGBRegressor', 'XGBRegressor.fit', 'X_test.drop', 'X_train.drop', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'df_data.head', 'df_final.to_csv', 'df_pred_final_1.drop_duplicates', 'df_test.drop', 'fin.columns.isin', 'fin.drop', 'fin.set_index', 'fin.shape', 'final_data.drop', 'final_data.info', 'final_data1.set_index', 'import', 'int', 'len', 'list', 'lm.mean_squared_error', 'lm.predict', 'lm.score', 'mean_squared_error', 'model.fit', 'model.predict', 'model.score', 'pca.fit_transform', 'pd.DataFrame', 'pd.get_dummies', 'plt.show', 'pred_data.head', 'pred_data.info', 'pred_data.join', 'pred_data.merge', 'pred_data.set_index', 'print', 'query_job.to_dataframe', 'set', 'set1.diference', 'set1.difference', 'set2.difference', 'sum', 'test_train_split', 'train_test_split', 'umemp_data.info', 'unemp_data.astype', 'unemp_data.describe', 'unemp_data.drop', 'unemp_data.dropna', 'unemp_data.fillna', 'unemp_data.gender_male.isnull', 'unemp_data.groupby', 'unemp_data.groupby.count', 'unemp_data.groupby.fillna', 'unemp_data.groupby.head', 'unemp_data.groupby.notna', 'unemp_data.groupby.notna.transform', 'unemp_data.groupby.notnull', 'unemp_data.groupby.notnull.transform', 'unemp_data.groupby.sum', 'unemp_data.groupby.transform', 'unemp_data.head', 'unemp_data.hist', 'unemp_data.info', 'unemp_data.isna', 'unemp_data.isna.sum', 'unemp_data.isnull', 'unemp_data.merge', 'unemp_data.notna', 'unemp_data.notnull', 'unemp_data.notnull.sum', 'unemp_data.notnull.unemp_data.groupby', 'unemp_data.notnull.unemp_data.groupby.transform', 'unemp_data.nunique', 'unemp_data.replace', 'unemp_data.shape', 'unemp_data.unique', 'unemp_data.uu_id.unemp_data.sort_values', 'wage_data.describe', 'wage_data.fillna', 'wage_data.groupby', 'wage_data.groupby.transform', 'wage_data.head', 'wage_data.info', 'x.fillna', 'x.isnull', 'x.mean', 'x.mean.isna', 'x.mean.isnull', 'x.mean.null', 'x.mode', 'xgb.XGBRegressor', 'xgb.XGBRegressor.fit']"
yizhou-2dfang,10,[]
zhanwang90,10,"['ARIMA_predict', 'LinearRegression', 'MAPE', 'MAPE_list.append', 'MSPE', 'MSPE_list.append', 'OLS', 'X.drop', 'X.head', 'X_lag1.y_lag1.OLS.fit', 'X_lag1.y_lag1.OLS.fit.summary', 'abs', 'auto_arima', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'dat.value_counts', 'data.apply', 'data.copy', 'data.corr', 'data.data.isnull', 'data.data.isnull.all', 'data.day', 'data.drop', 'data.head', 'data.info', 'data.isna', 'data.plot', 'data.poisson.fit', 'data.rolling', 'data.rolling.mean', 'data.sample', 'data.set_index', 'data.shift', 'data.value_counts', 'dataBalanceCheck', 'dataExplore', 'dataFillNa', 'dataIdentifyDWM', 'dataIdentifyDateMonth', 'data_balance.fillna', 'data_balance.groupby', 'data_balance.head', 'data_balance.index.duplicated', 'data_balance.index.unique', 'data_balance.interpolate', 'data_balance.mean', 'data_balance.reindex', 'data_balance.reset_index', 'data_balance.set_index', 'data_balance.set_index.reindex', 'data_balance.sort_index', 'data_balance.week_number.max', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.reindex.reset_index', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.set_index.reindex.reset_index', 'data_balance.week_number.min', 'data_balance_ave.groupby', 'data_balance_ave.groupby.mean', 'data_balance_ave.head', 'data_balance_ave.reset_index', 'data_balance_ave_model.set_index', 'data_balance_ave_train.set_index', 'data_balance_ave_valid', 'data_balance_ave_valid.merge', 'data_balance_tract_model.set_index', 'data_balance_train.drop', 'data_balance_train_x_m1.astype', 'data_balance_train_y.astype', 'data_balance_valid.drop', 'data_balance_valid_x.head', 'data_balance_valid_x_m1.astype', 'data_balance_valid_y.head', 'data_balanceindex.duplicated', 'data_estimate_m1.head', 'data_lastWeek.drop_duplicates', 'data_lastWeek.set_index', 'data_pred.astype', 'data_pred.drop', 'data_pred.head', 'data_pred.set_index', 'data_pred.set_index.join', 'data_pred_query.copy', 'data_pred_query.head', 'data_pred_query.merge', 'data_pred_query.to_csv', 'data_train.drop', 'data_train_x.head', 'data_train_x_m1.astype', 'data_train_x_m1.describe', 'data_train_x_m1.dtype', 'data_train_x_m1.head', 'data_train_x_m1.info', 'data_train_y.astype', 'data_unemp.head', 'data_valid.drop', 'data_valid_x_m1.astype', 'data_valid_x_m1.describe', 'data_wage.head', 'date.isna', 'datetime', 'datetime.datetime', 'datetime.strptime', 'df.mean', 'df_balance.fillna', 'df_balanced.fillna', 'df_forecast.rename', 'fig.show', 'grp.set_index', 'grp.set_index.interpolate', 'id.data.data.isnull', 'id.data.data.isnull.all', 'import', 'int', 'len', 'linear_model.PoissonRegressor', 'm1.fit', 'm1.summary', 'math.ceil', 'max', 'min', 'model.fit', 'model.forecast', 'model.plot_predict', 'model.predict', 'model.summary', 'model_lag1.fit', 'model_lag1.summary', 'np.cumsum', 'np.linspace', 'np.random.randn', 'output.head', 'pandas.DataFrame', 'pd.DataFrame', 'pd.DatetimeIndex', 'pd.MultiIndex.from_product', 'pd.Series', 'pd.get_dummies', 'pd.sum', 'pd.to_datetime', 'pd.to_numeric', 'pd.unique', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'poission_model.fit', 'poission_model_m2.fit', 'poisson', 'print', 'px.line', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'query_job_unemp.to_dataframe', 'query_job_wage.to_dataframe', 'range', 'result.predict', 'result.summary', 'result_m2.predict', 'result_m2.summary', 'sm.GLM', 'sm.add_constant', 'sm.families.Poisson', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'str', 'sum', 'type', 'x.head', 'y.plot', 'y_pred.plot', 'zip']"
abbott34,6,"['LinearRegression', 'LinearRegression.fit', 'abs', 'bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.head', 'data.info', 'data.rename', 'dict', 'import', 'len', 'list', 'mean_absolute_error', 'mean_squared_error', 'np.mean', 'pd.DataFrame', 'pd.DataFrame.from_dict', 'pd.DataFrame.from_records', 'pd.Series', 'pd.append', 'pd.concat', 'pd.factorize', 'pd.series', 'plt.bar', 'plt.bar.plot', 'plt.plot', 'pred_id.MAE.append', 'pred_id.MSE.append', 'pred_id.actual.append', 'pred_id.prediction.append', 'pred_id.predictions.append', 'prediction_list_data.head', 'print', 'query_job.to_dataframe', 'query_job.to_dataframe.head', 'range', 'reg.predict', 'relevant_unemployment_df.apply', 'relevant_unemployment_df.astype', 'relevant_unemployment_df.convert_dtypes', 'relevant_unemployment_df.convert_dtypes.info', 'relevant_unemployment_df.drop', 'relevant_unemployment_df.drop_duplicates', 'relevant_unemployment_df.dropna', 'relevant_unemployment_df.dropna.info', 'relevant_unemployment_df.groupby', 'relevant_unemployment_df.groupby.count', 'relevant_unemployment_df.groupby.count.pd.DataFrame.plot', 'relevant_unemployment_df.head', 'relevant_unemployment_df.info', 'relevant_unemployment_df.isna', 'relevant_unemployment_df.isna.sum', 'relevant_unemployment_df.join', 'relevant_unemployment_df.map', 'relevant_unemployment_df.value_counts', 'relevant_unemployment_df.value_counts.plot', 'relevant_unemployment_df.value_counts.plot.bar', 'relevant_unemployment_df.value_counts.values', 'results_df.explode', 'row.append', 'row.concat', 'set', 'temp_df.append', 'temp_df.convert_dtypes', 'temp_df.drop', 'temp_df.head', 'temp_df.head.values', 'temp_df.info', 'temp_df.isna', 'temp_df.isna.temp_df.loc.head', 'temp_df.isnull', 'temp_df.reset_index', 'temp_df.reset_index.info', 'test.head', 'total_claims_avg.append', 'tracts.append', 'type', 'unemployment_data.head', 'wage_data.head', 'wage_data.order_by', 'wage_data.set_index', 'wage_data.sort_values', 'warnings.simplefilter']"
ahhp0521,6,[]
akatti7,6,"['Bigquery.Client', 'bigquery.Client', 'bigquery_client.query', 'data.head', 'import', 'print', 'query_job.to_dataframe']"
amaltom,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'merged_data.head', 'pd.merge', 'prediction_list.head', 'prediction_list.merge', 'print', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'unemployment_data.describe', 'unemployment_data.groupby', 'unemployment_data.groupby.mean', 'unemployment_data.head', 'unemployment_data.value_counts', 'unemplyment_data.value_counts', 'unmeployment_data.groupby', 'unmeployment_data.groupby.mean', 'wage_data.head']"
amoghkokari,6,"['ARIMA', 'LeaveOneOut', 'Mdf.head', 'Mdf.to_csv', 'bigquery.Client', 'bigquery_client.query', 'cdf.head', 'cdf.unique', 'covid19_cases_data.head', 'data.plot', 'data1.drop', 'data1.index.value_counts', 'data1.plot', 'data1.set_index', 'data1.sort_index', 'data1.value_counts', 'df.mean', 'dfp.keys', 'dfp.val', 'dfp.vals', 'dfp.values', 'dfp.valus', 'dict', 'dtf.set_index', 'dtf.sort_index', 'emp_cols.mdf.replace', 'f1_df.plot', 'f1_df.set_index', 'f2_df.describe', 'f2_df.drop_duplicates', 'f2_df.groupby', 'f2_df.groupby.mean', 'f2_df.groupby.set_index', 'f2_df.set_index', 'f2_df.unique', 'f2_df.value_counts', 'f3_df.drop', 'f3_df.drop_duplicates', 'f3_df.np.array.flatten', 'f3_df.value_count', 'f3_df.value_counts', 'f3_df.values_count', 'f_df.drop_duplicates', 'f_df.f_df.groupby.mean', 'f_df.groupby', 'f_df.groupby.mean', 'f_df.nunique', 'f_df.set_index', 'f_df.unique', 'f_df.value_counts', 'fdf.value_counts', 'format', 'import', 'int', 'itertools.product', 'len', 'lgb.Dataset', 'lgb.LightGBMTunerCV', 'lgb.reset_parameter', 'list', 'loo.split', 'max', 'mdf.corr', 'mdf.drop', 'mdf.drop_duplicates', 'mdf.head', 'mdf.nunique', 'mdf.replace', 'mdf.unique', 'mdf.value_counts', 'mod.fit', 'mod.predict', 'n1.to_csv', 'new.columns', 'new.set_index', 'new.to_csv', 'new1.columns', 'new1.drop', 'np.array', 'optuna.create_study', 'optuna.logging.set_verbosity', 'pandas.DataFrame', 'pd.DataFrame.from_dict', 'pd.read_csv', 'pd.to_numeric', 'pdf.drop', 'pdf.head', 'pdf.sort', 'pdf.to_csv', 'pdf.value_counts', 'plt.figure', 'plt.show', 'print', 'query1_job.to_dataframe', 'query_job.to_dataframe', 'range', 'results.predict', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'sorted', 'total_claims.append', 'tuner.run', 'udf.columns', 'udf.corr', 'udf.drop', 'udf.head', 'udf.nunique', 'udf.replace', 'udf.to_csv', 'udf.unique', 'udf.value_counts', 'uu_id.append', 'wdf.head', 'wdf.to_csv', 'week_number.append']"
anamita01,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.head', 'import', 'query_job.to_dataframe', 'querydb']"
anamitapowwow,6,"['BIGQUERY.Client', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'unemployment_data.head', 'wage_data.head']"
ananyaipsita,6,"['np.cumsum', 'np.linspace', 'np.random.randn']"
anirudhtunga,6,[]
arjun-2dstevens,6,[]
aubohlin,6,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'csv.writer', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df_pred.df_pred.where.dropna', 'df_pred.df_un.where.dropna', 'df_pred.where', 'df_un.df_un.sort', 'df_un.df_un.sort_values', 'df_un.df_un.sort_values.drop_duplicates', 'df_un.df_un.sort_values.drop_duplicates.set_index', 'df_un.df_un.sortby', 'df_un.df_un.where.dropna', 'df_un.where', 'df_wage.head', 'df_working.mean', 'enumerate', 'import', 'key.tract_dict.ewm', 'key.tract_dict.ewm.mean', 'key.tract_dict.mean', 'key.tract_dict.rolling', 'key.tract_dict.rolling.mean', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'open', 'pd.Series', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'prediction_dict.items', 'print', 'query_job.to_dataframe', 'querydb', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'str', 'tract.df_un.df_un.sort_values', 'tract.df_un.df_un.sort_values.drop_duplicates', 'tract.df_un.df_un.sort_values.drop_duplicates.set_index', 'tract.head', 'tract_dict.head', 'tract_dict.items', 'tract_dict.plot', 'tract_dict.tail', 'writer.writerow', 'y.plot', 'y_pred.plot', 'zip']"
avprasad125,6,"['bigquery.Client', 'bigquery_client.query', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'plt.figure', 'plt.legend', 'plt.plot', 'query_job.to_dataframe']"
beingmerry,6,[]
cadenjarausch,6,[]
cardshistory,6,[]
carrol54,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
crystalhappycat,6,"['bigquery.Client', 'bigquery_client.query', 'client.list_tables', 'covid19_cases_data.head', 'df.mean', 'format', 'import', 'pandas.DataFrame', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'unemployment_data.head', 'wage_data.head']"
dadal09,6,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe', 'unemployment_data.drop_duplicates']"
dayoonsuh,6,"['ARMAmodel.fit', 'ARMAmodel.get_forecast', 'ARMAmodel.predict', 'LinearRegression', 'RandomForestRegressor', 'SARIMAX', 'StandardScaler', 'X.head', 'average_wage.median', 'bigquery.Client', 'bigquery_client.query', 'claim_sum_week.first', 'claim_sum_week.head', 'claims.append', 'covid19_cases_data.head', 'covid19_cases_data.sort_values', 'csv.writer', 'csvwriter.writerow', 'csvwriter.writerows', 'data.drop', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.sort_values', 'data.total_claims.astype', 'data.total_claims.median', 'data.total_claims.values.reshape', 'data.tract.unique', 'data.week_number.values.reshape', 'data_count.items', 'errors', 'f', 'f10', 'float', 'float.data.total_claims.astype.values.reshape', 'groupby_id.first', 'groupby_id.get_group', 'groupby_id.to_dict', 'import', 'int', 'len', 'lessthanten.append', 'list', 'lm.fit', 'mean_absolute_error', 'mean_squared_error', 'median', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'metrics.r2_score', 'np.arange', 'np.array', 'np.asarray', 'np.linspace', 'np.mean', 'np.poly1d', 'np.polyfit', 'np.sqrt', 'open', 'pd.DataFrame', 'pd.concat', 'pd.merge', 'pd.read_csv', 'plt.grid', 'plt.legend', 'plt.line', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'predict_claim', 'predict_claim.head', 'predict_claims', 'prediction_list.tolist', 'prediction_list.uu_id.tolist', 'prediction_list.uu_id.value_counts', 'prediction_list.uu_id.value_counts.to_dict', 'predictions.apply', 'predictions.tolist', 'preprocessing.scale', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'regr.fit', 'regr.predict', 'regressor.fit', 'regressor.predict', 'result.head', 'result.np.array.reshape', 'result.prediction.iloc.round', 'result.reshape', 'result.sort_values', 'rfr.fit', 'rfr.predict', 'rfr.score', 'round', 'rows.append', 'sc.fit_transform', 'sc.transform', 'scale', 'shape', 'sns.heatmap', 'train_test_split', 'unemployment_data.drop', 'unemployment_data.drop.head', 'unemployment_data.drop_duplicates', 'unemployment_data.drop_duplicates.fillna', 'unemployment_data.dropna', 'unemployment_data.duplicated', 'unemployment_data.edu_grades_9_11.unique', 'unemployment_data.fillna', 'unemployment_data.fillna.corr', 'unemployment_data.filter', 'unemployment_data.groupby', 'unemployment_data.groupby.median', 'unemployment_data.groupby.median.get_group', 'unemployment_data.groupby.pd.DataFrame.head', 'unemployment_data.groupby.sum', 'unemployment_data.head', 'unemployment_data.isnull', 'unemployment_data.isnull.sum', 'unemployment_data.nunique', 'unemployment_data.shape', 'unemployment_data.sort_values', 'unemployment_data.sort_values.reindex', 'unemployment_data.sort_values.reset_index', 'unemployment_data.tail', 'unemployment_data.top_category_employer1.head', 'unemployment_data.tract.count', 'unemployment_data.tract.count.sum', 'unemployment_data.tract.duplicated', 'unemployment_data.tract.duplicated.sum', 'unemployment_data.tract.duplicates', 'unemployment_data.tract.isnull', 'unemployment_data.tract.isnull.sum', 'unemployment_data.tract.nunique', 'unemployment_data.tract.unique', 'unemployment_data.tract.unique.sum', 'unemployment_data.tract.value_counts', 'unemployment_data.tract.value_counts.sort_values', 'unemployment_data.usnull', 'unemployment_data.usnull.sum', 'unemployment_data.uu_id.count_values', 'unemployment_data.uu_id.tolist', 'unemployment_data.uu_id.unique', 'unemployment_data.uu_id.unique.count', 'unemployment_data.uu_id.unique.sum', 'unemployment_data.uu_id.value_counts', 'unemployment_data.uu_id.value_counts.sort', 'unemployment_data.uu_id.value_counts.to_dict', 'unemployment_data.uu_id.value_counts.tolist', 'unemployment_data.uu_ids.count_values', 'uuid.unemployment_data.uu_id.unemployment_data.copy', 'uuids.remove', 'wage.isnull', 'wage.isnull.sum', 'wage.tract.nunique', 'wage_data.average_wage.fillna', 'wage_data.average_wage.median', 'wage_data.drop_duplicates', 'wage_data.fillna', 'wage_data.filter', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.sum', 'wage_data.tract.nunique', 'wage_data.uu_id.nunique', 'warnings.filterwarnings', 'y_pred.conf_int', 'y_pred.flatten', 'y_pred.tolist', 'y_test.flatten', 'y_test.tolist', 'y_test.values.ravel', 'y_train.values.ravel']"
deep-2d20,6,[]
destryed,6,"['RandomForestRegressor', 'StandardScaler', 'StandardScaler.fit_transform', 'abs', 'adfuller', 'autocorrelation_plot', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'bigqury_client.query', 'col.df3.astype', 'col.df3.nunique', 'col.df3.replace', 'col.df3.str.replace', 'col.np.nan.df3.df3.unique', 'covid19_cases_data.head', 'data.head', 'df.astype', 'df.copy', 'df.corr', 'df.drop', 'df.mean', 'df.replace', 'df.uu_id_enc.nunique', 'df1.head', 'df1.to_csv', 'df1.uu_id.nunique', 'df1.uu_id.unique', 'df2.head', 'df2.uu_id.nunique', 'df3.abs.sum', 'df3.astype', 'df3.columns.remove', 'df3.columns.str.replace', 'df3.copy', 'df3.corr', 'df3.drop', 'df3.dropna', 'df3.fillna', 'df3.fillna.replace', 'df3.race_white.unique', 'df3.replace', 'df3.split', 'df3.str.replace', 'df3.str.split', 'df3.sum', 'df3.test_df.pd.merge.drop', 'df3.test_df.pd.merge.drop.drop_duplicates', 'df3.time.unique', 'df3.timeperiod.unique', 'df3.timeperiods.unique', 'df3.unique', 'df3.uu_id.nunique', 'df3.uu_id.unique', 'df3.uu_id_enc.nunique', 'df3.uu_id_enc.unique', 'df3.week_number.df3.sort_values', 'df3_.drop_duplicates', 'df3_.plot', 'df3_.week_number.unique', 'df4.total_claims.df4.total_claims.df4.all', 'features.k.k.test_df.drop', 'final_pred', 'float', 'format', 'g.week_number.g.mean', 'import', 'int', 'itertools.cycle', 'itertools.product', 'k.df3.sum', 'k.df3.uu_id.df3.mean', 'li.append', 'list', 'mean', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'mod.fit', 'next', 'no.log', 'np.array', 'np.exp', 'np.isnan', 'np.log', 'np.mean', 'np.nan.df3.df3.unique', 'np.nan.temp.temp.unique', 'np.sqrt', 'opt_features', 'opt_features2', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Datetime', 'pd.concat', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'pd.tools.plotting.autocorrelation_plot', 'plt.legend', 'plt.show', 'plt.subplots', 'pred.conf_int', 'pred.predicted_mean.plot', 'print', 'query_job.to_dataframe', 'query_job.todataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_DataFrame', 'query_job3.to_dataframe', 'range', 'reg.fit', 'reg.predict', 'res.sum', 'results.get_prediction', 'results.get_prediction.plot', 'results.plot_diagnostics', 'results.summary', 'rf.fit', 'rf.predict', 'rg', 'round', 'sc.fit_transform', 'sc.optimize', 'sc.transform', 'scipy.optimize', 'scipy.optimize.maximize', 'scipy.optimize.minimize', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.color_palette', 'sns.heatmap', 'sns.lineplot', 'sns.scatterplot', 'sp.optimize', 'statistics.mean', 'str', 'str.df3.unique', 'submission_prediction_output.fillna', 'submission_prediction_output.isna', 'submission_prediction_output.isna.values.any', 'submission_prediction_output.isnull', 'submission_prediction_output.isnull.values.any', 'submission_prediction_output.to_csv', 'submission_prediction_output.total_claims.nunique', 'submission_prediction_output.uu_id.nunique', 'submission_prediction_output.uu_id.unique', 'submission_prediction_output.uu_id_enc.unique', 'sum', 'temp.astype', 'temp.drop', 'temp.replace', 'temp.sort_values', 'temp2.drop', 'tesmp.replace', 'test_df.astype', 'test_df.copy', 'test_df.drop', 'test_df.drop_duplicates', 'test_df.drop_duplicates.dropna', 'test_df.isna', 'test_df.race_black.unique', 'test_df.to_csv', 'test_df.total_claims.unique', 'test_df.uu_id.unique', 'test_df.uu_id_enc.unique', 'test_df.week_number.test_df.sort_values', 'test_df3.fillna', 'test_features.drop', 'test_features.dropna', 'test_features.dropna.drop', 'test_features.dropna.drop.drop_duplicates', 'time_pred', 'train_test_split', 'unemp_data.head', 'val.predict', 'wage_data.head', 'xgb.XGBRegressor', 'y.plot']"
divya2890,6,"['LinearRegression', 'Unemployment_data.head', 'Unemployment_data.shape', 'X_test.head', 'X_test.index', 'X_test.shape', 'a.astype', 'a.rename', 'a.replace', 'a.style.hide_index', 'a.to_csv', 'a.to_string', 'abs', 'astype', 'bigquery.Client', 'bigquery_client.query', 'count.a.astype', 'covid19_cases_data.head', 'data.astype', 'data.columns', 'data.corr', 'data.drop', 'data.fillna', 'data.head', 'data.max', 'data.min', 'import', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'pd.DataFrame', 'pd.Dataframe', 'pd.to_csv', 'plt.figure', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'test.astype', 'test.drop', 'test.fillna', 'y_pred.shape']"
dougcrabill,6,"['IterativeImputer', 'IterativeImputer.fit', 'LinearRegression', 'SimpleImputer', 'X.X.loc.values.reshape', 'X.dropna', 'X_train.head', 'abs', 'allweeks.fillna', 'allweeks.join', 'allweeks.loc', 'allweeks.mean', 'allweeks.median', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.corr.round', 'data.drop', 'data.head', 'data.tail', 'data.values', 'data.values.np.array.reshape', 'data.values.reshape', 'df.fillna', 'df.fillna.to_numpy', 'df.fillna.to_numpy.flatten', 'df.mean', 'df.to_numpy', 'df.to_numpy.flatten', 'df.to_numpy.flatten.fillna', 'display', 'dp.dataframe', 'empdata.astype', 'empdata.columns', 'empdata.corr', 'empdata.describe', 'empdata.describe.transpose', 'empdata.describe.transpose.shape', 'empdata.drop', 'empdata.drop_duplicates', 'empdata.dropna', 'empdata.edu_grades_9_11.loc', 'empdata.edu_grades_9_11.plot', 'empdata.empdata.empdata.loc.values.reshape', 'empdata.empdata.loc.describe', 'empdata.empdata.loc.drop', 'empdata.empdata.loc.drop_duplicates', 'empdata.empdata.loc.loc.plot', 'empdata.empdata.loc.mean', 'empdata.empdata.loc.plot', 'empdata.empdata.loc.reshape', 'empdata.empdata.loc.values.dp.dataframe.plot', 'empdata.empdata.loc.values.pandas.dataframe.plot', 'empdata.empdata.loc.values.plot', 'empdata.empdata.loc.values.reshape', 'empdata.get_dummies', 'empdata.getdummies', 'empdata.head', 'empdata.head.transpose', 'empdata.keys', 'empdata.keys.drop', 'empdata.loc', 'empdata.loc.describe', 'empdata.mean', 'empdata.median', 'empdata.nunique', 'empdata.plot', 'empdata.plot.box', 'empdata.plot.scatter', 'empdata.replace', 'empdata.set_index', 'empdata.shift', 'empdata.sort', 'empdata.sort_values', 'empdata.sort_values.plot', 'empdata.sum', 'empdata.unique', 'empdata.unique.np.sort', 'empdata.unique.numpy.sort', 'empdata.unique.reshape', 'empdata.unique.sort', 'empdata.unique.sort_values', 'empdata.unique.sorted', 'empdata.value_sort', 'empdata.values', 'empdata.values.reshape', 'empdata.values.reshape.sort', 'empdata.values.reshape.sort_values', 'empdata.values.sort', 'empdata.values.sort_values', 'empdata.values_sort', 'example_function', 'final_prediction_data.drop', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'help', 'i.empdata.empdata.loc.mean', 'i.empdata.empdata.loc.to_list', 'imp_mean.fit', 'imp_mean.transform', 'import', 'imputer.fit', 'imputer.transform', 'int', 'int64', 'last_week.range.pd.DataFrame.join', 'len', 'load_lynx', 'load_wineind', 'm.predict', 'meancpw.append', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'model.score', 'np.array', 'np.cumsum', 'np.linspace', 'np.plot', 'np.random.randn', 'np.sort', 'np.sqrt', 'pandas.DataFrame', 'pandas.dataframe', 'pd.DataFrame', 'pd.Series', 'pd.get_dummies', 'pd.to_datetime', 'plot', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'pm.auto_arima', 'pm.datasets.load_wineind', 'pm.plot_acf', 'print', 'qtables.head', 'query_from_statement', 'query_job.to_dataframe', 'query_job.to_dataframe.drop_duplicates', 'query_job.to_dataframe.drop_duplicates.fillna', 'race_hawaiiannative.empdata.nunique', 'range', 'range.pd.DataFrame.join', 'regressor.fit', 'regressor.predict', 'sns.heatmap', 'sort', 'str', 'sum', 'testuu_id', 'testuu_id.allweeks.join.fillna', 'testuu_id.fillna', 'testuu_id.index', 'testuu_id.join', 'testuu_id.last_week.range.pd.DataFrame.join.fillna', 'testuu_id.median', 'testuu_id.median.int', 'testuu_id.range.pd.DataFrame.join.fillna', 'testuu_id.set_index', 'train_test_split', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_prediction_data.head', 'unemployment_prediction_data.join', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.set_index', 'uu.uupred.uupred.loc.flatten', 'uupread.head', 'uupred.astype', 'uupred.at', 'uupred.concat', 'uupred.describe', 'uupred.drop', 'uupred.drop.join', 'uupred.dtypes', 'uupred.head', 'uupred.join', 'uupred.loc', 'uupred.merge', 'uupred.merge.join', 'uupred.to_csv', 'uupred.values.shape', 'wagedata.head', 'week37.rename', 'weekdata.plot.box', 'weeks.sort', 'weeks.sorted', 'weeks.to_numpy.sort', 'weeks.to_numpy.sorted', 'x.append', 'x.plot', 'y.align', 'y.plot', 'y_pred.fillna', 'y_pred.flatten', 'y_pred.plot', 'y_pred.reshape', 'y_pred.values', 'y_pred.view', 'y_test.flatten', 'y_test.reshape', 'y_test.reshape.flatten', 'y_test.reshape.to_numpy.flatten', 'y_test.to_numpy', 'y_test.to_numpy.flatten']"
drsuriya1991,6,[]
dwijenchawra,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
dylanadal0,6,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
esquared13,6,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery.erinenzinger', 'bigquery_client.query', 'data.corr', 'data.drop', 'data.head', 'data.loc', 'data.plot', 'data.sample', 'data.set_index', 'data.values.reshape', 'import', 'max', 'min', 'model.fit', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'regressor.fit', 'sns.heatmap', 'sns.set', 'str', 'train_test_split', 'unemployment_data.head']"
eveclarke1,6,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'axs.legend', 'axs.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'combine', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.ironhacks_competition', 'data.ironhacks_competition.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.drop', 'df.mean', 'df.unique', 'df.uu_id.unique', 'dict', 'enumerate', 'example_function', 'fnmatch.filter', 'g.copy', 'g.copy.reset_index', 'g.loc.impute_iterative.reset_index', 'g.unique', 'g.values.tolist', 'gen_find', 'get_week_number_map', 'imp_tot.to_csv', 'import', 'impute_iterative', 'impute_total_claims.raw_full.groupby.apply.reset_index', 'imputer.fit_transform', 'insert_na_week_number.raw.groupby.apply.reset_index', 'ironhacks_competition.head', 'ironhacks_competition.unemployment_data.head', 'ironhacks_data.ironhacks_competition.head', 'load_data', 'load_data_full', 'load_imp_tot', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'os.path.isfile', 'os.path.join', 'os.walk', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.read_csv', 'pd.set_option', 'pd.to_datetime', 'plot_acf', 'plot_impute_iterative', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'preddiction_list_data.head', 'prediction_data.head', 'prediction_lisst.head', 'print', 'query', 'query_job.to_dataframe', 'range', 'raw.drop', 'raw.drop_duplicates', 'raw.groupby', 'raw.groupby.apply', 'raw.replace', 'raw.reset_index', 'raw.sort_values', 'raw.to_csv', 'raw_full.groupby', 'raw_full.groupby.apply', 'raw_full.to_csv', 'series.map', 'sklearn.impute.IterativeImputer', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'sorted', 'type', 'u.join', 'unemployment.head', 'unemployment_data.head', 'wage_data.head', 'wage_data_data.head', 'ww.set_index', 'y.plot', 'y_pred.plot', 'zip']"
goughes,6,[]
harshitbd,6,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
harshpavuluri,6,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.shift', 'df.mean', 'import', 'main', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'sns.set', 'y.plot', 'y_pred.plot']"
hiram31,6,"['bigquery.Client', 'print']"
janejoseph20,6,"['Claims_by_timeperiod.plot', 'Claims_by_timeperiod.plot.set', 'Claims_by_week.plot', 'Claims_by_week.plot.set', 'Final_df.corr', 'Final_df.corr.round', 'Final_df.describe', 'Final_df.edu_8th_or_less.sum', 'Final_df.edu_grades_9_11.sum', 'Final_df.edu_hs_grad_equiv.sum', 'Final_df.edu_post_hs.sum', 'Final_df.edu_unknown.sum', 'Final_df.gender_female.sum', 'Final_df.gender_male.sum', 'Final_df.gender_na.sum', 'Final_df.groupby', 'Final_df.groupby.agg', 'Final_df.groupby.agg.sort', 'Final_df.groupby.sum', 'Final_df.groupby.sum.sort_values', 'Final_df.groupby.sum.sort_values.head', 'Final_df.head', 'Final_df.ols.fit', 'Final_df.pivot_table', 'Final_df.pivot_table.round', 'Final_df.race_amerindian.sum', 'Final_df.race_asian.sum', 'Final_df.race_black.sum', 'Final_df.race_noanswer.sum', 'Final_df.race_other.sum', 'Final_df.race_white.sum', 'Final_df.select_dtypes', 'Final_df.shape', 'Final_df.sum', 'Final_df.value_counts', 'Final_df.value_counts.plot', 'LinearRegression', 'Mean_Claims_by_week.plot', 'Mean_Claims_by_week.plot.set', 'Mean_of_Total_Claims_per_UUID_every_week.head', 'Mean_of_Total_Claims_per_UUID_every_week.plot', 'Melt.head', 'Melt.sort_values', 'Merged_unemployment_wage.Head', 'Merged_unemployment_wage.drop_duplicates', 'Merged_unemployment_wage.drop_duplicates.head', 'Merged_unemployment_wage.duplicated', 'Merged_unemployment_wage.duplicated.sum', 'Merged_unemployment_wage.head', 'Predicted_Values.tolist', 'RandomForestRegressor', 'SimpleImputer', 'Top_10_claimers.head', 'Top_10_claimers.tail', 'Total_Claims_per_UUID_every_week.describe', 'Total_Claims_per_UUID_every_week.fillna', 'Total_Claims_per_UUID_every_week.head', 'Total_Claims_per_UUID_every_week.melt', 'Total_Claims_per_UUID_every_week.plot', 'Total_Claims_per_UUID_every_week.rename_axis', 'Total_Claims_per_UUID_every_week_nulls_addressed.head', 'Wage_updated.isnull', 'Wage_updated.isnull.sum', 'X.head', 'average_wage_by_uuid.head', 'average_wage_by_uuid.isin', 'average_wage_by_uuid.uu_id.average_wage_by_uuid.isin', 'average_wage_null_rows.head', 'average_wage_null_rows.unique', 'bigquery.Client', 'bigquery_client.query', 'cleaned_df.all', 'cleaned_df.corr', 'cleaned_df.corr.round', 'cleaned_df.drop', 'cleaned_df.drop.head', 'cleaned_df.groupby', 'cleaned_df.groupby.agg', 'cleaned_df.head', 'cleaned_df.isnull', 'cleaned_df.isnull.sum', 'cleaned_df.pivot_table', 'cleaned_df.pivot_table.head', 'cleaned_df.pivot_table.round', 'cleaned_df.sort_values', 'cleaned_df.timeperiod.cleaned_df.groupby.sum', 'cleaned_df.timeperiod.cleaned_df.groupby.sum.add_prefix', 'cleaned_df.total_claims.cleaned_df.week_number.cleaned_df.uu_id.pd.crosstab.reset_index', 'cleaned_df.total_claims.cleaned_df.week_number.cleaned_df.uu_id.pd.crosstab.reset_index.fillna', 'cleaned_df.uu_id.unique', 'cleaned_df.uu_id.unique.count', 'cleaned_df.uu_id.unique.size', 'cleaned_df.week_number.Final_df.groupby.mean', 'cleaned_df.week_number.Final_df.groupby.mean.add_prefix', 'cleaned_df.week_number.Final_df.groupby.sum', 'cleaned_df.week_number.Final_df.groupby.sum.add_prefix', 'cleaned_df.week_number.cleaned_df.groupby.sum', 'cleaned_df.week_number.cleaned_df.groupby.sum.add_prefix', 'data.head', 'df.corr', 'df.drop', 'df.drop_duplicates', 'df.head', 'df.iloc.to_numpy', 'df.to_csv', 'df1.plot', 'df_actual_pred.head', 'df_numerics_only.drop', 'drop_duplicates.duplicated', 'drop_duplicates.duplicated.sum', 'drop_duplicates.fillna', 'drop_duplicates.fillna.head', 'drop_duplicates.groupby', 'drop_duplicates.groupby.agg', 'drop_duplicates.head', 'drop_duplicates.isna', 'drop_duplicates.isna.sum', 'drop_duplicates.isnull', 'drop_duplicates.isnull.any', 'drop_duplicates.isnull.sum', 'drop_duplicates.mean', 'drop_duplicates.tail', 'drop_duplicates.uu_id.drop_duplicates.groupby.mean', 'drop_duplicates.uu_id.drop_duplicates.groupby.mean.isnull', 'drop_duplicatesf.mean', 'enumerate', 'features.head', 'fig.add_trace', 'fig.show', 'gender_by_uuid.head', 'go.Figure', 'go.Heatmap', 'groupby_uuid.head', 'groupby_uuid.mean.round', 'import', 'imputer.fit_transform', 'imputer.transform', 'int', 'len', 'linear_model.LinearRegression', 'list', 'mape', 'mdl.fit', 'mdl.predict', 'melt.head', 'melt_train.drop', 'melt_train.dropna', 'melt_train.groupby', 'melt_train.groupby.diff', 'melt_train.groupby.shift', 'melt_train.head', 'melt_train.melt_train.head', 'melt_train.tail', 'melt_valid.groupby', 'melt_valid.groupby.diff', 'melt_valid.groupby.shift', 'melt_valid.melt_valid.copy', 'melt_valid.tail', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model1.summary', 'name.cleaned_df.hist', 'name.dataset.hist', 'new_examples.columns', 'new_examples.head', 'np.abs', 'np.arange', 'np.array', 'np.isfinite', 'np.mean', 'np.sqrt', 'np.sum', 'ols', 'pd.DataFrame', 'pd.crosstab', 'pd.melt', 'pd.merge', 'pd.set_option', 'plt.bar', 'plt.barh', 'plt.figure', 'plt.grid', 'plt.matshow', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.text', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'plt.yticks', 'prediction_list.head', 'prediction_list.merge', 'print', 'pyplot.figure', 'pyplot.show', 'pyplot.subplot', 'pyplot.title', 'query_job.to_dataframe', 'range', 'reg.fit', 'reg.predict', 'regressor.fit', 'regressor.predict', 'regressor.score', 'regressor.tolist', 'result.predict', 'round', 'sns.countplot', 'sns.distplot', 'sns.heatmap', 'sns.histplot', 'sns.pairplot', 'sns.relplot', 'sns.set', 'split_point.melt.melt.copy', 'str', 'total_claims_prediction.head', 'total_claims_prediction.mean.round', 'total_claims_prediction.rename', 'total_claims_prediction.round', 'total_claims_prediction.to_csv', 'total_claims_prediction.total_claims.round', 'total_claims_prediction_week_39.head', 'total_claims_prediction_week_39.rename', 'total_claims_prediction_week_39.replace', 'total_claims_prediction_week_39.total_claims.round', 'total_claims_prediction_week_40.apply', 'total_claims_prediction_week_40.head', 'total_claims_prediction_week_40.isnull', 'total_claims_prediction_week_40.isnull.sum', 'total_claims_prediction_week_40.rename', 'total_claims_prediction_week_40.round', 'total_claims_prediction_week_40.to_csv', 'total_claims_prediction_week_40.total_claims.round', 'train_test_split', 'unemployment_data.describe', 'unemployment_data.duplicated', 'unemployment_data.duplicated.sum', 'unemployment_data.head', 'unemployment_data.merge', 'unemployment_data.query', 'unemployment_data.to_csv', 'unique', 'uu_id.average_wage_by_uuid.isin', 'uuid_claims_df.groupby', 'uuid_claims_df.groupby.agg', 'uuid_claims_df.head', 'uuid_claims_df.prediction_total_claims.round', 'wage_data.head', 'wage_data.to_csv', 'warnings.filterwarnings', 'wmape', 'y_pred.flatten', 'y_test.flatten']"
jdsk789,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.drop', 'data.dropna', 'data.head', 'import', 'pred.head', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'query_job4.to_dataframe', 'unem.head', 'unemployment.head', 'wage.head']"
jennapl,6,"['LinearRegression', 'X_train.head', 'a.head', 'a.plot', 'a.unique', 'ax1.plot', 'bar', 'bigquery.Client', 'bigquery_client.query', 'data.head', 'data.values.reshape', 'df.df.loc.groupby', 'df.df.loc.groupby.count', 'df.filter', 'df.groupby', 'df.groupby.count', 'df.groupby.mean', 'df.groupby.sum', 'df.sort_values', 'df.sort_values.groupby', 'df.sort_values.groupby.count', 'head', 'import', 'len', 'np.array', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.DataFrame', 'plt.bar', 'plt.barchart', 'plt.barplot', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'print', 'query_job.to_dataframe', 'regressor.fit', 'sort', 'train_test_split', 'unemp.DataFrame', 'unemp.count', 'unemp.filter', 'unemp.groupby', 'unemp.groupby.Tract.value_counts', 'unemp.groupby.Tract.value_counts.nlargest', 'unemp.groupby.filter', 'unemp.groupby.len', 'unemp.head', 'unemp.plot', 'unemp.sum', 'unemp.tail', 'unemp.to_dataframe', 'unemp.unemp.dropNA', 'unemp.unemp.dropna', 'unemp.unemp.filter.groupby', 'unemp.unemp.groupby.mean', 'unemp.unemp.groupby.mean.plot', 'unemp.unemp.groupby.mean.print', 'unemp.unemp.loc.head', 'unemp.value_counts', 'unemp.values.reshape', 'y.head']"
jialincheoh,6,"['GridSearchCV', 'MSE', 'bigquery.Client', 'bigquery_client.query', 'client.list_tables', 'df.drop', 'df.head', 'df_test.drop', 'df_train.drop', 'format', 'grid.fit', 'grid.predict', 'gridcv_xgb.predict', 'import', 'np.sqrt', 'pd.DatetimeIndex', 'plot_importance', 'plt.legend', 'plt.plot', 'plt.style.use', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'sns.set_style', 'torch.device', 'torch.linspace', 'torch.randn', 'torch.sin', 'unemployment_data.head', 'unemployment_data.nunique', 'wage_data.head', 'xgb.XGBRegressor']"
jmahedy1,6,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'df.mean', 'example_function', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'unemploymentData.head', 'y.plot', 'y_pred.plot', 'zip']"
josephwildey,6,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
jverduzc,6,"['Dense', 'Dropout', 'IterativeImputer', 'KernelRidge', 'KernelRidge.fit', 'LinearRegression', 'LinearRegression.fit', 'LogisticRegression', 'LogisticRegression.fit', 'OneHotEncoder', 'RandomForestRegressor', 'RandomForestRegressor.fit', 'SGDRegressor', 'Sequential', 'StandardScaler', 'ax.flatten', 'ax.legend', 'ax.scatter', 'bigquery.Client', 'bigquery_client.query', 'complete_unemployment_prediction_data.drop', 'complete_unemployment_prediction_data.drop_duplicates', 'data.apply', 'data.astype', 'data.corr', 'data.corr.round', 'data.drop', 'data.groupby', 'data.groupby.apply', 'data.head', 'data.set_index', 'data.std', 'data.tail', 'data.unique', 'data.values.np.array.reshape', 'data.values.reshape', 'data.values.reshape.list.tract_name_encoder.transform.toarray', 'df.head', 'df.tail', 'display', 'final_prediction_data.drop', 'final_prediction_data.isna', 'final_prediction_data.isna.sum', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'future_weeks_pred.round', 'g.columns.g.loc.copy', 'g.fillna', 'g.head', 'g.mean', 'g.merge', 'grouped_data.groups.keys', 'i.split', 'i.split.split', 'i.split.strip', 'i.split.strip.split', 'imp.fit', 'imp.transform', 'import', 'initializers.RandomNormal', 'initializers.Zeros', 'inputs.drop', 'inputs.head', 'keras.optimizers.Adam', 'krr_model.fit', 'l_mae.round', 'l_mape.round', 'len', 'lin_model.predict', 'linear_model.Lasso', 'linear_model.Lasso.fit', 'list', 'logistic_model.fit', 'logistic_model.predict', 'make_pipeline', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.r2_score', 'new_data.head', 'nn_mae.round', 'nn_mape.round', 'nn_model.add', 'nn_model.compile', 'nn_model.fit', 'nn_model.predict', 'nn_model.summary', 'np.array', 'np.clip', 'np.round', 'parameters.RandomForestRegressor.fit', 'pd.DataFrame', 'pd.concat', 'pd.plotting.lag_plot', 'pd.set_option', 'pd.unique', 'plt.figure', 'plt.legend', 'plt.make_subplots', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'print', 'prnint', 'query_from_statement', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'rf_mae.round', 'rf_mape.round', 'rf_model.predict', 'sgd_mape.round', 'sgd_model.fit', 'sgd_model.predict', 'sklearn.linear_model.Lasso', 'sklearn.linear_model.Lasso.fit', 'sns.heatmap', 'str', 'sum', 'supplement_testing_data.drop', 'supplement_testing_data.set_index', 'svm.SVR', 'svm.SVR.fit', 'svm_mape.round', 'svm_model.fit', 'svm_model.predict', 'time_i.np.array.shift', 'time_i.shift', 'tmp.copy', 'tract_name_encoder.fit', 'tract_name_encoder.fit_transform', 'tract_name_encoder.transform', 'train_test_split', 'type', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.groupby', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_claims_data.set_index', 'unemployment_claims_data.sort_values', 'unemployment_prediction_data.drop', 'unemployment_prediction_data.drop_duplicates', 'unemployment_prediction_data.head', 'unemployment_prediction_data.isna', 'unemployment_prediction_data.isna.sum', 'unemployment_prediction_data.join', 'unemployment_prediction_data.to_csv', 'unemployment_wage_data.drop_duplicates', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.set_index', 'y.ravel', 'y_train.ravel']"
jz322,6,"['BIGQUERY.Client', 'BIGQUERY_PROJECT.Client', 'bigquery.Client', 'bigquery_client.query', 'data.Client', 'df.mean', 'import', 'pandas.DataFrame', 'print', 'query_job.to_dataframe']"
kasyaprk,6,"['bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.describe', 'data.drop', 'data.head', 'data.info', 'data.isnull', 'data.isnull.sum', 'data.shape', 'i.data.isnull', 'i.data.isnull.sum', 'i.data.value_counts', 'import', 'l.append', 'len', 'plt.figure', 'plt.show', 'print', 'query_job.to_dataframe', 'race_white.data.isnull', 'sns.countplot', 'sns.heatmap', 'sum']"
katldewitt,6,[]
kborgen37,6,"['bigquery.Client', 'bigquery_client.query', 'csv.writer', 'dict.fromkeys', 'exploreData.head', 'export.append', 'i.answers.insert', 'import', 'len', 'list', 'open', 'pd.set_option', 'plt.bar', 'plt.plot', 'predictionData.values.tolist', 'print', 'query_job.to_dataframe', 'set', 'statistics.mean', 'statistics.median', 'statistics.stdev', 'temp.append', 'testListx.append', 'testListy.append', 'tuple', 'unemploymentData.head', 'unemploymentData.values.tolist', 'uuid.append', 'uuid.count', 'values.append', 'write.writerow', 'write.writerows', 'x1.append', 'xCount.append', 'xValues.append', 'xValues.count', 'y.count', 'y1.append', 'y1.index']"
kd-2dvaghela,6,[]
konoikon,6,"['ProfileReport', 'Prophet', 'bigquery.Client', 'bigquery_client.query', 'df.drop', 'df.drop_duplicates', 'df.fillna', 'df.mean', 'import', 'm.add_seasonality', 'm.fit', 'm.make_future_dataframe', 'm.plot', 'm.predict', 'model.make_future_dataframe', 'new_prof.to_notebook_iframe', 'np.ceil', 'pd.DatetimeIndex', 'pd.to_datetime', 'prediction_list.head', 'preprocessing', 'print', 'profile.to_notebook_iframe', 'query_job.to_dataframe', 'str', 'type', 'unemployment_data.apply', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.head', 'unemployment_data.sort_values', 'wage_data.head']"
krongch2,6,"['COL_MAP', 'COL_MAP.d.dropna', 'COL_MAP.d.loc.reset_index', 'COL_MAP.dd.get_dummies', 'COL_MAP.g.dropna', 'COL_MAP.keys', 'ConvergenceWarning', 'IterativeImputer', 'LinearRegression', 'RandomForestRegressor', 'X.head', 'X.replace', 'a.groupby', 'abs', 'alpha.g.ewm.mean', 'arimax', 'arma.join', 'arma39.to_dict', 'arma_ewm.set_index', 'arma_week39.predicted_mean.astype', 'arma_week39.to_dict', 'avg.corr', 'ax.fill_between', 'ax.legend', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_yabel', 'ax.set_ylabel', 'ax.title', 'axs.legend', 'axs.set_ylabel', 'best_results.get_prediction', 'best_results.plot_diagnostics', 'bifquery.Client', 'bigquery.Client', 'bigquery_client.query', 'c.columns.difference', 'check', 'check_edu', 'clean', 'col.df.mean', 'col.g.isnull', 'col.g.isnull.all', 'col.gg.isnull', 'col.gg.isnull.all', 'colname.g.impute_logistic.copy', 'combine', 'compare_arima', 'compare_ewm', 'compare_two_arima_rms', 'compared_ewm', 'cond1.all', 'cond2.cond1.all', 'convert_to_submission', 'covid19_cases_data.head', 'd.apply', 'd.astype', 'd.columns.difference', 'd.columns.differnce', 'd.corr', 'd.fillna', 'd.filt.reset_index', 'd.get_subset.impute_industry.head', 'd.gropuby', 'd.groupby', 'd.groupby.apply', 'd.groupby.sort_values', 'd.items', 'd.join', 'd.keys', 'd.pd.to_datetime.astype', 'd.replace', 'd.reset_index', 'd.sort_values', 'd.to_csv', 'd.uu_id.unique', 'd.uu_ids.unique', 'd.values', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'datetime.datetime.strptime', 'datetime.strptime', 'dd.astype', 'dd.drop', 'dd.head', 'dd.index.pd.DatetimeIndex.to_period', 'dd.map', 'dd.plot', 'dd.set_index', 'dd.sort_values', 'dd.top_category_employer1.unique', 'dd.top_category_employer2.unique', 'dd.uu_id.unique', 'df.copy', 'df.copy.reset_index', 'df.fillna', 'df.iterrows', 'df.mean', 'df.replace', 'df.to_csv', 'df.to_dict', 'df.to_dict.iterrows', 'df.unique', 'df.uu_id.unique', 'df.values.tolist', 'df_imputed.drop', 'dict', 'dir', 'e.fillna', 'e.head', 'enumberate', 'enumerate', 'f.sort_values', 'f.sort_values.reset_index', 'fig.tight_layout', 'fill_na_weeks', 'fill_na_weeks.d.groupby.apply.reset_index', 'fill_non_existing_weeks', 'fill_non_existing_weeks.d.groupby.apply.reset_index', 'filt', 'fit.predict', 'format', 'fsm.ols', 'g.apply', 'g.astype', 'g.copy', 'g.copy.reset_index', 'g.drop', 'g.ewm', 'g.ewm.mean', 'g.ewm.mean.reset_index', 'g.index.pd.DatetimeIndex.to_period', 'g.isnull', 'g.join', 'g.loc.impute_iterative.reset_index', 'g.method.unique', 'g.plot', 'g.replace', 'g.set_index', 'g.sort_values', 'g.to_dict', 'g.total_claims.mean', 'g.unique', 'g.values.tolist', 'g.week_number.unique', 'g_na.g.pd.concat.sort_values', 'get_all', 'get_avg_total_claims.d.groupby.apply.reset_index', 'get_best_params', 'get_cols', 'get_cols.g.drop.astype', 'get_cols.gg.loc.head', 'get_cols.gg_replace.loc.head', 'get_covid', 'get_edu_cols', 'get_gender_cols', 'get_industry_cols', 'get_mae', 'get_prediction', 'get_race_cols', 'get_result_map', 'get_rms', 'get_subset', 'get_tables', 'get_train_test', 'get_unemployment', 'get_wage', 'get_week_number_map', 'gg.copy', 'gg.drop', 'gg.dropna', 'gg.impute_func.head', 'gg.impute_iterative.head', 'gg.impute_rowsum.head', 'gg.plot', 'grp.fsm.ols.fit', 'imp.apply', 'imp.to_csv', 'imp_tot.groupby', 'imp_tot.groupby.apply', 'imp_tot.to_csv', 'import', 'imput', 'impute', 'impute.d.groupby.apply.reset_index', 'impute_all', 'impute_all.imp_tot.groupby.apply.reset_index', 'impute_all.raw.groupby.apply.reset_index', 'impute_all.raw_full.groupby.apply.reset_index', 'impute_func', 'impute_industry', 'impute_industry.d.groupby.apply.reset_index', 'impute_iterative', 'impute_logistic', 'impute_rowsum', 'impute_total_claims.raw_full.groupby.apply.reset_index', 'imputer.fit_transform', 'insert_na_week_number', 'insert_na_week_number.raw.groupby.apply.reset_index', 'int', 'iter_cat', 'itertools.product', 'l.append', 'l.pd.DataFrame.reset_index', 'l.pd.DataFrame.sort_values', 'last.to_dict', 'len', 'list', 'load_clean', 'load_data', 'load_data_full', 'load_imp', 'load_imp_industry', 'load_imp_tot', 'load_raw', 'load_raw_full', 'max', 'max_avail_week_number.x.week_number.x.loc.copy', 'min', 'mod.fit', 'model.fit', 'model.get_params', 'model.predict', 'model.score', 'moving_average', 'np.abs', 'np.arange', 'np.arange.print.map', 'np.array', 'np.cumsum', 'np.isnan', 'np.linspace', 'np.random.randn', 'np.range', 'os.path.isfile', 'p.astype', 'p.fillna', 'p.iterrows', 'p.map', 'p.replace', 'p.to_csv', 'p.total_claims.isna', 'p.uu_id.unique', 'pandas.DataFrame', 'pd.DataFrame', 'pd.DateOffset', 'pd.DatetimeIndex', 'pd.Series', 'pd.Timestamp', 'pd.concat', 'pd.get_dummies', 'pd.read_csv', 'pd.set_option', 'pd.to_datetime', 'plot', 'plot_avg_total_claims', 'plot_cat', 'plot_edu', 'plot_impute_iterative', 'plot_industry', 'plot_regression', 'plot_rf', 'plt.close', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'plt.tight_layout', 'pred.conf_int', 'pred.predicted_mean.plot', 'predict', 'predict_all', 'print', 'print_impute', 'print_impute_cat', 'print_impute_rowsum', 'query', 'query_job.to_dataframe', 'r.astype', 'r.set_index', 'range', 'raw.drop', 'raw.drop_duplicates', 'raw.duplicated', 'raw.gropuby', 'raw.gropuby.apply', 'raw.group', 'raw.groupby', 'raw.groupby.apply', 'raw.loc.duplicated', 'raw.replace', 'raw.reset_index', 'raw.sort_values', 'raw.to_csv', 'raw.top_category_employer1.isna', 'raw.uu_id.unique', 'raw.week_number.unique', 'raw_full.groupby', 'raw_full.groupby.apply', 'raw_full.to_csv', 'read_data', 'regression.fit', 'replace_na_cols', 'replace_nan_cols', 'result.week_number.max', 'result_rf.to_csv', 'results.get_prediction', 'results.plot_diagnostics', 'results.summary', 'rf.fit', 'rf.predict', 'rf_industry', 'rf_industry.d.groupby.apply.reset_index', 'rf_industry_wrap', 'rf_industry_wrap.d.groupby.apply.reset_index', 'row.isna', 'row.isna.row.index.map', 'row.isna.row.map', 'row.isna.sum', 'row.np.array.isna', 'row.np.array.isna.sum', 'row.np.array.isnull', 'row.np.array.isnull.sum', 'row.values', 'row.values.isna', 'row.values.isnan', 'row.values.np.array.isnull', 'row.values.np.array.isnull.sum', 'rr.to_dict', 'run_rf', 'run_rf_all', 's.map', 'series.map', 'simplefilter', 'sklearn.ensemble.RandomForestRegressor', 'sklearn.ensemble.RandomForestRegressor.fit', 'sklearn.impute.IterativeImputer', 'sklearn.impute.SimpleImputer', 'sklearn.linear_model.LinearRegression', 'sklearn.linear_model.LogisticRegression', 'sklearn.linear_model.LogisticRegression.fit', 'sklearn.model_selection.train_test_split', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'sns.set', 'sorted', 'str', 'sum', 't.to_csv', 'temp.astype', 'temp.to_dict', 'test', 'test.fillna', 'test.plot', 'test_ewm', 'test_moving_average', 'train_test_split', 'type', 'u.county_fips.unique', 'u.countyfips.unique', 'u.edu_8th_or_less.isna', 'u.join', 'u.sort_values', 'u.to_csv', 'u.tract.unique', 'u.tract_name.unique', 'u.uu_id.unique', 'u.uuid.unique', 'w.to_csv', 'w.uu_id.average_wage', 'w.uu_id.unique', 'warnings.filterwarnings', 'warnings.simplefilter', 'week_number.g.week_number.g.loc.to_dict', 'week_number_to_date', 'week_number_to_datetime', 'weeknumber.g.week_number.g.loc.to_dict', 'weights.items', 'weights.values', 'ww.set_index', 'x.reset_index', 'x.week_number.max', 'x_test.copy', 'y.plot', 'y.reset_index', 'y.values.ravel', 'y_pred.plot', 'y_train.get_dummies', 'y_train.ravel', 'y_train.uniques', 'y_train.values.ravel', 'y_train.values.uniques', 'ycol.g.copy', 'ycol.g.isnull', 'ycol.y_train.unique', 'yhat.copy', 'ylabel.g.astype']"
ktang,6,"['DataFrame', 'LinearRegression', 'LogisticRegression', 'SGDRegressor', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'covid19_cases_data.tail', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.append', 'df.mean', 'df_pred_list.head', 'df_pred_list.unique', 'df_schema.head', 'df_three_col.head', 'df_three_col.isin', 'df_unemployment.head', 'df_unemployment.unique', 'df_unemployment.unique.sort', 'df_wage.head', 'example_function', 'import', 'int', 'len', 'lgb.Dataset', 'lgb.plot_importance', 'lgb.train', 'load_boston', 'logisticRegr.fit', 'logisticRegr.predict', 'logreg.fit', 'logreg.predict', 'max', 'mean_squared_error', 'min', 'model.fit', 'model.predict', 'np.array', 'np.array.reshape', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.reshape', 'pandas.DataFrame', 'pandas.concat', 'pd.DataFrame', 'pd.Series', 'pd.concat', 'pd.to_datetime', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'print', 'query.to_dataframe', 'query_job.to_dataframe', 'query_job_un.to_dataframe', 'random.seed', 'range', 'reg.fit', 'reg.predict', 'res.append', 'res.concat', 'res.to_csv', 'seaborn.lmplot', 'sgdr.fit', 'sgdr.predict', 'sns.boxplot', 'sns.heatmap', 'sns.lmplot', 'sns.scatterplot', 'sorted', 'test_data.mean', 'test_data.np.array.reshape', 'test_data.to_numpy', 'test_data.values.np.array.reshape', 'train_test_split', 'y.plot', 'y_pred.plot', 'zip']"
kushald2805,6,"['LinearRegression', 'abs', 'ax', 'ax.figure', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.data_type', 'data.describe', 'data.drop', 'data.dtype', 'data.dtypes', 'data.head', 'data.isna', 'data.isna.sum', 'data.shift', 'data.value_counts', 'df.dtype', 'df.mean', 'figsize', 'figure', 'import', 'list', 'model.fit', 'model.predict', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Dataframe', 'pd.Series', 'pd.dtype', 'pd.set_option', 'pd.to_dataframe', 'pd.to_datetime', 'plt.figure', 'plt.figure.set_figwidth', 'plt.show', 'print', 'query_job.to_dataframe', 'set', 'sns.heatmap', 'type', 'y.plot', 'y_pred.plot']"
lawalogunfowora,6,"['LinearRegression', 'abs', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'columns_arima.append', 'columns_rel.append', 'const.show', 'cont.show', 'csv.DictReader', 'data.corr', 'data.data.to_list', 'data.drop_duplicates', 'data.fillna', 'data.gender_female.unique', 'data.gender_male.unique', 'data.gender_na.unique', 'data.head', 'data.info', 'data.plot', 'data.race_amerindian.unique', 'data.race_asian.unique', 'data.race_black.unique', 'data.race_hawaiiannative.unique', 'data.race_noanswer.unique', 'data.race_other.unique', 'data.sample', 'data.set_index', 'data.uu_id.unique', 'data_arima.groupby', 'data_arima.groupby.reset_index', 'data_arima.groupby.sum', 'data_arima.groupby.sum.reset_index', 'data_arima.head', 'data_arima.reset_index', 'data_arima.set_index', 'data_arima.to_DataFrame', 'data_arima.to_frame', 'data_arima.unique', 'data_arima.unique.to_list', 'data_dict.key', 'data_dict.keys', 'file_param.to_dict', 'file_seasonal.to_dict', 'filename.head', 'filename.to_dict', 'final_file.to_csv', 'first_trial.head', 'format', 'i.data_arima.data_arima.groupby', 'i.data_arima.data_arima.groupby.sum', 'i.data_arima.data_arima.groupby.sum.reset_index', 'import', 'itertools.product', 'j.set_index', 'key.results.forecast', 'len', 'list', 'max', 'min', 'mod.fit', 'model.fit', 'my_dict.keys', 'np.array', 'np.asarray', 'open', 'param_dict_copy.pd.DataFrame.to_csv', 'param_dict_copy.to_csv', 'pd.DataFrame', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.show', 'pred.append', 'pred.conf_int', 'pred.predicted_mean.plot', 'print', 'query_job.to_dataframe', 'rand_list.append', 'range', 'relevant_features.index.to_list', 'relevant_features.to_list', 'results.keys', 'seasonal_dict_copy.pd.DataFrame.to_csv', 'sm.tsa.statespace.SARIMAX', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'submit.head', 'submit.info', 'submit.uu_id.unique', 'submit.uu_id.unique.size', 'test_2.info', 'tuple', 'warnings.filterwarnings', 'x.data_dict.plot', 'x.results.forecast', 'x.results.get_prediction', 'x.results.plot_diagnostics', 'y.astype']"
linkthelord,6,"['GradientBoostingRegressor', 'StandardScaler', 'a.drop', 'a.isna', 'a.isna.sum', 'a.select_dtypes', 'a.select_dtypes.columns.a.fillna', 'approximatedimputation', 'auto_arima', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bestp.append', 'bigquery.Client', 'bigquery_client.list_datasets', 'bigquery_client.query', 'c.drop', 'c.drop.reset_index', 'c.drop.to_csv', 'col.df3.astype', 'col.df3.nunique', 'col.df3.str.replace', 'combined.drop', 'combined.dropna', 'combined.dtype', 'combined.fill_na', 'combined.fillna', 'combined.groupby', 'combined.groupby.sum', 'combined.groupby.sum.reset_index', 'combined.head', 'combined.iloc.drop', 'combined.isna', 'combined.isna.sum', 'combined.max.combined.combined.prediction.merge.to_csv', 'combined.max.combined.combined.prediction.pd.merge.drop_duplicates', 'combined.max.combined.combined.prediction.pd.merge.drop_duplicates.to_csv', 'combined.max.combined.combined.prediction.pd.merge.to_csv', 'combined.mean', 'combined.plot', 'combined.prediction.pd.merge.drop_duplicates', 'combined.prediction.pd.merge.drop_duplicates.to_csv', 'combined.prediction.pd.merge.to_csv', 'combined.rename', 'combinedd.drop', 'complete.i.complete.mean', 'complete.mean', 'covid19_cases_data.head', 'data.colname', 'data.colnames', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.unique', 'data.valuas', 'data.values', 'df.mean', 'df1.uu_id.nunique', 'df2.uu_id.nunique', 'df3.astype', 'df3.copy', 'df3.corr', 'df3.drop', 'df3.replace', 'df3.uu_id.nunique', 'df3.uu_id.unique', 'experiment.append', 'experiment.groupby', 'experiment.groupby.sum', 'experiment.groupby.sum.reset_index', 'experiment.unique', 'experiment.unique.prediction.prediction.loc.index.astype', 'f.read', 'firstgroup.combined.sum', 'format', 'gb.get_group', 'gbr.fit', 'gbr.predict', 'gbr.score', 'groups.append', 'groups.groupby', 'groups.groupby.sum', 'groups.groupby.sum.reset_index', 'groups.unique', 'groups.unique.prediction.prediction.loc.index', 'groups.unqiue', 'groups.values', 'head', 'i.combined.fillna', 'i.combined.mean', 'i.combined.mode', 'i.groups.groupby', 'i.groups.groupby.sum', 'i.groups.groupby.sum.reset_index', 'i.groups.unique', 'i.groups.unique.prediction.prediction.loc.index.astype', 'import', 'int', 'itertools.product', 'j.i.data.values.isna', 'l.append', 'len', 'line.split', 'list', 'max', 'mean', 'mean_squared_error', 'mod.fit', 'nn.Linear', 'nn.ReLU', 'np.asarray', 'np.na', 'open', 'pandas.DataFrame', 'pd.get_dummies', 'pd.isna', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.legend', 'plt.show', 'pred.conf_int', 'pred.forecast', 'pred.predicted_mean', 'pred.predicted_mean.plot', 'prediction.columns.tolist', 'prediction.merge', 'prediction.to_csv', 'prediction.unique', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'range', 'results.get_prediction', 'results.plot_diagnostics', 'results.summary', 'sc.fit_transform', 'sc.transform', 'secondgroup.combined.sum', 'self.MyNetwork.super.__init__', 'self.fc1', 'self.fc2', 'self.relu', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.lineplot', 'sns.scatterplot', 'stats.linregress', 'stepwise_fit.summary', 'str', 'subgroups.set_index', 'sum', 'super', 'temp.astype', 'thirdgroup.combined.sum', 'train_test_split', 'type', 'unique', 'warnings.filterwarnings', 'y.astype', 'y.plot']"
m-2dschnell,6,"['RandomForestRegressor', 'abs', 'bigquery.Client', 'bigquery_client.query', 'col.i.x.x.loc.mean', 'data.corr', 'data.describe', 'data.drop', 'data.drop_duplicates', 'data.duplicated', 'data.factorize', 'data.fillna', 'data.fillna.head', 'data.head', 'data.race_amerindian.sum', 'data.sum', 'data.total_claims.sum', 'df.duplicated', 'import', 'li.append', 'model.fit', 'model.predict', 'model.score', 'np.where', 'out_df.to_csv', 'pd.DataFrame', 'pd.Index', 'pd.to_datetime', 'plt.figure', 'plt.show', 'pred.apply', 'pred.describe', 'pred.drop', 'pred.factorize', 'pred.head', 'pred.isin', 'pred.x.x.loc.mean', 'print', 'query_job.to_dataframe', 'set', 'sns.heatmap', 'train_test_split', 'type', 'x.factorize', 'x.isin']"
manthankeim,6,"['Counter', 'N.rndperm.df.loc.copy', 'PCA', 'Pipeline', 'StandardScaler', 'TSNE', 'UMAP', 'ax.matshow', 'ax.scatter', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'ax.set_zlabel', 'ax.subplot.gca', 'axs.plot', 'axs.set_title', 'bigquery.Client', 'bigquery_client.query', 'chart_metrics.keys', 'col.df.plot', 'col.df_post.plot', 'col.df_pre.plot', 'credentials.Certificate', 'data.plot.bar', 'data.user_email.isin', 'data_active.apply', 'data_active.str.find', 'data_active.tolist', 'database.collection', 'database.collection.get', 'database.collection.where', 'datetime.now', 'df.apply', 'df.plot', 'df.to_csv', 'df_post.head', 'df_post.plot', 'df_post.set_color_cycle', 'df_pre.column', 'df_pre.columns', 'df_pre.head', 'df_pre.plot', 'dict', 'digits.target.astype', 'display', 'doc.id.lower', 'doc.id.str.database.collection.get', 'doc.to_dict', 'doc.to_dict.value_counts', 'docs.to_csv', 'draw_imports_subplots', 'dt', 'email_list.append', 'event.append', 'event.value_counts', 'exp_plot.participant.emotion.pn.Column.embed', 'feat_cols.i.rndperm.df.loc.values.reshape', 'feat_cols.i.rndperm.df.loc.values.reshape.astype', 'fetch_openml', 'fig.add_subplot', 'fig.add_trace', 'fig.gca', 'fig.show', 'fig.update_layout', 'fig.update_traces', 'fig_2d.show', 'fig_3d.show', 'fig_3d.update_traces', 'fig_means.add_trace', 'fig_means.show', 'fig_means.update_layout', 'final_plat.isin', 'final_plat.sum', 'final_plat.to_csv', 'firebase_admin.initialize_app', 'firestore.client', 'float', 'form.to_dict', 'format', 'go.Bar', 'go.Box', 'go.Figure', 'go.Scatter', 'go.scatter.Line', 'go.scatter.Marker', 'have_queried.apply', 'have_queried.str.find', 'hub_metrics_object', 'import', 'inactive.apply', 'inactive.str.find', 'inactive.to_list', 'len', 'list', 'load_digits', 'load_iris', 'load_wine', 'make_subplots', 'math.pow', 'metric.submission_group_means.append', 'metric.submission_means.append', 'my_ax.set_color_cycle', 'np.random.permutation', 'np.random.seed', 'out', 'pandas.DataFrame', 'pca.fit_transform', 'pd.DataFrame', 'pd.ExcelFile', 'pd.concat', 'pipe.fit_transform', 'plot.legend_elements', 'plot_mean_line', 'plt.figure', 'plt.figure.gca', 'plt.gray', 'plt.legend', 'plt.scatter', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'pn.Column', 'pn.Widgets.IntSlider', 'pn.Widgets.Select', 'pn.depends', 'pn.widgets.IntSlider', 'pn.widgets.Select', 'post.parse', 'post_plot.plot', 'pre.parse', 'pre_plot.plot', 'print', 'print_hub_metrics_list', 'print_stats_result', 'print_t_result', 'px.bar', 'px.data.iris', 'px.line', 'px.scatter', 'px.scatter_3d', 'px.scatter_matrix', 'query_job.to_dataframe', 'range', 'read_json_file', 'run_submission_t_tests', 'scistats.ttest_ind', 'set', 'sns.color_palette', 'sns.scatterplot', 'stats.mean', 'stats.stdev', 'str', 'submissionId.submission_data.append', 'submissionId.submission_group_data.append', 'submission_t_test', 'subplot_labels.append', 'subplot_labels_arr.append', 't_test', 'temp_df.bar', 'temp_df.hvplot', 'temp_df.plot', 'ten_days.database.collection.where.stream', 'time.time', 'timedelta', 'tsne.fit_transform', 'type', 'umap_2d.fit', 'umap_2d.fit_transform', 'umap_2d.transform', 'umap_3d.fit_transform', 'user.lower', 'user_em.append', 'user_ids.append', 'user_metrics.keys', 'x.most_common', 'y.most_common']"
mapldx,6,[]
meenwp,6,"['DataFrame', 'LinearRegression', 'X.columns.score', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'corrheatmap', 'covid19_cases_data.head', 'data.corr', 'data.corr.round', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'data.tail', 'data.values.np.array.reshape', 'des_stat', 'df.average_wage.unique', 'df.corr', 'df.describe', 'df.drop', 'df.dropna', 'df.dtypes', 'df.edu_8th_or_less.unique', 'df.edu_grades_9_11.unique', 'df.edu_hs_grad_equiv.unique', 'df.edu_unknown.unique', 'df.fillna', 'df.gender_female.unique', 'df.gender_male.unique', 'df.gender_na.unique', 'df.groupby', 'df.groupby.sum', 'df.head', 'df.info', 'df.isnull', 'df.isnull.any', 'df.mean', 'df.plot', 'df.race_amerindian.unique', 'df.unique', 'df2.dropna', 'display', 'employ_wage_data.score', 'example_function', 'final_prediction_data.drop', 'final_reg.fit', 'final_reg.predict', 'float', 'format', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'hist_claims', 'import', 'int', 'max', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.mean_squared_error', 'min', 'model.fit', 'model.predict', 'modelevaluation', 'np.array', 'np.sqrt', 'np.triu_indices_from', 'np.zeros_like', 'ols', 'ols.fit', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.merge', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'plt.xlabel', 'plt.ylabel', 'pred_claims.astype', 'prediction_data.drop', 'prediction_data.groupby', 'prediction_data.groupby.mean', 'prediction_data.head', 'prediction_list.head', 'prediction_list.to_csv', 'prediction_list.uu_id.unique', 'print', 'query_from_statement', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'reduce', 'reg.fit', 'reg.predict', 'reg.score', 'reg_model.summary', 'regressor.fit', 'regressor.predict', 'result.summary', 'round', 'sm.OLS', 'sns.boxplot', 'sns.distplot', 'sns.diverging_palette', 'sns.heatmap', 'sns.lineplot', 'sns.relplot', 'sns.set', 'sum', 'train_test_split', 'umemploy_wage_data.ols.fit', 'unemploy_predict.drop', 'unemploy_predict.head', 'unemploy_wage_data.corr', 'unemploy_wage_data.describe', 'unemploy_wage_data.drop', 'unemploy_wage_data.fillna', 'unemploy_wage_data.groupby', 'unemploy_wage_data.groupby.mean', 'unemploy_wage_data.groupby.sum', 'unemploy_wage_data.head', 'unemploy_wage_data.ols.fit', 'unemploy_wage_data.score', 'unemploy_wage_data.value.reshape', 'unemploy_wage_data.values.reshape', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_data', 'unemployment_data.head', 'unemployment_data.size', 'unemployment_data.uu_id.size', 'unemployment_data.uu_id.unique', 'unemployment_data.week_number.unique', 'unemployment_prediction_data.head', 'unemployment_prediction_data.join', 'unemployment_prediction_data.to_csv', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.ols.fit', 'unemployment_wage_data.set_index', 'wage_data.average_wage.fillna', 'wage_data.average_wage.isnull', 'wage_data.average_wage.isnull.any', 'wage_data.average_wage.mean', 'wage_data.average_wage.where.mean', 'wage_data.fillna', 'wage_data.groupby', 'wage_data.groupby.mean', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.any', 'wage_data.tract.unique', 'wage_data.uu_id.unique', 'wage_data2.head', 'y.plot', 'y_pred.flatten', 'y_pred.plot', 'y_test.flatten', 'zip']"
memoriahu,6,"['abs', 'bigquery.Client', 'bigquery_client.query', 'data.set_index', 'df.pred.join.to_csv', 'fo.write', 'len', 'max', 'min', 'np.random.randint', 'np.random.uniform', 'o.to_csv', 'open', 'overall.describe', 'overall.head', 'pd.DataFrame', 'pd.merge', 'plt.bar', 'plt.figure', 'plt.grid', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'pred.head', 'pred.insert', 'pred.join', 'pred.set_index', 'pred.set_index.join', 'pred.to_csv', 'print', 'query_job.to_dataframe', 'query_jobb.to_dataframe', 'sum']"
moonooooo,6,"['Decimal', 'Exception', 'a.to_integral_value', 'bigquery.Client', 'bigquery_client.query', 'd.split', 'd.split.split', 'd.value', 'd.values', 'data.append', 'data.fillna', 'data.fillna.iloc', 'data.to_string', 'data_less_10w.append', 'data_missing.append', 'data_missing.drop_duplicates', 'data_missing.head', 'df.drop', 'df.sort_index', 'df.sort_index.reset_index', 'display', 'enumerate', 'fill_week4_and_week23', 'format', 'import', 'int', 'iter', 'len', 'list', 'mae_loss', 'map', 'next', 'np.absolute', 'np.around', 'np.array', 'np.mean', 'np.rint', 'np.round', 'num_of_uuids.np.array.sum', 'pd.DataFrame', 'pd.DataFrame.from_dict', 'pd.read_csv', 'pl_query_job.to_dataframe', 'plot_visit_count', 'plt.axhline', 'plt.bar', 'plt.barh', 'plt.eventplot', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.show', 'plt.text', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.ylabel', 'plt.yticks', 'pp.pprint', 'pp.print', 'pprint', 'pprint.PrettyPrinter', 'prediction_list.to_csv', 'print', 'query.bigquery_client.query.to_dataframe', 'query.bigquery_client.query.to_dataframe.head', 'query.bigquery_client.query.to_dataframe.to_string', 'query_all_total_claims', 'query_job.to_dataframe', 'query_job.to_dataframe.drop_duplicates', 'query_job.to_dataframe.drop_duplicates.to_numpy', 'query_job.to_dataframe.to_list', 'query_job.to_dataframe.to_numpy', 'range', 'raw_data_df_list.append', 'raw_total_claims_data.append', 'raw_total_claims_df.T.to_numpy', 'raw_total_claims_df.to_csv', 'result_to_csv.to_csv', 'round', 'row.np.array.mean', 'str', 'temp.head', 'temp.sort_index', 'temp.sort_index.reset_index', 'ten_35w_data.append', 'test.append', 'test.to_string', 'ud_query_job.to_dataframe', 'unemployement_data.columns', 'unemployement_data.columns.tolist', 'unemployement_data.head', 'unemployement_data.to_csv', 'unemployement_data.top', 'uuid.raw_total_claims_data.append', 'wage_data.head', 'wage_data.to_csv', 'warnings.filterwarnings', 'wd_query_job.to_dataframe', 'week_available.append', 'week_available.shape', 'week_number_count.T.style.hideIndex', 'week_number_count.T.style.hide_index', 'week_number_count.T.to_numpy', 'week_number_count.T.to_string', 'week_number_count.head', 'week_number_count.style.hide_index', 'week_number_count.to_dict', 'week_number_count.to_list', 'week_number_count.to_numpy', 'week_number_count.to_string', 'week_number_count_filled.append']"
nnonno,6,"['LinearRegression', 'bigquery.Client', 'bigquery_client.query', 'data.values.reshape', 'df.head', 'df1.plot', 'enumerate', 'enumerous', 'import', 'len', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'np.sqrt', 'pd.DataFrame', 'pd.isna', 'pd.unique', 'plt.grid', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_list.copy', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'train_test_split', 'unemployment_data.copy', 'unemployment_sample.drop', 'unemployment_sample.drop.to_numpy', 'unemployment_sample.drop.values.reshape', 'unemployment_sample.dropna', 'unemployment_sample.loc', 'unemployment_sample.to_numpy', 'wage_data.copy', 'wage_sample.drop', 'y_pred.flatten', 'y_test.flatten']"
oubotong,6,[]
raghu1996,6,"['A.score', 'ARIMA', 'ARIMA_model.plot_diagnostics', 'C_arr.append', 'GridSearchCV', 'Index', 'KNN_GV.fit', 'KNN_GV.score', 'KNeighborsClassifier', 'LabelEncoder', 'LinearRegression', 'MSE', 'OneHotEncoder', 'Print', 'R_arr.append', 'RandomForestRegressor', 'SARIMAX', 'SARIMAX_model.fit', 'SARIMA_model.plot_diagnostics', 'StandardScaler', 'X.astype', 'X.columns', 'X.drop', 'X_train.astype', 'X_train.columns', 'abs', 'actual.append', 'actual_nonstat.append', 'actual_stat.append', 'add.append', 'adfuller', 'ans.append', 'ans_df.sort_values', 'arange', 'auto_arima', 'bigquery.Client', 'bigquery_client.list_datasets', 'bigquery_client.list_tables', 'bigquery_client.query', 'boundary_week.data.data.loc.dropna', 'boundary_week.data.data.loc.item', 'boundary_week.data.uuid.data.data.loc.max', 'boundary_week.data.uuid.data.data.loc.min', 'check_stationary', 'client.list_tables', 'col.boundary_week.data.data.loc.asfloat', 'col.boundary_week.data.data.loc.astype', 'col.boundary_week.data.data.loc.dropna', 'col.boundary_week.data.data.loc.dropna.to_numpy', 'col.boundary_week.data.data.loc.dropna.to_numpy.reshape', 'col.boundary_week.data.data.loc.reshape', 'col.boundary_week.data.data.loc.reshape.astype', 'col.boundary_week.data.data.loc.to_numpy', 'col.boundary_week.data.data.loc.to_numpy.reshape', 'col.boundary_week.data.data.loc.values.reshape', 'col.boundary_week.data.data.loc.values.reshape.astype', 'col.data.diff', 'col.data.diff.dropna', 'col.data.dropna', 'col.df.isnull', 'col.df.isnull.sum', 'col.df.unique', 'col.merged_data.interpolate', 'col.merged_data.replace', 'col.ts_train.astype', 'cols.nextt.item', 'cols.prev.item', 'cols.train_data.fillna', 'cols.train_data.isnull', 'cols.train_data.isnull.sum', 'data.all', 'data.apply', 'data.asfreq', 'data.asfreq.fillna', 'data.astype', 'data.columns', 'data.data.loc.item', 'data.data.reset_index', 'data.diff', 'data.diff.apply', 'data.diff.diff', 'data.diff.dropna', 'data.diff.dropna.apply', 'data.drop', 'data.drop_duplicates', 'data.dropna', 'data.dtypes', 'data.head', 'data.interpolate', 'data.isna', 'data.isnull', 'data.isnull.sum', 'data.item', 'data.max', 'data.max.item', 'data.plot', 'data.rolling', 'data.rolling.mean', 'data.rolling.std', 'data.set_index', 'data.shift', 'data.unique', 'data.values', 'data.values.apply', 'data2.eq', 'data2.iterrows', 'dataBalanceCheck', 'dataExplore', 'dataFillNa', 'dataIdentifyDateMonth', 'data_filtered.corr', 'data_lastWeek.drop_duplicates', 'data_lastWeek.set_index', 'data_new.plot', 'data_pred.astype', 'data_pred.drop', 'data_pred.head', 'data_pred.set_index', 'data_pred.set_index.join', 'data_pred_query.copy', 'data_train.apply', 'data_train.asfreq', 'data_train.diff', 'data_train.diff.fillna', 'data_train.drop', 'data_train.fillna', 'data_train.get_dummies', 'data_train.group_by', 'data_train.group_by.interpolate', 'data_train.groupby', 'data_train.groupby.apply', 'data_train.groupby.interpolate', 'data_train.index.max', 'data_train.index.min', 'data_train.interpolate', 'data_train.max', 'data_train.reindex', 'data_train.set_index', 'data_train_x_m1.astype', 'data_train_y.astype', 'data_valid.drop', 'data_valid_x_m1.astype', 'datetime.datetime.strptime', 'datetime_list.append', 'decompose_data.plot', 'df.index.max', 'df.index.min', 'df_reindexed.fillna', 'df_reindexed.fillna.interpolate', 'df_reindexed.interpolate', 'diff_inv', 'encoder.fit', 'encoder.transform', 'entry_count.append', 'entry_count.sort', 'enumerate', 'err_arr.append', 'errors.np.isnan.sum', 'exog.data_train.fillna', 'exog_col.boundary_week.data.data.loc.dropna', 'final_output.assign', 'final_output.astype', 'final_output.rename', 'final_output.reset_index', 'final_output.to_csv', 'final_test_data.assign', 'final_test_data.copy', 'final_test_data.drop', 'final_test_data.dropna', 'final_test_data.isnull', 'final_test_data.isnull.sum', 'final_test_data.iterrows', 'float.ts_train.astype.reshape', 'float.ts_train.astype.reshape.shape', 'float.ts_train.astype.shape', 'float.ts_train.astype.to_numpy', 'float.ts_train.astype.to_numpy.shape', 'float.ts_train.to_numpy.astype.shape', 'forecast', 'forecast_col.boundary_week.data.data.loc.dropna', 'format', 'get_datetime', 'grid.fit', 'gridcv_xgb.predict', 'id.data.data.isnull', 'id.data.data.isnull.all', 'id.merged_data.merged_data.sort_values', 'id.ts_data.ts_data.ts_data.loc.unique', 'id.ts_data.unique.ts_data.ts_data.loc.unique', 'id1.data2.eq.any', 'idd.merged_data.merged_data.loc.copy', 'idd.merged_data.merged_data.sort_values', 'idd.merged_data.merged_data.unique', 'idd.ts_data.ts_data.sort_index', 'ids.merged_data.merged_data.loc.copy', 'ids.merged_data.merged_data.loc.diff', 'ids.merged_data.merged_data.loc.diff.diff', 'ids.merged_data.merged_data.loc.diff.diff.diff', 'ids.merged_data.merged_data.loc.diff.diff.diff.dropna', 'ids.merged_data.merged_data.loc.diff.diff.dropna', 'ids.merged_data.merged_data.loc.diff.dropna', 'import', 'int', 'itertools.product', 'le.fit', 'le.inverse_transform', 'le.inversetransform', 'le.transform', 'le_emp1.fit', 'le_emp1.transform', 'le_emp2.fit', 'le_emp2.transform', 'le_emp3.fit', 'le_emp3.transform', 'le_tractname.fit', 'le_tractname.transform', 'le_uuid.fit', 'le_uuid.inverse_transform', 'le_uuid.transform', 'len', 'list', 'loss', 'loss_arr.append', 'mape.isnull', 'mape.isnull.sum', 'mape.np.isnan.sum', 'max', 'max_week_no.data.data.item', 'max_week_no.data.data.loc.item', 'max_week_number.data.data.loc.item', 'max_week_number.item', 'max_week_number.ts_data.uuid.ts_data.ts_data.loc.item', 'merged_data.asfreq', 'merged_data.copy', 'merged_data.drop', 'merged_data.drop.drop_duplicates', 'merged_data.drop_duplicates', 'merged_data.dropna', 'merged_data.fillna', 'merged_data.head', 'merged_data.isnull', 'merged_data.isnull.sum', 'merged_data.merged_data.merged_data.loc.copy', 'merged_data.set_index', 'merged_data.sort_index', 'merged_data.unique', 'merged_data.uu_id.unique', 'merged_data.week_number.unique', 'min', 'mod.fit', 'model', 'model.fit', 'model.fit_transform', 'model.get_forecast', 'model.predict', 'model.score', 'new_data.asfreq', 'new_data.asfreq.dropna', 'new_data.asfreq.fillna', 'new_data.drop_duplicates', 'new_data.dropna', 'nextt.item', 'np.abs', 'np.antilog', 'np.arange', 'np.asarray', 'np.exp', 'np.floor', 'np.isnan', 'np.log', 'np.log.data_train.apply.fillna', 'np.log10', 'np.log10.data_train.apply.fillna', 'np.matrix', 'np.mean', 'np.nanmean', 'np.range', 'np.round', 'np.sqrt', 'np.sqrt.data_train.apply.fillna', 'np.where', 'np.zeros', 'onehot.fit_transform', 'out.unique', 'output.append', 'output_df.Metric.values', 'pd.DataFrame', 'pd.Dataframe', 'pd.DatetimeIndex', 'pd.Series', 'pd.concat', 'pd.date_range', 'pd.get_dummies', 'pd.merge', 'pd.series', 'pd.to_datetime', 'pd.unique', 'pdq.append', 'pdqs.append', 'plot_acf', 'plot_pacf', 'plt.axvline', 'plt.colorbar', 'plt.figure', 'plt.grid', 'plt.imshow', 'plt.legend', 'plt.plot', 'plt.savefig', 'plt.set_title', 'plt.show', 'plt.stem', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.xtickslabels', 'plt.ylabel', 'plt.yticks', 'pm.auto_arima', 'poission_model.fit', 'pred.append', 'pred_df.iterrows', 'pred_nonstat.append', 'pred_stat.append', 'prediction.item', 'prediction_data.copy', 'prediction_data.head', 'prediction_data.iterrows', 'prediction_out.astype', 'prepocessing.LabelEncoder', 'preprocessing.LabelEncoder', 'prev.item', 'print', 'print_column_info', 'print_na_info', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'query_job4.to_dataframe', 'query_job_pred.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'req.item', 'result.summary', 'rf.fit', 'rf.predict', 'rf1.fit', 'rf1.predict', 'rolling_mean.shift', 'round', 'row.item', 'row.item.pred_df.pred_df.loc.item', 'row.pred_df.pred_df.item', 'row.pred_df.pred_df.loc.item', 'sarimax_forecast', 'sarimax_gridsearch', 'scaler.fit', 'scaler.transform', 'seaborn.heatmap', 'seasonal_decompose', 'series.copy', 'series_undifferenced.cumsum', 'sm.GLM', 'sm.families.Poisson', 'sm.tsa.statespace.SARIMAX', 'start_week.ts_data.uuid.ts_data.ts_data.loc.copy', 'start_week_nonstat.ts_data.uuid.ts_data.ts_data.loc.copy', 'start_week_stat.ts_data.uuid.ts_data.ts_data.loc.copy', 'stat.append', 'str', 'test.drop', 'timeseries_data.head', 'timeseries_data.iterrows', 'timestamp_data.iterrows', 'tot_claims.append', 'total_claims.item', 'total_claims_list.append', 'train.drop', 'train_data.assign', 'train_data.drop', 'train_data.drop_na', 'train_data.dropna', 'train_data.eval', 'train_data.fillna', 'train_data.interpolate', 'train_data.isnull', 'train_data.isnull.sum', 'train_data.iterrows', 'train_data.sort_values', 'train_data.str.strip', 'train_data.unique', 'train_test_split', 'ts_data.asfreq', 'ts_data.drop_duplicates', 'ts_data.head', 'ts_data.rolling', 'ts_data.rolling.mean', 'ts_data.rolling.std', 'ts_data.sort_index', 'ts_data.unique', 'ts_data.uuid.ts_data.ts_data.loc.copy', 'ts_test.append', 'ts_test.ts_test.item', 'ts_test.ts_test.loc.item', 'ts_test_ex.astype', 'ts_train.astype', 'ts_train.drop_index', 'ts_train.max', 'ts_train.min', 'ts_train.numpy', 'ts_train.reset_index', 'ts_train.shape', 'ts_train.to_numpy', 'ts_train.to_numpy.astype', 'ts_train.to_numpy.shape', 'ts_train.values.astype', 'ts_train_ex.astype', 'ts_trainex.astype', 'unemployment_data.copy', 'unemployment_data.head', 'unemployment_data.unique', 'useful_data.astype', 'useful_data.drop', 'useful_data.fillna', 'useful_data.reshape', 'useful_data.to_numpy', 'useful_data.to_numpy.reshape', 'useful_data.toarray', 'useful_data.toarray.reshape', 'uu_id.ts_data.ts_data.rolling', 'uu_id.ts_data.ts_data.rolling.mean', 'uu_id_const.train_data.train_data.loc.unique', 'uu_id_const.vis_data.vis_data.loc.unique', 'uu_id_const.vis_data.week.vis_data.vis_data.loc.total_claims.item', 'uuid.ts_data.s_data.loc.rolling', 'uuid.ts_data.s_data.loc.rolling.std', 'uuid.ts_data.ts_data.loc.copy', 'uuid.ts_data.ts_data.loc.rolling', 'uuid.ts_data.ts_data.loc.rolling.mean', 'uuid.ts_data.ts_data.loc.rolling.std', 'uuid.ts_data.ts_data.loc.unique', 'uuid.ts_data.ts_data.rolling', 'uuid.ts_data.ts_data.rolling.mean', 'uuid_list.append', 'val.sort_values', 'val.val.rows', 'vals.items', 'values1.items', 'vis_data.append', 'vis_data.drop', 'vis_data.drop.drop_duplicates', 'vis_data.fillna', 'vis_data.isin', 'vis_data.isnull', 'vis_data.isnull.sum', 'vis_data.plot', 'vis_data.reset_index', 'vis_data.set_index', 'vis_data.set_index.reindex', 'vis_data.sort_values', 'vis_data.unique', 'vis_data.vis_data.loc.sort_values', 'vis_data.week_number.unique', 'wage_data.head', 'wage_data.unique', 'warnings.filterwarnings', 'warnings.simplefilter', 'week.data.data.reset_index', 'week_no_list.append', 'week_number.ts_data.uuid.ts_data.ts_data.loc.item', 'week_number.ts_data.uuid.ts_data.ts_data.loc.max', 'week_number_list.append', 'weeks.append', 'x.interpolate', 'xgb.XGBRegressor', 'y.astype', 'y.columns', 'y.isnull', 'y.isnull.sum', 'y.item', 'y.items', 'y.value', 'y.values', 'y_pred.conf_int', 'y_pred_df.data.data.loc.item', 'y_test.np.isnan.sum']"
reevapatel,6,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.describe', 'data.drop', 'data.head', 'data.info', 'data.plot', 'data_3.drop', 'df.mean', 'final_training_data.drop', 'final_training_data.dropna', 'final_training_data.head', 'hash', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.get_dummies', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'y.plot', 'y_pred.plot']"
rithvikd24,6,"['bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.head', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'unemployment_data.head', 'wage_data.head']"
rpresent,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'prediction_list.head', 'prediction_list.to_csv', 'query_job.to_dataframe', 'unemployment_data.describe', 'unemployment_data.head', 'unemployment_data.summary', 'unemployment_data.total_claims.describe', 'unemployment_data.total_claims.summary', 'wage_data.head']"
saikrishna99-2dcreator,6,['import']
sanket1105,6,"['ARIMA', 'GridSearchCV', 'LinearRegression', 'MAPE', 'RandomForestRegressor', 'RandomizedSearchCV', 'X.copy', 'X2.apply', 'XGBRegressor', 'a.data.replace', 'a.data.str.replace', 'a.data.str.split', 'a.unique', 'bigquery.Client', 'bigquery_client.query', 'breakcolumn', 'data.copy', 'data.drop', 'data.head', 'data.info', 'data.isna', 'data.isna.sum', 'data.replace', 'data.replce', 'data.str.split', 'data.uu_id.head', 'data1.copy', 'data1.drop', 'data1.fillna', 'data1.head', 'data1.info', 'data1.nunique', 'data2.drop', 'data2.drop_duplicates', 'data2.groupby', 'data2.head', 'data2.index.nunique', 'data2.join', 'data2.nunique', 'data2.set_index', 'data2.unique', 'data2.uu_id.nunique', 'data2.uu_is.nunique', 'df.astype', 'df.convert_dtypes', 'df.dtype', 'df.fillna', 'df.info', 'df.str.split', 'df.type', 'df1.copy', 'df1.drop', 'df2.apply', 'df2.drop', 'df3.drop_duplicates', 'df3.head', 'final_data.head', 'final_prediction.drop', 'final_prediction.head', 'final_prediction.info', 'final_prediction.reset_index', 'future_weeks_pred.astype', 'grid_search.fit', 'grid_search.predict', 'i.data1.replace', 'import', 'int', 'iterator.mean', 'iterator.std', 'iterator.std.iterator.mean.iterator.round', 'k.first', 'k.head', 'k.isna', 'k.isna.sum', 'k.tail', 'k.uu_id.pd.unique.sum', 'label_encoder.fit_transform', 'len', 'linreg.fit', 'linreg.predict', 'list', 'max', 'max_depth.append', 'mean_squared_error', 'model.fit', 'np.abs', 'np.cumsum', 'np.linspace', 'np.mean', 'np.nunique', 'np.random.randn', 'np.round', 'pd.DataFrame', 'pd.merge', 'pd.nunique', 'pd.option_context', 'pd.set_option', 'pd.to_numeric', 'pd.unique', 'plt.figure', 'plt.legend', 'plt.plot', 'prediction.pd.DataFrame.head', 'prediction.set_index', 'prediction.to_csv', 'prediction.uu_id.nunique', 'preprocessing.LabelEncoder', 'print', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'range', 'regressor.fit', 'regressor.predict', 'rf_random.fit', 'rfr.fit', 'rfr.predict', 'round', 'set', 'str.df.astype.astype', 'train_test_split', 'unemployment_data.copy', 'unemployment_data.drop_duplicates', 'unemployment_data.duplicated', 'unemployment_data.head', 'wage_data.drop_duplicates', 'wage_data.head', 'xgb.XGBRegressor', 'xgb_grid.fit', 'xgb_grid.predict']"
sawula,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
sbrunswi,6,[]
shahryarbq,6,"['LinearRegression', 'OneHotEncoder', 'SimpleImputer', 'X.corr', 'X.head', 'X.pd.DataFrame.corr', 'X.pd.dataFrame.corr', 'X.pd.dataframe.corr', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.mean', 'enc.fit_transform', 'imp.fit_transform', 'import', 'information_data.head', 'len', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.dataFrame', 'pd.dataframe', 'pd.get_dummies', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'unemployment_data.corr', 'unemployment_data.drop', 'unemployment_data.head', 'unemployment_data.set_index', 'wage_data.corr', 'wage_data.head', 'y.plot', 'y_pred.plot', 'zip']"
shangjia35,6,"['bigquery.Client', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'plt.figure', 'plt.legend', 'plt.plot', 'print']"
shlok2002,6,"['bigquery.Client', 'bigquery_client.query', 'df.describe', 'df.head', 'df.value_counts', 'df.value_counts.group', 'import', 'pd.set_option', 'query_job.to_dataframe']"
shuuul,6,"['bigquery.Client', 'import', 'plt.style.use', 'sns.set_style']"
sogunmod,6,"['np.cumsum', 'np.linspace', 'np.random.randn', 'print']"
souradipp76,6,[]
tame0001,6,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.head', 'df.mean', 'df.to_csv', 'get_data', 'import', 'int', 'len', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Dataframe', 'plt.figure', 'plt.legend', 'plt.plot', 'pred._to_csv', 'pred.to_csv', 'pred.to_list', 'pred.to_list.apply', 'pred.to_numpy', 'pred.to_numpy.as_type', 'pred.to_numpy.astype', 'prediction_list.groupby', 'print', 'query_job.to_dataframe', 'sub.to_list', 'submission.head', 'type', 'unemploy.groupby', 'unemploy.groupby.apply', 'unemploy.groupby.get_group', 'unemploy.groupby.mean', 'unemploy.groupby.mean.apply', 'unemployment.head', 'unemployment.unemployment.sort_by', 'unemployment.unemployment.sort_values', 'unemployment.unemployment.sort_values.drop_duplicates', 'unemployment.unemployment.sort_values.ewm', 'unemployment.unemployment.sort_values.ewm.mean', 'unemployment.unemployment.sort_values.ewm.mean.dtype', 'unemployment.unemployment.sort_values.ewm.mean.tail', 'unemployment.unemployment.sort_values.ewm.mean.to_numpy', 'unemployment.unemployment.sort_values.mean', 'unemployment.unemployment.sort_values.mean.apply', 'unemployment.unemployment.sort_values.tail', 'unemployment.unemployment.sortby', 'wage.head', 'x.sort_values', 'x.sort_values.drop_duplicates', 'x.sort_values.drop_duplicates.ewm', 'x.sort_values.drop_duplicates.ewm.mean', 'x.sort_values.drop_duplicates.ewm.mean.to_numpy', 'x.sort_values.ewm', 'x.sort_values.ewm.mean', 'x.sort_values.ewm.mean.to_numpy', 'x.sort_values.tail']"
tigr-2d10,6,"['LinearRegression', 'abs', 'array.reshape', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'cols_plot.unemployment_claims_data.plot', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.head', 'df1.plot', 'float', 'import', 'max', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'min', 'model.fit', 'model.predict', 'np.DataFrame', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.sqrt', 'pd.DataFrame', 'pd.Series', 'pd.to_datetime', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'sns.heatmap', 'sns.set', 'sum', 'train_test_split', 'unemployment_claim_data', 'unemployment_claims_data', 'unemployment_claims_data.corr', 'unemployment_claims_data.drop', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.plot', 'unemployment_claims_data.set_index', 'unemployment_claims_data.values.reshape', 'unemployment_data.corr', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.duplicated', 'unemployment_data.head', 'unemployment_data.plot', 'unemployment_data.reshape', 'unemployment_data.set_index', 'unemplyment_data.drop', 'wage_data.head', 'y.flatten', 'y.plot', 'y_pred.flatten', 'y_pred.plot', 'y_test.flatten']"
tingchunkuo,6,"['AutoARIMA', 'AutoARIMA.fit', 'AutoARIMA.fit_predict', 'X.append', 'autoarima_args.AutoARIMA.fit_predict', 'bigquery.Client', 'bigquery_client.query', 'bigquery_client.query.to_dataframe', 'bigquery_client.query.to_dataframe.drop_duplicates', 'bigquery_client.query.to_dataframe.drop_duplicates.reset_index', 'bigquery_client.query.to_dataframe.nunique', 'c.startswith', 'cols.data.fillna', 'cols.data.groupby.sum', 'cols.data.groupby.sum.plot', 'cols.data.replace', 'cols.data.replace.describe', 'cols.data.replace.sum', 'cols.data.sum', 'cols_race.data.groupby.sum', 'cols_race.data.groupby.sum.plot', 'common_cols.data_dict.data_dict.merge.sort_values', 'common_cols.data_dict.data_dict.merge.sort_values.drop_duplicates', 'common_cols.data_dict.data_dict.merge.sort_values.drop_duplicates.reset_index', 'common_cols.data_dict.data_dict.merge.sort_values.reset_index', 'cvalues.isna', 'cvalues.isna.sum', 'data.data.set_index', 'data.data.set_index.loc.plot', 'data.dropna', 'data.get_dummies', 'data.groupby', 'data.groupby.count', 'data.groupby.count.max', 'data.groupby.count.plot', 'data.groupby.count.sum', 'data.groupby.max', 'data.groupby.plot.scatter', 'data.groupby.sum', 'data.groupby.sum.plot', 'data.groupby.sum.plot.scatter', 'data.groupby.sum.reset_index', 'data.groupby.sum.reset_index.merge', 'data.iloc.data.data.set_index', 'data.iloc.data.data.set_index.asfreq', 'data.iloc.data.data.set_index.asfreq.bfill', 'data.iloc.data.data.set_index.plot', 'data.items', 'data.min.data.data.set_index', 'data.min.data.data.set_index.asfreq', 'data.min.data.data.set_index.asfreq.bfill', 'data.nunique', 'data.plot', 'data.plot.scatter', 'data.scatter', 'data.set_index', 'data.set_index.groupby', 'data.set_index.groupby.plot', 'data.set_index.groupby.scatter', 'data.set_index.plot', 'data.sum', 'data.unique', 'data_dict.data_dict.merge.sort_values', 'data_dict.data_dict.merge.sort_values.drop_duplicates', 'data_dict.data_dict.merge.sort_values.drop_duplicates.reset_index', 'data_dict.data_dict.merge.sort_values.reset_index', 'data_dict.data_dict.sum.all', 'data_dict.items', 'data_dict.merge', 'data_dict.sum', 'data_dict.values', 'data_tables.tolist', 'data_tables.unique', 'dd.items', 'df.describe', 'dict', 'e.data.groupby.sum', 'e.data.groupby.sum.plot', 'format', 'i.data.data.set_index', 'i.data.data.set_index.asfreq', 'i.data.data.set_index.asfreq.bfill', 'i.data.data.set_index.asfreq.reindex', 'i.data.groupby.count', 'import', 'int', 'ironhacks_competition.bigquery_client.query.to_dataframe', 'len', 'list', 'map', 'max', 'min', 'model.predict', 'model.predict.reset_index', 'model.predict.reset_index.rename', 'model.predict.reset_index.rename.merge', 'n_periods.AutoARIMA.fit_predict', 'pd.DataFrame', 'pd.Series', 'pd.concat', 'pd.date_range', 'pd.date_range.range.pd.Series.reset_index', 'pd.date_range.rename', 'pd.date_range.rename.range.pd.Series.reset_index', 'pd.date_range.rename.to_series', 'pd.date_range.to_series', 'pd.date_range.to_series.rename', 'pd.get_dummies', 'pd.to_datetime', 'plt.bar', 'plt.figure', 'pred_results.append', 'pred_results.pd.DataFrame.data_dict.merge.to_csv', 'pred_results.pd.DataFrame.prediction_list.merge.to_csv', 'prediction_list.merge', 'print', 'print_missing', 'query_job.to_dataframe', 'range', 'round', 'schema.bigquery_client.query.to_dataframe', 'schema.data_tables.data_tables.loc.tolist', 'seaborn.scatterplot', 'set', 'sns.legend', 'sns.plot', 'sns.scatterplot', 'str', 'table_name.bigquery_client.query.to_dataframe', 'table_name.schema.bigquery_client.query.to_dataframe', 'time_index.y.reindex.fillna', 'tqdm', 'train_timeperiods.i.data.data.set_index.asfreq.reindex.fillna', 'tuple', 'visual_data.merge', 'wt.astype', 'wt.set_index', 'wt.set_index.loc.astype', 'wt.set_index.loc.to_series', 'wt.y.index.max.sum', 'x.merge', 'y.index.max', 'y.index.max.astype', 'y.index.max.date', 'y.plot', 'y.reindex']"
tungvu3117,6,[]
twinblade02,6,"['BayesianRidge', 'Bidirectional', 'DL_X.describe', 'DL_X.head', 'DL_XTest.astype', 'DL_XTest.describe', 'DL_XTest.reshape', 'DL_XTest.to_numpy', 'DL_XTrain.astype', 'DL_XTrain.to_numpy', 'DL_YTest.astpye', 'DL_YTest.to_numpy', 'DL_YTrain.astype', 'DL_data.describe', 'DL_data.drop', 'DL_data.head', 'Dense', 'Dropout', 'ENet.predict', 'ElasticNetCV', 'GS.fit', 'GridSearchCV', 'LE.fit_transform', 'LE.transform', 'LR.fit', 'LR.predict', 'LR2.fit', 'LR2.predict', 'LSTM', 'LSTM_regressor.add', 'LSTM_regressor.compile', 'LSTM_regressor.fit', 'LSTM_regressor.predict', 'LabelEncoder', 'Lasso', 'LassoCV', 'LinearRegression', 'MM_claims.fit_transform', 'MM_claims.inverse_transform', 'MM_other.fit_transform', 'MM_other.inverse_transform', 'MM_wage.fit_transform', 'MinMaxScaler', 'PReg.fit_transform', 'PolynomialFeatures', 'RB_claims.fit_transform', 'RB_claims.inverse_transform', 'RB_other.fit_transform', 'RB_other.inverse_transform', 'RB_other.transform', 'RandomForestRegressor', 'RandomizedSearchCV', 'Regressor_BR.fit', 'Regressor_BR.predict', 'Regressor_LA_bestFit.fit', 'Regressor_Lasso.predict', 'Regressor_RF.predict', 'Regressor_RF_bestFit.fit', 'Regressor_RF_bestFit.predict', 'Regressor_SVR.fit', 'Regressor_SVR.predict', 'RepeatedKFold', 'RepeatedKFoldKFold', 'RepeatedStratifiedKFold', 'RobustScaler', 'SC_other.fit_transform', 'SC_other.transform', 'SVR', 'Sequential', 'StackLSTM_Regressor.add', 'StackLSTM_Regressor.compile', 'StackLSTM_Regressor.fit', 'StackLSTM_Regressor.predict', 'StackLSTM_regressor.predict', 'StandardScaler', 'X.ravel', 'X_test.ENet.predict.reshape', 'X_test.Regressor_BR.predict.reshape', 'X_test.Regressor_Lasso.predict.reshape', 'X_test.Regressor_RF.predict.reshape', 'X_test.Regressor_RF_bestFit.predict.reshape', 'X_test.Regressor_SVR.predict.reshape', 'X_test.describe', 'X_test.values.Regressor_RF_bestFit.predict.reshape', 'Y.describe', 'Y.ravel', 'Y.reshape', 'Y.shape', 'Y_pred_BR.flatten', 'Y_pred_ENet.flatten', 'Y_pred_Lasso.flatten', 'Y_pred_RFR.flatten', 'Y_pred_SVR.flatten', 'Y_pred_SVR.reshape', 'Y_test.RB_claims.inverse_transform.flatten', 'Y_test.flatten', 'Y_train.ravel', 'ax.bar', 'ax.legend', 'bigquery.Client', 'bigquery_client.query', 'check_unemployment.isnull', 'check_unemployment.isnull.sum', 'check_unemployment.isnulll', 'check_unemployment.isnulll.sum', 'check_unemployment.unique', 'check_unemployment.unique.value_counts', 'check_unemployment.value_counts', 'clean_uemp.dropna', 'clean_umepl.corr', 'clean_umepl.isnull', 'clean_umepl.isnull.sum', 'clean_umepl.value_counts', 'clean_unemploymentDf.corr', 'clean_unemploymentDf.duplicated', 'clean_unemploymentDf.fillna', 'clean_unemploymentDf.isnull', 'clean_unemploymentDf.isnull.sum', 'confusion_matrix', 'datetime.strptime', 'dict', 'edu_hist.plot', 'evaluate_regreENetor', 'evaluate_regressor', 'evaluate_regressorENet', 'float', 'gender_demographics.plot', 'get_pred_frame', 'get_predictions', 'grid.fit', 'import', 'ingest.describe', 'ingest.drop', 'ingest.to_csv', 'int', 'len', 'loguniform', 'main_df.copy', 'main_df.corr', 'main_df.datetime.strptime.strftime', 'main_df.describe', 'main_df.drop', 'main_df.dtype', 'main_df.groupby', 'main_df.groupby.count', 'main_df.groupby.mean', 'main_df.groupby.sum', 'main_df.isna', 'main_df.isna.sum', 'main_df.isnull', 'main_df.isnull.sum', 'main_df.nuinque', 'main_df.nunique', 'main_df.rename', 'main_df.unique', 'main_df.unique.count', 'main_df.values.reshape', 'mean_absolute_error', 'mean_squared_error', 'merged_ingest.copy', 'merged_ingest.describe', 'merged_ingest.drop', 'merged_ingest.head', 'merged_ingest.isnull', 'merged_ingest.isnull.sum', 'merged_ingest.sample', 'merged_ingest.to_csv', 'np.abs', 'np.arange', 'np.array', 'np.insert', 'np.mean', 'np.ones_like', 'np.reshape', 'np.sqrt', 'np.triu', 'old_ingest.describe', 'os.makedirs', 'pd.DataFrame', 'pd.concat', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.ylabel', 'poly.fit_transform', 'poly.transform', 'prediction_array.flatten', 'prediction_list.copy', 'prediction_list.dtype', 'prediction_sub.append', 'prediction_sub.to_csv', 'print', 'query_job.to_dataframe', 'range', 'regressor.predict', 'result_list.append', 'result_list.dtypes', 'search.fit', 'search_Lasso.fit', 'sns.barplot', 'sns.displot', 'sns.heatmap', 'sns.hist', 'sns.histplot', 'sns.kdeplot', 'sns.pairplot', 'sns.scatterplot', 'sum', 'sum.main_df.groupby.sum', 'train_test_split', 'unemployment_data.copy', 'unemployment_data.corr', 'unemployment_data.describe', 'unemployment_data.fillna', 'unemployment_data.info', 'unemployment_data.isnull', 'unemployment_data.isnull.sum', 'unemployment_data.notnull', 'unemployment_data.replace', 'unemployment_data.unique', 'uniform', 'wage_data.dropna', 'wage_data.duplicated', 'wage_data.fillna', 'wage_data.info', 'wage_data.isnull', 'wage_data.isnull.sum', 'wage_data.mean', 'zip']"
venkys96,6,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
vishalcv98,6,[]
vishveshvsk,6,"['LabelEncoder.fit_transform', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'id.work_data_collection.drop', 'id.work_data_collection.drop_duplicates', 'import', 'linear_model.LinearRegression', 'lm.fit', 'lm.score', 'num_data.interpolate', 'pd.merge', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'series.interploate', 'sns.heatmap', 'type', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.fillna', 'unemployment_data.head', 'unemployment_data.iloc.astype', 'unemployment_data.iloc.interpolate', 'unemployment_data.interpolate', 'unemployment_data.to_csv', 'wage_data.drop', 'wage_data.fillna', 'wage_data.head', 'work_data.drop_dulpicates', 'work_data.drop_duplicates', 'work_data.head']"
vpoliset,6,"['LinearRegression', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'df.head', 'df.mean', 'df.values.reshape', 'df1.plot', 'df2.to_csv', 'dtype', 'edu_level.groupby', 'edu_level.groupby.count', 'edu_level.groupby.count.reset_index', 'edu_level.groupby.count.reset_index.sort_values', 'edu_level.head', 'edu_lvl.head', 'edu_lvl.max', 'edu_lvl.min', 'example_function', 'gender.groupby', 'gender.groupby.count', 'gender.groupby.count.reset_index', 'gender.groupby.count.reset_index.sort_values', 'gender.head', 'gender.max', 'genders.head', 'genders.max', 'import', 'len', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.sqrt', 'pandas.DataFrame', 'pd.DataFrame', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'table_data.head', 'train_test_split', 'unemployment_data.columns', 'unemployment_data.dropna', 'unemployment_data.head', 'wage_data.head', 'y_pred.flatten', 'y_test.flatten']"
xiaohanyu1,6,[]
xp1orer,6,[]
xuhenggao,6,[]
yaminipraneetha,6,"['LinearRegression', 'LinearRegression.fit', 'PCA', 'XGBRegressor', 'XGBRegressor.fit', 'X_test.drop', 'X_train.drop', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'df_data.head', 'df_final.to_csv', 'df_pred_final_1.drop_duplicates', 'df_test.drop', 'fin.columns.isin', 'fin.drop', 'fin.set_index', 'fin.shape', 'final_data.drop', 'final_data.info', 'final_data1.set_index', 'import', 'int', 'len', 'list', 'lm.mean_squared_error', 'lm.predict', 'lm.score', 'mean_squared_error', 'model.fit', 'model.predict', 'model.score', 'pca.fit_transform', 'pd.DataFrame', 'pd.get_dummies', 'plt.show', 'pred_data.head', 'pred_data.info', 'pred_data.join', 'pred_data.merge', 'pred_data.set_index', 'print', 'query_job.to_dataframe', 'set', 'set1.diference', 'set1.difference', 'set2.difference', 'sum', 'test_train_split', 'train_test_split', 'umemp_data.info', 'unemp_data.astype', 'unemp_data.describe', 'unemp_data.drop', 'unemp_data.dropna', 'unemp_data.fillna', 'unemp_data.gender_male.isnull', 'unemp_data.groupby', 'unemp_data.groupby.count', 'unemp_data.groupby.fillna', 'unemp_data.groupby.head', 'unemp_data.groupby.notna', 'unemp_data.groupby.notna.transform', 'unemp_data.groupby.notnull', 'unemp_data.groupby.notnull.transform', 'unemp_data.groupby.sum', 'unemp_data.groupby.transform', 'unemp_data.head', 'unemp_data.hist', 'unemp_data.info', 'unemp_data.isna', 'unemp_data.isna.sum', 'unemp_data.isnull', 'unemp_data.merge', 'unemp_data.notna', 'unemp_data.notnull', 'unemp_data.notnull.sum', 'unemp_data.notnull.unemp_data.groupby', 'unemp_data.notnull.unemp_data.groupby.transform', 'unemp_data.nunique', 'unemp_data.replace', 'unemp_data.shape', 'unemp_data.unique', 'unemp_data.uu_id.unemp_data.sort_values', 'wage_data.describe', 'wage_data.fillna', 'wage_data.groupby', 'wage_data.groupby.transform', 'wage_data.head', 'wage_data.info', 'x.fillna', 'x.isnull', 'x.mean', 'x.mean.isna', 'x.mean.isnull', 'x.mean.null', 'x.mode', 'xgb.XGBRegressor', 'xgb.XGBRegressor.fit']"
yizhou-2dfang,6,[]
zhanwang90,6,"['LinearRegression', 'MAPE', 'MSPE', 'OLS', 'X.drop', 'X.head', 'X_lag1.y_lag1.OLS.fit', 'X_lag1.y_lag1.OLS.fit.summary', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'dat.value_counts', 'data.apply', 'data.copy', 'data.corr', 'data.data.isnull', 'data.data.isnull.all', 'data.day', 'data.drop', 'data.head', 'data.info', 'data.isna', 'data.plot', 'data.poisson.fit', 'data.sample', 'data.set_index', 'data.shift', 'data.value_counts', 'dataBalanceCheck', 'dataExplore', 'dataFillNa', 'dataIdentifyDWM', 'dataIdentifyDateMonth', 'data_balance.fillna', 'data_balance.groupby', 'data_balance.head', 'data_balance.index.duplicated', 'data_balance.index.unique', 'data_balance.interpolate', 'data_balance.reindex', 'data_balance.reset_index', 'data_balance.set_index', 'data_balance.set_index.reindex', 'data_balance.sort_index', 'data_balance.week_number.max', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.reindex.reset_index', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.set_index.reindex.reset_index', 'data_balance.week_number.min', 'data_balance_train.drop', 'data_balance_train_x_m1.astype', 'data_balance_train_y.astype', 'data_balance_valid.drop', 'data_balance_valid_x_m1.astype', 'data_balanceindex.duplicated', 'data_estimate_m1.head', 'data_lastWeek.drop_duplicates', 'data_lastWeek.set_index', 'data_pred.astype', 'data_pred.drop', 'data_pred.head', 'data_pred.set_index', 'data_pred.set_index.join', 'data_pred_query.copy', 'data_pred_query.head', 'data_pred_query.merge', 'data_pred_query.to_csv', 'data_train.drop', 'data_train_x.head', 'data_train_x_m1.astype', 'data_train_x_m1.dtype', 'data_train_x_m1.head', 'data_train_x_m1.info', 'data_train_y.astype', 'data_unemp.head', 'data_valid.drop', 'data_valid_x_m1.astype', 'data_wage.head', 'date.isna', 'datetime', 'datetime.datetime', 'datetime.strptime', 'df.mean', 'df_balance.fillna', 'df_balanced.fillna', 'grp.set_index', 'grp.set_index.interpolate', 'id.data.data.isnull', 'id.data.data.isnull.all', 'import', 'len', 'linear_model.PoissonRegressor', 'm1.fit', 'm1.summary', 'math.ceil', 'max', 'min', 'model.fit', 'model.predict', 'model_lag1.fit', 'model_lag1.summary', 'np.cumsum', 'np.linspace', 'np.random.randn', 'output.head', 'pandas.DataFrame', 'pd.DataFrame', 'pd.DatetimeIndex', 'pd.MultiIndex.from_product', 'pd.Series', 'pd.get_dummies', 'pd.sum', 'pd.to_datetime', 'pd.to_numeric', 'pd.unique', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'poission_model.fit', 'poission_model_m2.fit', 'poisson', 'print', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'query_job_unemp.to_dataframe', 'query_job_wage.to_dataframe', 'range', 'result.predict', 'result.summary', 'result_m2.predict', 'result_m2.summary', 'sm.GLM', 'sm.add_constant', 'sm.families.Poisson', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'str', 'sum', 'type', 'x.head', 'y.plot', 'y_pred.plot', 'zip']"
abbott34,9,"['LinearRegression', 'LinearRegression.fit', 'abs', 'bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.head', 'data.info', 'data.rename', 'dict', 'import', 'len', 'list', 'mean_absolute_error', 'mean_squared_error', 'np.mean', 'pd.DataFrame', 'pd.DataFrame.from_dict', 'pd.DataFrame.from_records', 'pd.Series', 'pd.append', 'pd.concat', 'pd.factorize', 'pd.series', 'plt.bar', 'plt.bar.plot', 'plt.plot', 'pred_id.MAE.append', 'pred_id.MSE.append', 'pred_id.actual.append', 'pred_id.prediction.append', 'pred_id.predictions.append', 'prediction_list_data.head', 'print', 'query_job.to_dataframe', 'query_job.to_dataframe.head', 'range', 'reg.predict', 'relevant_unemployment_df.apply', 'relevant_unemployment_df.astype', 'relevant_unemployment_df.convert_dtypes', 'relevant_unemployment_df.convert_dtypes.info', 'relevant_unemployment_df.drop', 'relevant_unemployment_df.drop_duplicates', 'relevant_unemployment_df.dropna', 'relevant_unemployment_df.dropna.info', 'relevant_unemployment_df.groupby', 'relevant_unemployment_df.groupby.count', 'relevant_unemployment_df.groupby.count.pd.DataFrame.plot', 'relevant_unemployment_df.head', 'relevant_unemployment_df.info', 'relevant_unemployment_df.isna', 'relevant_unemployment_df.isna.sum', 'relevant_unemployment_df.join', 'relevant_unemployment_df.map', 'relevant_unemployment_df.value_counts', 'relevant_unemployment_df.value_counts.plot', 'relevant_unemployment_df.value_counts.plot.bar', 'relevant_unemployment_df.value_counts.values', 'results_df.explode', 'row.append', 'row.concat', 'set', 'temp_df.append', 'temp_df.convert_dtypes', 'temp_df.drop', 'temp_df.head', 'temp_df.head.values', 'temp_df.info', 'temp_df.isna', 'temp_df.isna.temp_df.loc.head', 'temp_df.isnull', 'temp_df.reset_index', 'temp_df.reset_index.info', 'test.head', 'total_claims_avg.append', 'tracts.append', 'type', 'unemployment_data.head', 'wage_data.head', 'wage_data.order_by', 'wage_data.set_index', 'wage_data.sort_values', 'warnings.simplefilter']"
ahhp0521,9,[]
akatti7,9,"['Bigquery.Client', 'bigquery.Client', 'bigquery_client.query', 'data.head', 'import', 'print', 'query_job.to_dataframe']"
amaltom,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'merged_data.head', 'pd.merge', 'prediction_list.head', 'prediction_list.merge', 'print', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'unemployment_data.describe', 'unemployment_data.groupby', 'unemployment_data.groupby.mean', 'unemployment_data.head', 'unemployment_data.value_counts', 'unemplyment_data.value_counts', 'unmeployment_data.groupby', 'unmeployment_data.groupby.mean', 'wage_data.head']"
amoghkokari,9,"['ARIMA', 'LeaveOneOut', 'Mdf.head', 'Mdf.to_csv', 'bigquery.Client', 'bigquery_client.query', 'cdf.head', 'cdf.unique', 'covid19_cases_data.head', 'data.plot', 'data1.drop', 'data1.index.value_counts', 'data1.plot', 'data1.set_index', 'data1.sort_index', 'data1.value_counts', 'df.mean', 'dfp.keys', 'dfp.val', 'dfp.vals', 'dfp.values', 'dfp.valus', 'dict', 'dtf.set_index', 'dtf.sort_index', 'emp_cols.mdf.replace', 'f1_df.plot', 'f1_df.set_index', 'f2_df.describe', 'f2_df.drop_duplicates', 'f2_df.groupby', 'f2_df.groupby.mean', 'f2_df.groupby.set_index', 'f2_df.set_index', 'f2_df.unique', 'f2_df.value_counts', 'f3_df.drop', 'f3_df.drop_duplicates', 'f3_df.np.array.flatten', 'f3_df.value_count', 'f3_df.value_counts', 'f3_df.values_count', 'f_df.drop_duplicates', 'f_df.f_df.groupby.mean', 'f_df.groupby', 'f_df.groupby.mean', 'f_df.nunique', 'f_df.set_index', 'f_df.unique', 'f_df.value_counts', 'fdf.value_counts', 'format', 'import', 'int', 'itertools.product', 'len', 'lgb.Dataset', 'lgb.LightGBMTunerCV', 'lgb.reset_parameter', 'list', 'loo.split', 'max', 'mdf.corr', 'mdf.drop', 'mdf.drop_duplicates', 'mdf.head', 'mdf.nunique', 'mdf.replace', 'mdf.unique', 'mdf.value_counts', 'mod.fit', 'mod.predict', 'n1.to_csv', 'new.columns', 'new.set_index', 'new.to_csv', 'new1.columns', 'new1.drop', 'np.array', 'optuna.create_study', 'optuna.logging.set_verbosity', 'pandas.DataFrame', 'pd.DataFrame.from_dict', 'pd.read_csv', 'pd.to_numeric', 'pdf.drop', 'pdf.head', 'pdf.sort', 'pdf.to_csv', 'pdf.value_counts', 'plt.figure', 'plt.show', 'print', 'query1_job.to_dataframe', 'query_job.to_dataframe', 'range', 'results.predict', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'sorted', 'total_claims.append', 'tuner.run', 'udf.columns', 'udf.corr', 'udf.drop', 'udf.head', 'udf.nunique', 'udf.replace', 'udf.to_csv', 'udf.unique', 'udf.value_counts', 'uu_id.append', 'wdf.head', 'wdf.to_csv', 'week_number.append']"
anamita01,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.head', 'import', 'query_job.to_dataframe', 'querydb']"
anamitapowwow,9,"['BIGQUERY.Client', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'unemployment_data.head', 'wage_data.head']"
ananyaipsita,9,"['np.cumsum', 'np.linspace', 'np.random.randn']"
anirudhtunga,9,[]
arjun-2dstevens,9,[]
aubohlin,9,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'csv.writer', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df_pred.df_pred.where.dropna', 'df_pred.df_un.where.dropna', 'df_pred.where', 'df_un.df_un.sort', 'df_un.df_un.sort_values', 'df_un.df_un.sort_values.drop_duplicates', 'df_un.df_un.sort_values.drop_duplicates.set_index', 'df_un.df_un.sortby', 'df_un.df_un.where.dropna', 'df_un.where', 'df_wage.head', 'df_working.mean', 'enumerate', 'import', 'key.tract_dict.ewm', 'key.tract_dict.ewm.mean', 'key.tract_dict.mean', 'key.tract_dict.rolling', 'key.tract_dict.rolling.mean', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'open', 'pd.Series', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'prediction_dict.items', 'print', 'query_job.to_dataframe', 'querydb', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'str', 'tract.df_un.df_un.sort_values', 'tract.df_un.df_un.sort_values.drop_duplicates', 'tract.df_un.df_un.sort_values.drop_duplicates.set_index', 'tract.head', 'tract_dict.head', 'tract_dict.items', 'tract_dict.plot', 'tract_dict.tail', 'writer.writerow', 'y.plot', 'y_pred.plot', 'zip']"
avprasad125,9,"['bigquery.Client', 'bigquery_client.query', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'plt.figure', 'plt.legend', 'plt.plot', 'query_job.to_dataframe']"
beingmerry,9,[]
cadenjarausch,9,[]
cardshistory,9,[]
carrol54,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
crystalhappycat,9,"['bigquery.Client', 'bigquery_client.query', 'client.list_tables', 'covid19_cases_data.head', 'df.mean', 'format', 'import', 'pandas.DataFrame', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'unemployment_data.head', 'wage_data.head']"
dadal09,9,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe', 'unemployment_data.drop_duplicates']"
dayoonsuh,9,"['ARMAmodel.fit', 'ARMAmodel.get_forecast', 'ARMAmodel.predict', 'LinearRegression', 'RandomForestRegressor', 'SARIMAX', 'StandardScaler', 'X.head', 'average_wage.median', 'bigquery.Client', 'bigquery_client.query', 'claim_sum_week.first', 'claim_sum_week.head', 'claims.append', 'covid19_cases_data.head', 'covid19_cases_data.sort_values', 'csv.writer', 'csvwriter.writerow', 'csvwriter.writerows', 'data.drop', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.sort_values', 'data.total_claims.astype', 'data.total_claims.median', 'data.total_claims.values.reshape', 'data.tract.unique', 'data.week_number.values.reshape', 'data_count.items', 'errors', 'f', 'f10', 'float', 'float.data.total_claims.astype.values.reshape', 'groupby_id.first', 'groupby_id.get_group', 'groupby_id.to_dict', 'import', 'int', 'len', 'lessthanten.append', 'list', 'lm.fit', 'mean_absolute_error', 'mean_squared_error', 'median', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'metrics.r2_score', 'np.arange', 'np.array', 'np.asarray', 'np.linspace', 'np.mean', 'np.poly1d', 'np.polyfit', 'np.sqrt', 'open', 'pd.DataFrame', 'pd.concat', 'pd.merge', 'pd.read_csv', 'plt.grid', 'plt.legend', 'plt.line', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'predict_claim', 'predict_claim.head', 'predict_claims', 'prediction_list.tolist', 'prediction_list.uu_id.tolist', 'prediction_list.uu_id.value_counts', 'prediction_list.uu_id.value_counts.to_dict', 'predictions.apply', 'predictions.tolist', 'preprocessing.scale', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'regr.fit', 'regr.predict', 'regressor.fit', 'regressor.predict', 'result.head', 'result.np.array.reshape', 'result.prediction.iloc.round', 'result.reshape', 'result.sort_values', 'rfr.fit', 'rfr.predict', 'rfr.score', 'round', 'rows.append', 'sc.fit_transform', 'sc.transform', 'scale', 'shape', 'sns.heatmap', 'train_test_split', 'unemployment_data.drop', 'unemployment_data.drop.head', 'unemployment_data.drop_duplicates', 'unemployment_data.drop_duplicates.fillna', 'unemployment_data.dropna', 'unemployment_data.duplicated', 'unemployment_data.edu_grades_9_11.unique', 'unemployment_data.fillna', 'unemployment_data.fillna.corr', 'unemployment_data.filter', 'unemployment_data.groupby', 'unemployment_data.groupby.median', 'unemployment_data.groupby.median.get_group', 'unemployment_data.groupby.pd.DataFrame.head', 'unemployment_data.groupby.sum', 'unemployment_data.head', 'unemployment_data.isnull', 'unemployment_data.isnull.sum', 'unemployment_data.nunique', 'unemployment_data.shape', 'unemployment_data.sort_values', 'unemployment_data.sort_values.reindex', 'unemployment_data.sort_values.reset_index', 'unemployment_data.tail', 'unemployment_data.top_category_employer1.head', 'unemployment_data.tract.count', 'unemployment_data.tract.count.sum', 'unemployment_data.tract.duplicated', 'unemployment_data.tract.duplicated.sum', 'unemployment_data.tract.duplicates', 'unemployment_data.tract.isnull', 'unemployment_data.tract.isnull.sum', 'unemployment_data.tract.nunique', 'unemployment_data.tract.unique', 'unemployment_data.tract.unique.sum', 'unemployment_data.tract.value_counts', 'unemployment_data.tract.value_counts.sort_values', 'unemployment_data.usnull', 'unemployment_data.usnull.sum', 'unemployment_data.uu_id.count_values', 'unemployment_data.uu_id.tolist', 'unemployment_data.uu_id.unique', 'unemployment_data.uu_id.unique.count', 'unemployment_data.uu_id.unique.sum', 'unemployment_data.uu_id.value_counts', 'unemployment_data.uu_id.value_counts.sort', 'unemployment_data.uu_id.value_counts.to_dict', 'unemployment_data.uu_id.value_counts.tolist', 'unemployment_data.uu_ids.count_values', 'uuid.unemployment_data.uu_id.unemployment_data.copy', 'uuids.remove', 'wage.isnull', 'wage.isnull.sum', 'wage.tract.nunique', 'wage_data.average_wage.fillna', 'wage_data.average_wage.median', 'wage_data.drop_duplicates', 'wage_data.fillna', 'wage_data.filter', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.sum', 'wage_data.tract.nunique', 'wage_data.uu_id.nunique', 'warnings.filterwarnings', 'y_pred.conf_int', 'y_pred.flatten', 'y_pred.tolist', 'y_test.flatten', 'y_test.tolist', 'y_test.values.ravel', 'y_train.values.ravel']"
deep-2d20,9,[]
destryed,9,"['RandomForestRegressor', 'StandardScaler', 'StandardScaler.fit_transform', 'abs', 'adfuller', 'autocorrelation_plot', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'bigqury_client.query', 'col.df3.astype', 'col.df3.nunique', 'col.df3.replace', 'col.df3.str.replace', 'col.np.nan.df3.df3.unique', 'covid19_cases_data.head', 'data.head', 'df.astype', 'df.copy', 'df.corr', 'df.drop', 'df.mean', 'df.replace', 'df.uu_id_enc.nunique', 'df1.head', 'df1.to_csv', 'df1.uu_id.nunique', 'df1.uu_id.unique', 'df2.head', 'df2.uu_id.nunique', 'df3.abs.sum', 'df3.astype', 'df3.columns.remove', 'df3.columns.str.replace', 'df3.copy', 'df3.corr', 'df3.drop', 'df3.dropna', 'df3.fillna', 'df3.fillna.replace', 'df3.race_white.unique', 'df3.replace', 'df3.split', 'df3.str.replace', 'df3.str.split', 'df3.sum', 'df3.test_df.pd.merge.drop', 'df3.test_df.pd.merge.drop.drop_duplicates', 'df3.time.unique', 'df3.timeperiod.unique', 'df3.timeperiods.unique', 'df3.unique', 'df3.uu_id.nunique', 'df3.uu_id.unique', 'df3.uu_id_enc.nunique', 'df3.uu_id_enc.unique', 'df3.week_number.df3.sort_values', 'df3_.drop_duplicates', 'df3_.plot', 'df3_.week_number.unique', 'df4.total_claims.df4.total_claims.df4.all', 'features.k.k.test_df.drop', 'final_pred', 'float', 'format', 'g.week_number.g.mean', 'import', 'int', 'itertools.cycle', 'itertools.product', 'k.df3.sum', 'k.df3.uu_id.df3.mean', 'li.append', 'list', 'mean', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'mod.fit', 'next', 'no.log', 'np.array', 'np.exp', 'np.isnan', 'np.log', 'np.mean', 'np.nan.df3.df3.unique', 'np.nan.temp.temp.unique', 'np.sqrt', 'opt_features', 'opt_features2', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Datetime', 'pd.concat', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'pd.tools.plotting.autocorrelation_plot', 'plt.legend', 'plt.show', 'plt.subplots', 'pred.conf_int', 'pred.predicted_mean.plot', 'print', 'query_job.to_dataframe', 'query_job.todataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_DataFrame', 'query_job3.to_dataframe', 'range', 'reg.fit', 'reg.predict', 'res.sum', 'results.get_prediction', 'results.get_prediction.plot', 'results.plot_diagnostics', 'results.summary', 'rf.fit', 'rf.predict', 'rg', 'round', 'sc.fit_transform', 'sc.optimize', 'sc.transform', 'scipy.optimize', 'scipy.optimize.maximize', 'scipy.optimize.minimize', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.color_palette', 'sns.heatmap', 'sns.lineplot', 'sns.scatterplot', 'sp.optimize', 'statistics.mean', 'str', 'str.df3.unique', 'submission_prediction_output.fillna', 'submission_prediction_output.isna', 'submission_prediction_output.isna.values.any', 'submission_prediction_output.isnull', 'submission_prediction_output.isnull.values.any', 'submission_prediction_output.to_csv', 'submission_prediction_output.total_claims.nunique', 'submission_prediction_output.uu_id.nunique', 'submission_prediction_output.uu_id.unique', 'submission_prediction_output.uu_id_enc.unique', 'sum', 'temp.astype', 'temp.drop', 'temp.replace', 'temp.sort_values', 'temp2.drop', 'tesmp.replace', 'test_df.astype', 'test_df.copy', 'test_df.drop', 'test_df.drop_duplicates', 'test_df.drop_duplicates.dropna', 'test_df.isna', 'test_df.race_black.unique', 'test_df.to_csv', 'test_df.total_claims.unique', 'test_df.uu_id.unique', 'test_df.uu_id_enc.unique', 'test_df.week_number.test_df.sort_values', 'test_df3.fillna', 'test_features.drop', 'test_features.dropna', 'test_features.dropna.drop', 'test_features.dropna.drop.drop_duplicates', 'time_pred', 'train_test_split', 'unemp_data.head', 'val.predict', 'wage_data.head', 'xgb.XGBRegressor', 'y.plot']"
divya2890,9,"['LinearRegression', 'Unemployment_data.head', 'Unemployment_data.shape', 'X_test.head', 'X_test.index', 'X_test.shape', 'a.astype', 'a.rename', 'a.replace', 'a.style.hide_index', 'a.to_csv', 'a.to_string', 'abs', 'astype', 'bigquery.Client', 'bigquery_client.query', 'count.a.astype', 'covid19_cases_data.head', 'data.astype', 'data.columns', 'data.corr', 'data.drop', 'data.fillna', 'data.head', 'data.max', 'data.min', 'import', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'pd.DataFrame', 'pd.Dataframe', 'pd.to_csv', 'plt.figure', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'test.astype', 'test.drop', 'test.fillna', 'y_pred.shape']"
dougcrabill,9,"['ExponentialSmoothing', 'IterativeImputer', 'IterativeImputer.fit', 'LinearRegression', 'SimpleImputer', 'VARMAX', 'X.X.loc.values.reshape', 'X.dropna', 'X_train.head', 'abs', 'allweeks.drop', 'allweeks.fillna', 'allweeks.join', 'allweeks.loc', 'allweeks.mean', 'allweeks.median', 'allweeks.set_index', 'allweeks.shape', 'allweeks.to_numpy', 'allweeks.to_numpy.shape', 'allweeks.values.len', 'allweeks.values.range', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.append', 'data.corr', 'data.corr.round', 'data.drop', 'data.head', 'data.tail', 'data.values', 'data.values.np.array.reshape', 'data.values.reshape', 'describe', 'df.fillna', 'df.fillna.to_numpy', 'df.fillna.to_numpy.flatten', 'df.mean', 'df.to_numpy', 'df.to_numpy.flatten', 'df.to_numpy.flatten.fillna', 'display', 'dopred', 'dp.dataframe', 'empdata.astype', 'empdata.columns', 'empdata.corr', 'empdata.describe', 'empdata.describe.transpose', 'empdata.describe.transpose.shape', 'empdata.drop', 'empdata.drop_duplicates', 'empdata.dropna', 'empdata.edu_grades_9_11.loc', 'empdata.edu_grades_9_11.plot', 'empdata.empdata.empdata.loc.values.reshape', 'empdata.empdata.loc.describe', 'empdata.empdata.loc.drop', 'empdata.empdata.loc.drop_duplicates', 'empdata.empdata.loc.loc.plot', 'empdata.empdata.loc.mean', 'empdata.empdata.loc.median', 'empdata.empdata.loc.plot', 'empdata.empdata.loc.reshape', 'empdata.empdata.loc.values.dp.dataframe.plot', 'empdata.empdata.loc.values.pandas.dataframe.plot', 'empdata.empdata.loc.values.plot', 'empdata.empdata.loc.values.reshape', 'empdata.get_dummies', 'empdata.getdummies', 'empdata.head', 'empdata.head.transpose', 'empdata.keys', 'empdata.keys.drop', 'empdata.loc', 'empdata.loc.describe', 'empdata.max', 'empdata.mean', 'empdata.median', 'empdata.nunique', 'empdata.plot', 'empdata.plot.box', 'empdata.plot.scatter', 'empdata.replace', 'empdata.set_index', 'empdata.shape', 'empdata.shift', 'empdata.sort', 'empdata.sort_values', 'empdata.sort_values.plot', 'empdata.sum', 'empdata.unique', 'empdata.unique.np.sort', 'empdata.unique.numpy.sort', 'empdata.unique.reshape', 'empdata.unique.sort', 'empdata.unique.sort_values', 'empdata.unique.sorted', 'empdata.uupred.pd.merge.head', 'empdata.value_sort', 'empdata.values', 'empdata.values.reshape', 'empdata.values.reshape.sort', 'empdata.values.reshape.sort_values', 'empdata.values.sort', 'empdata.values.sort_values', 'empdata.values_sort', 'example_function', 'final_prediction_data.drop', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'head', 'help', 'i.empdata.empdata.loc.mean', 'i.empdata.empdata.loc.to_list', 'imp_mean.fit', 'imp_mean.transform', 'import', 'imputer.fit', 'imputer.transform', 'int', 'int64', 'last_week.range.pd.DataFrame.join', 'lastw.range.pd.DataFrame.join', 'len', 'list', 'load_lynx', 'load_wineind', 'm.fit', 'm.fit.predict', 'm.predict', 'm_fit.predict', 'm_fit.simulate', 'meancpw.append', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'model.score', 'model_fit.forecast', 'model_fit.simulate', 'np.array', 'np.asarray', 'np.cumsum', 'np.linspace', 'np.plot', 'np.random.randn', 'np.sort', 'np.sqrt', 'pandas.DataFrame', 'pandas.dataframe', 'pd.DataFrame', 'pd.Series', 'pd.get_dummies', 'pd.join', 'pd.merge', 'pd.to_datetime', 'plot', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'pm.auto_arima', 'pm.datasets.load_wineind', 'pm.plot_acf', 'print', 'qtables.head', 'query_from_statement', 'query_job.to_dataframe', 'query_job.to_dataframe.drop_duplicates', 'query_job.to_dataframe.drop_duplicates.fillna', 'race_hawaiiannative.empdata.nunique', 'random', 'range', 'range.pd.DataFrame.join', 'regressor.fit', 'regressor.predict', 'shape', 'sns.heatmap', 'sort', 'str', 'sum', 'testuu_id', 'testuu_id.allweeks.join.fillna', 'testuu_id.fillna', 'testuu_id.index', 'testuu_id.join', 'testuu_id.last_week.range.pd.DataFrame.join.fillna', 'testuu_id.lastw.range.pd.DataFrame.join.fillna', 'testuu_id.median', 'testuu_id.median.int', 'testuu_id.range.pd.DataFrame.join.fillna', 'testuu_id.set_index', 'train_test_split', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_prediction_data.head', 'unemployment_prediction_data.join', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.set_index', 'uu.uupred.uupred.loc.flatten', 'uupread.head', 'uupred.astype', 'uupred.at', 'uupred.concat', 'uupred.describe', 'uupred.drop', 'uupred.drop.join', 'uupred.dtypes', 'uupred.head', 'uupred.join', 'uupred.loc', 'uupred.max', 'uupred.merge', 'uupred.merge.join', 'uupred.to_csv', 'uupred.uupred.loc.flatten', 'uupred.values.shape', 'wagedata.head', 'week37.rename', 'weekdata.plot.box', 'weeks.sort', 'weeks.sorted', 'weeks.to_numpy.sort', 'weeks.to_numpy.sorted', 'x.append', 'x.plot', 'y.align', 'y.plot', 'y_pred.fillna', 'y_pred.flatten', 'y_pred.plot', 'y_pred.reshape', 'y_pred.values', 'y_pred.view', 'y_test.flatten', 'y_test.reshape', 'y_test.reshape.flatten', 'y_test.reshape.to_numpy.flatten', 'y_test.to_numpy', 'y_test.to_numpy.flatten']"
drsuriya1991,9,[]
dwijenchawra,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
dylanadal0,9,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
esquared13,9,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery.erinenzinger', 'bigquery_client.query', 'data.corr', 'data.drop', 'data.head', 'data.loc', 'data.plot', 'data.sample', 'data.set_index', 'data.values.reshape', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.Series', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'regressor.fit', 'sns.heatmap', 'sns.set', 'str', 'train_test_split', 'unemployment_data.head']"
eveclarke1,9,"['', 'LinearRegression', 'LinearRegression.fit', 'Linear_Regression', 'Linear_Regression.fit', 'LogisticRegression', 'MAPE', 'MSPE', 'SimpleImputer', 'StandardScaler', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'axs.legend', 'axs.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'bike.drop', 'cols_plot.data.plot', 'combine', 'covid19_cases_data.head', 'data.copy', 'data.corr', 'data.drop', 'data.head', 'data.ironhacks_competition', 'data.ironhacks_competition.head', 'data.isna', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'data.values.reshape', 'dataBalanceCheck', 'dataFillNa', 'dataIdentifyDWM', 'data_balance.fillna', 'data_balance.index.duplicated', 'data_balance.index.unique', 'data_balance.interpolate', 'data_balance.reset_index', 'data_balance.set_index', 'data_balance.set_index.reindex', 'data_balance.sort_index', 'data_balance.week_number.max', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.set_index.reindex.reset_index', 'data_balance.week_number.min', 'data_balance_train.drop', 'data_balance_train_x_m1.astype', 'data_balance_valid.drop', 'data_balance_valid_x_m1.astype', 'data_pred_query.copy', 'data_train.drop', 'data_valid.drop', 'data_valid_x_m1.astype', 'dataset.head', 'df.drop', 'df.mean', 'df.unique', 'df.uu_id.unique', 'dict', 'enumerate', 'example_function', 'fnmatch.filter', 'g.copy', 'g.copy.reset_index', 'g.loc.impute_iterative.reset_index', 'g.unique', 'g.values.tolist', 'gen_find', 'get_week_number_map', 'id.data.data.isnull', 'id.data.data.isnull.all', 'imp_tot.to_csv', 'import', 'impute_iterative', 'impute_total_claims.raw_full.groupby.apply.reset_index', 'imputer.fit_transform', 'insert_na_week_number.raw.groupby.apply.reset_index', 'ironhacks_competition.head', 'ironhacks_competition.unemployment_data.head', 'ironhacks_data.ironhacks_competition.head', 'len', 'linear_model.LinearRegression', 'linear_model.predict', 'linear_regressor.fit', 'linear_regressor.predict', 'load_data', 'load_data_full', 'load_imp_tot', 'lr.fit', 'lr.predict_proba', 'max', 'mean_absolute_error', 'min', 'mnist.load_data', 'model.fit', 'model.predict', 'model.score', 'np.abs', 'np.arange', 'np.array', 'np.cumsum', 'np.linspace', 'np.mean', 'np.random.randn', 'os.path.isfile', 'os.path.join', 'os.walk', 'pandas.DataFrame', 'params.append', 'pd.DataFrame', 'pd.MultiIndex.from_product', 'pd.Series', 'pd.get_dummies', 'pd.read', 'pd.read_csv', 'pd.set_option', 'pd.to_datetime', 'pd.unique', 'plot_acf', 'plot_decision_regions', 'plot_impute_iterative', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.xscale', 'plt.ylabel', 'preddiction_list_data.head', 'prediction_data.head', 'prediction_lisst.head', 'print', 'pyplot.get_cmap', 'pyplot.imshow', 'pyplot.show', 'query', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'range', 'raw.drop', 'raw.drop_duplicates', 'raw.groupby', 'raw.groupby.apply', 'raw.replace', 'raw.reset_index', 'raw.sort_values', 'raw.to_csv', 'raw_full.groupby', 'raw_full.groupby.apply', 'raw_full.to_csv', 'regressor.fit', 'regressor.predict', 'result.predict', 'scaler.fit_transform', 'scaler.transform', 'series.map', 'sklearn.impute.IterativeImputer', 'sns.boxplot', 'sns.heatmap', 'sns.scatterplot', 'sns.set', 'sorted', 'train_test_split', 'type', 'u.join', 'unemployment.head', 'unemployment_data.head', 'wage_data.head', 'wage_data_data.head', 'weights.append', 'ww.set_index', 'y.plot', 'y_pred.plot', 'zip']"
goughes,9,[]
harshitbd,9,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
harshpavuluri,9,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.shift', 'df.mean', 'import', 'main', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'sns.set', 'y.plot', 'y_pred.plot']"
hiram31,9,"['bigquery.Client', 'print']"
janejoseph20,9,"['Claims_by_timeperiod.plot', 'Claims_by_timeperiod.plot.set', 'Claims_by_week.plot', 'Claims_by_week.plot.set', 'Final_df.astype', 'Final_df.corr', 'Final_df.corr.round', 'Final_df.describe', 'Final_df.edu_8th_or_less.sum', 'Final_df.edu_grades_9_11.sum', 'Final_df.edu_hs_grad_equiv.sum', 'Final_df.edu_post_hs.sum', 'Final_df.edu_unknown.sum', 'Final_df.gender_female.sum', 'Final_df.gender_male.sum', 'Final_df.gender_na.sum', 'Final_df.groupby', 'Final_df.groupby.agg', 'Final_df.groupby.agg.sort', 'Final_df.groupby.sum', 'Final_df.groupby.sum.sort_values', 'Final_df.groupby.sum.sort_values.head', 'Final_df.head', 'Final_df.ols.fit', 'Final_df.pivot_table', 'Final_df.pivot_table.round', 'Final_df.race_amerindian.sum', 'Final_df.race_asian.sum', 'Final_df.race_black.sum', 'Final_df.race_noanswer.sum', 'Final_df.race_other.sum', 'Final_df.race_white.sum', 'Final_df.replace', 'Final_df.select_dtypes', 'Final_df.shape', 'Final_df.sort_values', 'Final_df.sum', 'Final_df.top_category_employer1.value_counts', 'Final_df.top_category_employer2.value_counts', 'Final_df.top_category_employer3.value_counts', 'Final_df.unique', 'Final_df.uu_id.value_counts', 'Final_df.value_counts', 'Final_df.value_counts.plot', 'GridSearchCV', 'LabelEncoder', 'LinearRegression', 'MSE', 'Mean_Claims_by_week.plot', 'Mean_Claims_by_week.plot.set', 'Mean_of_Total_Claims_per_UUID_every_week.head', 'Mean_of_Total_Claims_per_UUID_every_week.plot', 'Melt.head', 'Melt.sort_values', 'Merged_unemployment_wage.Head', 'Merged_unemployment_wage.drop_duplicates', 'Merged_unemployment_wage.drop_duplicates.head', 'Merged_unemployment_wage.duplicated', 'Merged_unemployment_wage.duplicated.sum', 'Merged_unemployment_wage.head', 'Predicted_Values.tolist', 'Prediction.tolist', 'RandomForestRegressor', 'SimpleImputer', 'Top_10_claimers.head', 'Top_10_claimers.tail', 'Total_Claims_per_UUID_every_week.describe', 'Total_Claims_per_UUID_every_week.fillna', 'Total_Claims_per_UUID_every_week.head', 'Total_Claims_per_UUID_every_week.melt', 'Total_Claims_per_UUID_every_week.plot', 'Total_Claims_per_UUID_every_week.rename_axis', 'Total_Claims_per_UUID_every_week_nulls_addressed.head', 'Wage_updated.isnull', 'Wage_updated.isnull.sum', 'X.head', 'X_test._get_numeric_data', 'X_train._get_numeric_data', 'average_wage_by_uuid.head', 'average_wage_by_uuid.isin', 'average_wage_by_uuid.uu_id.average_wage_by_uuid.isin', 'average_wage_null_rows.head', 'average_wage_null_rows.unique', 'bigquery.Client', 'bigquery_client.query', 'classification_report', 'cleaned_df.all', 'cleaned_df.corr', 'cleaned_df.corr.round', 'cleaned_df.drop', 'cleaned_df.drop.head', 'cleaned_df.groupby', 'cleaned_df.groupby.agg', 'cleaned_df.head', 'cleaned_df.isnull', 'cleaned_df.isnull.sum', 'cleaned_df.pivot_table', 'cleaned_df.pivot_table.head', 'cleaned_df.pivot_table.round', 'cleaned_df.sort_values', 'cleaned_df.timeperiod.cleaned_df.groupby.sum', 'cleaned_df.timeperiod.cleaned_df.groupby.sum.add_prefix', 'cleaned_df.total_claims.cleaned_df.week_number.cleaned_df.uu_id.pd.crosstab.reset_index', 'cleaned_df.total_claims.cleaned_df.week_number.cleaned_df.uu_id.pd.crosstab.reset_index.fillna', 'cleaned_df.uu_id.unique', 'cleaned_df.uu_id.unique.count', 'cleaned_df.uu_id.unique.size', 'cleaned_df.week_number.Final_df.groupby.mean', 'cleaned_df.week_number.Final_df.groupby.mean.add_prefix', 'cleaned_df.week_number.Final_df.groupby.sum', 'cleaned_df.week_number.Final_df.groupby.sum.add_prefix', 'cleaned_df.week_number.cleaned_df.groupby.sum', 'cleaned_df.week_number.cleaned_df.groupby.sum.add_prefix', 'compare.head', 'data.head', 'df.corr', 'df.drop', 'df.drop_duplicates', 'df.groupby', 'df.head', 'df.iloc.to_numpy', 'df.sort_values', 'df.to_csv', 'df1.plot', 'df_actual_pred.head', 'df_group.first', 'df_numerics_only.drop', 'df_test.drop', 'df_train.drop', 'drop_duplicates.duplicated', 'drop_duplicates.duplicated.sum', 'drop_duplicates.fillna', 'drop_duplicates.fillna.head', 'drop_duplicates.groupby', 'drop_duplicates.groupby.agg', 'drop_duplicates.head', 'drop_duplicates.isna', 'drop_duplicates.isna.sum', 'drop_duplicates.isnull', 'drop_duplicates.isnull.any', 'drop_duplicates.isnull.sum', 'drop_duplicates.mean', 'drop_duplicates.mean.round', 'drop_duplicates.tail', 'drop_duplicates.uu_id.drop_duplicates.groupby.mean', 'drop_duplicates.uu_id.drop_duplicates.groupby.mean.isnull', 'drop_duplicatesf.mean', 'enumerate', 'features.head', 'fig.add_trace', 'fig.show', 'gender_by_uuid.head', 'gkk.first', 'go.Figure', 'go.Heatmap', 'grid.fit', 'gridcv_xgb.predict', 'groupby_uuid.head', 'groupby_uuid.mean.round', 'import', 'imputer.fit_transform', 'imputer.transform', 'int', 'le.fit_transform', 'len', 'linear_model.LinearRegression', 'list', 'mape', 'mdl.fit', 'mdl.predict', 'melt.head', 'melt_train.drop', 'melt_train.dropna', 'melt_train.groupby', 'melt_train.groupby.diff', 'melt_train.groupby.shift', 'melt_train.head', 'melt_train.melt_train.head', 'melt_train.tail', 'melt_valid.groupby', 'melt_valid.groupby.diff', 'melt_valid.groupby.shift', 'melt_valid.melt_valid.copy', 'melt_valid.tail', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model1.summary', 'name.cleaned_df.hist', 'name.dataset.hist', 'new_examples.columns', 'new_examples.head', 'np.abs', 'np.arange', 'np.array', 'np.isfinite', 'np.mean', 'np.ravel', 'np.sqrt', 'np.sum', 'ols', 'pd.DataFrame', 'pd.crosstab', 'pd.melt', 'pd.merge', 'pd.set_option', 'plt.bar', 'plt.barh', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.legend.head', 'plt.matshow', 'plt.plot', 'plt.show', 'plt.style.use', 'plt.subplot', 'plt.subplots', 'plt.text', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'plt.yticks', 'prediction_list.head', 'prediction_list.merge', 'print', 'pyplot.figure', 'pyplot.show', 'pyplot.subplot', 'pyplot.title', 'query_job.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'regressor.fit', 'regressor.predict', 'regressor.score', 'regressor.tolist', 'result.predict', 'round', 'sns.countplot', 'sns.distplot', 'sns.heatmap', 'sns.histplot', 'sns.pairplot', 'sns.relplot', 'sns.set', 'sns.set_style', 'split_point.melt.melt.copy', 'str', 'total_claims_prediction.head', 'total_claims_prediction.mean.round', 'total_claims_prediction.rename', 'total_claims_prediction.round', 'total_claims_prediction.to_csv', 'total_claims_prediction.total_claims.round', 'total_claims_prediction_week_39.head', 'total_claims_prediction_week_39.rename', 'total_claims_prediction_week_39.replace', 'total_claims_prediction_week_39.total_claims.round', 'total_claims_prediction_week_40.apply', 'total_claims_prediction_week_40.head', 'total_claims_prediction_week_40.isnull', 'total_claims_prediction_week_40.isnull.sum', 'total_claims_prediction_week_40.rename', 'total_claims_prediction_week_40.round', 'total_claims_prediction_week_40.to_csv', 'total_claims_prediction_week_40.total_claims.round', 'train_test_split', 'unemployment_data.describe', 'unemployment_data.duplicated', 'unemployment_data.duplicated.sum', 'unemployment_data.head', 'unemployment_data.merge', 'unemployment_data.query', 'unemployment_data.to_csv', 'unique', 'uu_id.average_wage_by_uuid.isin', 'uuid_claims_df.groupby', 'uuid_claims_df.groupby.agg', 'uuid_claims_df.head', 'uuid_claims_df.prediction_total_claims.round', 'wage_data.head', 'wage_data.to_csv', 'warnings.filterwarnings', 'wmape', 'x_test._get_numeric_data', 'x_train._get_numeric_data', 'xgb.XGBClassifier', 'xgb.XGBRegressor', 'xgb_model.fit', 'xgboost.XGBClassifier', 'y_pred.flatten', 'y_test.flatten', 'y_test.values.head', 'y_train.np.ravel.X_train._get_numeric_data.xgb_model.fit.predict', 'y_train.np.ravel.x_train._get_numeric_data.xgb_model.fit.predict']"
jdsk789,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.drop', 'data.dropna', 'data.head', 'import', 'pred.head', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'query_job4.to_dataframe', 'unem.head', 'unemployment.head', 'wage.head']"
jennapl,9,"['LinearRegression', 'X_train.head', 'a.head', 'a.plot', 'a.unique', 'ax1.plot', 'bar', 'bigquery.Client', 'bigquery_client.query', 'data.head', 'data.values.reshape', 'df.df.loc.groupby', 'df.df.loc.groupby.count', 'df.filter', 'df.groupby', 'df.groupby.count', 'df.groupby.mean', 'df.groupby.sum', 'df.sort_values', 'df.sort_values.groupby', 'df.sort_values.groupby.count', 'head', 'import', 'len', 'np.array', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.DataFrame', 'plt.bar', 'plt.barchart', 'plt.barplot', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'print', 'query_job.to_dataframe', 'regressor.fit', 'sort', 'train_test_split', 'unemp.DataFrame', 'unemp.count', 'unemp.filter', 'unemp.groupby', 'unemp.groupby.Tract.value_counts', 'unemp.groupby.Tract.value_counts.nlargest', 'unemp.groupby.filter', 'unemp.groupby.len', 'unemp.head', 'unemp.plot', 'unemp.sum', 'unemp.tail', 'unemp.to_dataframe', 'unemp.unemp.dropNA', 'unemp.unemp.dropna', 'unemp.unemp.filter.groupby', 'unemp.unemp.groupby.mean', 'unemp.unemp.groupby.mean.plot', 'unemp.unemp.groupby.mean.print', 'unemp.unemp.loc.head', 'unemp.value_counts', 'unemp.values.reshape', 'y.head']"
jialincheoh,9,"['AutoModel.from_pretrained', 'AutoTokenizer.from_pretrained', 'GridSearchCV', 'MSE', 'bigquery.Client', 'bigquery_client.query', 'client.list_tables', 'create_pooled_embedding_df', 'data.keys', 'df.drop', 'df.head', 'df.symptoms.apply', 'df_test.drop', 'df_train.drop', 'diseases.append', 'flatten', 'format', 'grid.fit', 'grid.predict', 'gridcv_xgb.predict', 'import', 'j.read', 'join', 'json.loads', 'len', 'list', 'model', 'np.sqrt', 'open', 'output.pooler_output.detach', 'output.pooler_output.detach.numpy', 'pd.DataFrame', 'pd.DatetimeIndex', 'plot_importance', 'plt.legend', 'plt.plot', 'plt.style.use', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'sns.set_style', 'specialties.append', 'symptoms.append', 'tokenizer', 'torch.device', 'torch.linspace', 'torch.rand', 'torch.randn', 'torch.sin', 'unemployment_data.head', 'unemployment_data.nunique', 'wage_data.head', 'xgb.XGBRegressor']"
jmahedy1,9,"['LinearRegression', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'df.mean', 'example_function', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'unemploymentData.head', 'y.plot', 'y_pred.plot', 'zip']"
josephwildey,9,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
jverduzc,9,"['Dense', 'Dropout', 'IterativeImputer', 'KernelRidge', 'KernelRidge.fit', 'LinearRegression', 'LinearRegression.fit', 'LogisticRegression', 'LogisticRegression.fit', 'OneHotEncoder', 'RandomForestRegressor', 'RandomForestRegressor.fit', 'SGDRegressor', 'Sequential', 'StandardScaler', 'ax.flatten', 'ax.legend', 'ax.scatter', 'bigquery.Client', 'bigquery_client.query', 'complete_unemployment_prediction_data.drop', 'complete_unemployment_prediction_data.drop_duplicates', 'data.apply', 'data.astype', 'data.corr', 'data.corr.round', 'data.drop', 'data.groupby', 'data.groupby.apply', 'data.head', 'data.set_index', 'data.std', 'data.tail', 'data.unique', 'data.values.np.array.reshape', 'data.values.reshape', 'data.values.reshape.list.tract_name_encoder.transform.toarray', 'df.head', 'df.tail', 'display', 'final_prediction_data.drop', 'final_prediction_data.isna', 'final_prediction_data.isna.sum', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'future_weeks_pred.round', 'g.columns.g.loc.copy', 'g.fillna', 'g.head', 'g.mean', 'g.merge', 'grouped_data.groups.keys', 'i.split', 'i.split.split', 'i.split.strip', 'i.split.strip.split', 'imp.fit', 'imp.transform', 'import', 'initializers.RandomNormal', 'initializers.Zeros', 'inputs.drop', 'inputs.head', 'keras.optimizers.Adam', 'krr_model.fit', 'l_mae.round', 'l_mape.round', 'len', 'lin_model.predict', 'linear_model.Lasso', 'linear_model.Lasso.fit', 'list', 'logistic_model.fit', 'logistic_model.predict', 'make_pipeline', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.r2_score', 'new_data.head', 'nn_mae.round', 'nn_mape.round', 'nn_model.add', 'nn_model.compile', 'nn_model.fit', 'nn_model.predict', 'nn_model.summary', 'np.array', 'np.clip', 'np.round', 'parameters.RandomForestRegressor.fit', 'pd.DataFrame', 'pd.concat', 'pd.plotting.lag_plot', 'pd.set_option', 'pd.unique', 'plt.figure', 'plt.legend', 'plt.make_subplots', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'print', 'prnint', 'query_from_statement', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'rf_mae.round', 'rf_mape.round', 'rf_model.predict', 'sgd_mape.round', 'sgd_model.fit', 'sgd_model.predict', 'sklearn.linear_model.Lasso', 'sklearn.linear_model.Lasso.fit', 'sns.heatmap', 'str', 'sum', 'supplement_testing_data.drop', 'supplement_testing_data.set_index', 'svm.SVR', 'svm.SVR.fit', 'svm_mape.round', 'svm_model.fit', 'svm_model.predict', 'time_i.np.array.shift', 'time_i.shift', 'tmp.copy', 'tract_name_encoder.fit', 'tract_name_encoder.fit_transform', 'tract_name_encoder.transform', 'train_test_split', 'type', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.groupby', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_claims_data.set_index', 'unemployment_claims_data.sort_values', 'unemployment_prediction_data.drop', 'unemployment_prediction_data.drop_duplicates', 'unemployment_prediction_data.head', 'unemployment_prediction_data.isna', 'unemployment_prediction_data.isna.sum', 'unemployment_prediction_data.join', 'unemployment_prediction_data.to_csv', 'unemployment_wage_data.drop_duplicates', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.set_index', 'y.ravel', 'y_train.ravel']"
jz322,9,"['BIGQUERY.Client', 'BIGQUERY_PROJECT.Client', 'bigquery.Client', 'bigquery_client.query', 'data.Client', 'df.mean', 'import', 'pandas.DataFrame', 'print', 'query_job.to_dataframe']"
kasyaprk,9,"['bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.describe', 'data.drop', 'data.head', 'data.info', 'data.isnull', 'data.isnull.sum', 'data.shape', 'i.data.isnull', 'i.data.isnull.sum', 'i.data.value_counts', 'import', 'l.append', 'len', 'plt.figure', 'plt.show', 'print', 'query_job.to_dataframe', 'race_white.data.isnull', 'sns.countplot', 'sns.heatmap', 'sum']"
katldewitt,9,[]
kborgen37,9,"['bigquery.Client', 'bigquery_client.query', 'csv.writer', 'dict.fromkeys', 'exploreData.head', 'export.append', 'i.answers.insert', 'import', 'len', 'list', 'open', 'pd.set_option', 'plt.bar', 'plt.plot', 'predictionData.values.tolist', 'print', 'query_job.to_dataframe', 'set', 'statistics.mean', 'statistics.median', 'statistics.stdev', 'temp.append', 'testListx.append', 'testListy.append', 'tuple', 'unemploymentData.head', 'unemploymentData.values.tolist', 'uuid.append', 'uuid.count', 'values.append', 'write.writerow', 'write.writerows', 'x1.append', 'xCount.append', 'xValues.append', 'xValues.count', 'y.count', 'y1.append', 'y1.index']"
kd-2dvaghela,9,[]
konoikon,9,"['ProfileReport', 'Prophet', 'bigquery.Client', 'bigquery_client.query', 'df.drop', 'df.drop_duplicates', 'df.fillna', 'df.mean', 'import', 'm.add_seasonality', 'm.fit', 'm.make_future_dataframe', 'm.plot', 'm.predict', 'model.make_future_dataframe', 'new_prof.to_notebook_iframe', 'np.ceil', 'pd.DatetimeIndex', 'pd.to_datetime', 'prediction_list.head', 'preprocessing', 'print', 'profile.to_notebook_iframe', 'query_job.to_dataframe', 'str', 'type', 'unemployment_data.apply', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.head', 'unemployment_data.sort_values', 'wage_data.head']"
krongch2,9,"['COL_MAP', 'COL_MAP.d.dropna', 'COL_MAP.d.loc.reset_index', 'COL_MAP.dd.get_dummies', 'COL_MAP.g.dropna', 'COL_MAP.keys', 'ConvergenceWarning', 'IterativeImputer', 'LinearRegression', 'RandomForestRegressor', 'VAR', 'X.head', 'X.replace', 'a.groupby', 'abs', 'alpha.g.ewm.mean', 'arimax', 'arma.join', 'arma39.to_dict', 'arma_ewm.set_index', 'arma_week39.predicted_mean.astype', 'arma_week39.to_dict', 'avg.corr', 'ax.fill_between', 'ax.legend', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_xlim', 'ax.set_yabel', 'ax.set_ylabel', 'ax.set_ylim', 'ax.title', 'axs.legend', 'axs.set_ylabel', 'best_results.get_prediction', 'best_results.plot_diagnostics', 'bifquery.Client', 'bigquery.Client', 'bigquery_client.query', 'c.columns.difference', 'check', 'check_edu', 'clean', 'col.df.mean', 'col.g.isnull', 'col.g.isnull.all', 'col.gg.isnull', 'col.gg.isnull.all', 'colname.g.impute_logistic.copy', 'cols_numeric.d.loc.astype', 'combine', 'compare_arima', 'compare_ewm', 'compare_two_arima_rms', 'compared_ewm', 'cond1.all', 'cond2.cond1.all', 'convert_to_submission', 'covid19_cases_data.head', 'd.apply', 'd.astype', 'd.average_wage.isna', 'd.columns.difference', 'd.columns.differnce', 'd.corr', 'd.drop', 'd.dropna', 'd.fillna', 'd.filt.reset_index', 'd.get_subset.impute_industry.head', 'd.gropuby', 'd.groupby', 'd.groupby.apply', 'd.groupby.mean', 'd.groupby.sort_values', 'd.groupby.transform', 'd.interpolate', 'd.isnull', 'd.isnull.sum', 'd.items', 'd.join', 'd.keys', 'd.pd.to_datetime.astype', 'd.preprocess_xgb.isnull', 'd.preprocess_xgb.isnull.sum', 'd.replace', 'd.reset_index', 'd.sort_values', 'd.to_csv', 'd.total_claims.max', 'd.uu_id.unique', 'd.uu_ids.unique', 'd.values', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'datetime.datetime.strptime', 'datetime.strptime', 'dd.astype', 'dd.drop', 'dd.head', 'dd.index.pd.DatetimeIndex.to_period', 'dd.map', 'dd.plot', 'dd.set_index', 'dd.sort_values', 'dd.top_category_employer1.unique', 'dd.top_category_employer2.unique', 'dd.uu_id.unique', 'df.any', 'df.copy', 'df.copy.reset_index', 'df.fillna', 'df.iterrows', 'df.mean', 'df.replace', 'df.to_csv', 'df.to_dict', 'df.to_dict.iterrows', 'df.unique', 'df.uu_id.unique', 'df.values.tolist', 'df_imputed.drop', 'dict', 'dir', 'e.fillna', 'e.head', 'encoder.fit_transform', 'enumberate', 'enumerate', 'ewm.to_csv', 'f.sort_values', 'f.sort_values.reset_index', 'fig.tight_layout', 'fill_na_weeks', 'fill_na_weeks.d.groupby.apply.reset_index', 'fill_non_existing_weeks', 'fill_non_existing_weeks.d.groupby.apply.reset_index', 'filt', 'fit.predict', 'float', 'format', 'fsm.ols', 'g.any', 'g.apply', 'g.astype', 'g.columns.difference', 'g.concat', 'g.copy', 'g.copy.reset_index', 'g.drop', 'g.ewm', 'g.ewm.mean', 'g.ewm.mean.reset_index', 'g.iloc.values.mean', 'g.index.pd.DatetimeIndex.to_period', 'g.isnull', 'g.join', 'g.loc.impute_iterative.reset_index', 'g.method.unique', 'g.plot', 'g.replace', 'g.set_index', 'g.sort_values', 'g.to_dict', 'g.total_claims.mean', 'g.unique', 'g.values.tolist', 'g.week_number.unique', 'g_na.g.pd.concat.sort_values', 'get_all', 'get_avg_total_claims.d.groupby.apply.reset_index', 'get_best_params', 'get_cols', 'get_cols.d.copy', 'get_cols.d.loc.copy', 'get_cols.g.drop.astype', 'get_cols.gg.loc.head', 'get_cols.gg_replace.loc.head', 'get_covid', 'get_dummies', 'get_edu_cols', 'get_gender_cols', 'get_industry', 'get_industry_cols', 'get_mae', 'get_one_hot', 'get_prediction', 'get_race_cols', 'get_result_map', 'get_rms', 'get_subset', 'get_tables', 'get_train_test', 'get_unemployment', 'get_wage', 'get_week_number_map', 'gg.columns.difference', 'gg.copy', 'gg.drop', 'gg.dropna', 'gg.impute_func.head', 'gg.impute_iterative.head', 'gg.impute_rowsum.head', 'gg.plot', 'grid.best_estimator_.predict', 'grid.fit', 'grp.fsm.ols.fit', 'imp.apply', 'imp.to_csv', 'imp_tot.groupby', 'imp_tot.groupby.apply', 'imp_tot.to_csv', 'import', 'imput', 'impute', 'impute.d.groupby.apply.reset_index', 'impute_all', 'impute_all.imp_tot.groupby.apply.reset_index', 'impute_all.raw.groupby.apply.reset_index', 'impute_all.raw_full.groupby.apply.reset_index', 'impute_func', 'impute_industry', 'impute_industry.d.groupby.apply.reset_index', 'impute_iterative', 'impute_logistic', 'impute_rowsum', 'impute_total_claims.raw_full.groupby.apply.reset_index', 'imputer.fit_transform', 'impyute.imputation.cs.mice', 'insert_na_week_number', 'insert_na_week_number.raw.groupby.apply.reset_index', 'int', 'iter_cat', 'itertools.product', 'l.append', 'l.pd.DataFrame.reset_index', 'l.pd.DataFrame.sort_values', 'last.to_dict', 'last_week_number.x.week_number.x.loc.copy', 'len', 'list', 'load_clean', 'load_data', 'load_data_full', 'load_ewm', 'load_imp', 'load_imp_industry', 'load_imp_tot', 'load_raw', 'load_raw.isnull', 'load_raw.isnull.sum', 'load_raw_full', 'max', 'max_avail_week_number.x.week_number.x.loc.copy', 'min', 'mod.fit', 'model.fit', 'model.get_params', 'model.predict', 'model.score', 'model.select_order', 'moving_average', 'np.abs', 'np.arange', 'np.arange.print.map', 'np.array', 'np.cumsum', 'np.isnan', 'np.linspace', 'np.random.randn', 'np.range', 'optimize_xbg', 'optimize_xgb', 'os.path.isfile', 'others.sum', 'p.astype', 'p.fillna', 'p.iterrows', 'p.map', 'p.replace', 'p.to_csv', 'p.total_claims.isna', 'p.uu_id.unique', 'pandas.DataFrame', 'pd.DataFrame', 'pd.DateOffset', 'pd.DatetimeIndex', 'pd.Series', 'pd.Timestamp', 'pd.concat', 'pd.get_dummies', 'pd.plotting.autocorrelation_plot', 'pd.read_csv', 'pd.set_option', 'pd.to_datetime', 'plot', 'plot_arima_linear', 'plot_avg_total_claims', 'plot_cat', 'plot_edu', 'plot_impute', 'plot_impute_iterative', 'plot_industry', 'plot_regression', 'plot_rf', 'plot_varmax', 'plot_xbg', 'plot_xgb', 'plt.close', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.tight_layout', 'pred.conf_int', 'pred.predicted_mean.plot', 'predict', 'predict_all', 'preprocess_xgb', 'print', 'print_impute', 'print_impute_cat', 'print_impute_rowsum', 'proprocess_xgb', 'query', 'query_job.to_dataframe', 'r.astype', 'r.set_index', 'r.to_csv', 'range', 'raw.drop', 'raw.drop_duplicates', 'raw.duplicated', 'raw.gropuby', 'raw.gropuby.apply', 'raw.group', 'raw.groupby', 'raw.groupby.apply', 'raw.loc.duplicated', 'raw.replace', 'raw.reset_index', 'raw.sort_values', 'raw.to_csv', 'raw.top_category_employer1.isna', 'raw.uu_id.unique', 'raw.week_number.unique', 'raw_full.groupby', 'raw_full.groupby.apply', 'raw_full.to_csv', 'read_data', 'reg.fit', 'reg.predict', 'regression.fit', 'replace_na_cols', 'replace_nan_cols', 'result.week_number.max', 'result_rf.to_csv', 'results.forecast', 'results.get_prediction', 'results.plot', 'results.plot_acorr', 'results.plot_diagnostic', 'results.plot_diagnostics', 'results.plot_forcast', 'results.plot_forecast', 'results.predict', 'results.summary', 'results.summeary', 'results.summery', 'results.to_csv', 'rf.fit', 'rf.predict', 'rf_industry', 'rf_industry.d.groupby.apply.reset_index', 'rf_industry_wrap', 'rf_industry_wrap.d.groupby.apply.reset_index', 'row.isna', 'row.isna.row.index.map', 'row.isna.row.map', 'row.isna.sum', 'row.np.array.isna', 'row.np.array.isna.sum', 'row.np.array.isnull', 'row.np.array.isnull.sum', 'row.values', 'row.values.isna', 'row.values.isnan', 'row.values.np.array.isnull', 'row.values.np.array.isnull.sum', 'rr.to_dict', 'run_rf', 'run_rf_all', 'run_var', 'run_var.d.groupby.apply.reset_index', 'run_var_all', 'run_varmax', 'run_xbg', 'run_xgb', 'run_xgb_all', 'run_xgb_old', 's.map', 'series.map', 'simplefilter', 'sk.model_selection.GridSearchCV', 'sklearn.ensemble.RandomForestRegressor', 'sklearn.ensemble.RandomForestRegressor.fit', 'sklearn.impute.IterativeImputer', 'sklearn.impute.SimpleImputer', 'sklearn.linear_model.LinearRegression', 'sklearn.linear_model.LogisticRegression', 'sklearn.linear_model.LogisticRegression.fit', 'sklearn.model_selection.GridSearchCV', 'sklearn.model_selection.train_test_split', 'sklearn.preprocessing.LabelEncoder', 'sklearn.proprocessing.LabelEncoder', 'sm.tsa.VARMAX', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'sns.set', 'sorted', 'str', 'sum', 't.to_csv', 'temp.astype', 'temp.to_dict', 'test', 'test.fillna', 'test.plot', 'test_ewm', 'test_moving_average', 'total_claims.tail', 'train.drop', 'train_test_split', 'tt.drop', 'type', 'u.county_fips.unique', 'u.countyfips.unique', 'u.edu_8th_or_less.isna', 'u.join', 'u.sort_values', 'u.to_csv', 'u.tract.unique', 'u.tract_name.unique', 'u.uu_id.unique', 'u.uuid.unique', 'var.fit', 'var.select_order', 'varmax', 'w.to_csv', 'w.uu_id.average_wage', 'w.uu_id.unique', 'warnings.filterwarnings', 'warnings.simplefilter', 'week_number.g.week_number.g.loc.to_dict', 'week_number_to_date', 'week_number_to_datetime', 'weeknumber.g.week_number.g.loc.to_dict', 'weights.items', 'weights.values', 'ww.set_index', 'x.copy', 'x.dropna', 'x.dropna.mean', 'x.mean', 'x.mean.dropna', 'x.reset_index', 'x.shift', 'x.week_number.max', 'x.week_number.x.loc.copy', 'x_test.copy', 'xgb.XGBRegressor', 'xgb_next', 'y.any', 'y.corr', 'y.drop', 'y.plot', 'y.reset_index', 'y.values.ravel', 'y_pred.plot', 'y_train.get_dummies', 'y_train.ravel', 'y_train.uniques', 'y_train.values.ravel', 'y_train.values.uniques', 'ycol.g.copy', 'ycol.g.isnull', 'ycol.y_train.unique', 'yhat.copy', 'ylabel.g.astype']"
ktang,9,"['DataFrame', 'LinearRegression', 'LogisticRegression', 'SGDRegressor', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'covid19_cases_data.tail', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.append', 'df.mean', 'df_pred_list.head', 'df_pred_list.unique', 'df_schema.head', 'df_three_col.drop_duplicates', 'df_three_col.head', 'df_three_col.isin', 'df_three_col.sort_values', 'df_three_col.tail', 'df_three_col.to_csv', 'df_unemployment.head', 'df_unemployment.unique', 'df_unemployment.unique.sort', 'df_wage.head', 'example_function', 'head', 'import', 'int', 'isin', 'len', 'lgb.Dataset', 'lgb.plot_importance', 'lgb.train', 'load_boston', 'logisticRegr.fit', 'logisticRegr.predict', 'logreg.fit', 'logreg.predict', 'max', 'max_week.isin.test_data.test_data.values', 'max_week.test_data.isin.test_data.values', 'mean_squared_error', 'min', 'model.fit', 'model.predict', 'np.array', 'np.array.reshape', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.reshape', 'pandas.DataFrame', 'pandas.concat', 'pd.DataFrame', 'pd.Series', 'pd.concat', 'pd.to_datetime', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'print', 'query.to_dataframe', 'query_job.to_dataframe', 'query_job_un.to_dataframe', 'random.seed', 'range', 'reg.fit', 'reg.predict', 'res.append', 'res.concat', 'res.to_csv', 'seaborn.lmplot', 'sgdr.fit', 'sgdr.predict', 'sns.boxplot', 'sns.heatmap', 'sns.lmplot', 'sns.scatterplot', 'sorted', 'test_data.isin', 'test_data.mean', 'test_data.np.array.reshape', 'test_data.tail', 'test_data.to_numpy', 'test_data.tolist', 'test_data.values.np.array.reshape', 'train_test_split', 'week_id.isin.test_data.test_data.values', 'week_id.test_data.isin.test_data.values', 'y.plot', 'y_pred.plot', 'zip']"
kushald2805,9,"['LinearRegression', 'abs', 'ax', 'ax.figure', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.data_type', 'data.describe', 'data.drop', 'data.dtype', 'data.dtypes', 'data.head', 'data.isna', 'data.isna.sum', 'data.shift', 'data.value_counts', 'df.dtype', 'df.mean', 'figsize', 'figure', 'import', 'list', 'model.fit', 'model.predict', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Dataframe', 'pd.Series', 'pd.dtype', 'pd.set_option', 'pd.to_dataframe', 'pd.to_datetime', 'plt.figure', 'plt.figure.set_figwidth', 'plt.show', 'print', 'query_job.to_dataframe', 'set', 'sns.heatmap', 'type', 'y.plot', 'y_pred.plot']"
lawalogunfowora,9,"['LinearRegression', 'abs', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'columns_arima.append', 'columns_rel.append', 'const.show', 'cont.show', 'csv.DictReader', 'data.corr', 'data.data.to_list', 'data.drop_duplicates', 'data.fillna', 'data.gender_female.unique', 'data.gender_male.unique', 'data.gender_na.unique', 'data.head', 'data.info', 'data.plot', 'data.race_amerindian.unique', 'data.race_asian.unique', 'data.race_black.unique', 'data.race_hawaiiannative.unique', 'data.race_noanswer.unique', 'data.race_other.unique', 'data.sample', 'data.set_index', 'data.uu_id.unique', 'data_arima.groupby', 'data_arima.groupby.reset_index', 'data_arima.groupby.sum', 'data_arima.groupby.sum.reset_index', 'data_arima.head', 'data_arima.reset_index', 'data_arima.set_index', 'data_arima.to_DataFrame', 'data_arima.to_frame', 'data_arima.unique', 'data_arima.unique.to_list', 'data_dict.key', 'data_dict.keys', 'file_param.to_dict', 'file_seasonal.to_dict', 'filename.head', 'filename.to_dict', 'final_file.to_csv', 'first_trial.head', 'format', 'i.data_arima.data_arima.groupby', 'i.data_arima.data_arima.groupby.sum', 'i.data_arima.data_arima.groupby.sum.reset_index', 'import', 'itertools.product', 'j.set_index', 'key.results.forecast', 'len', 'list', 'max', 'min', 'mod.fit', 'model.fit', 'my_dict.keys', 'np.array', 'np.asarray', 'open', 'param_dict_copy.pd.DataFrame.to_csv', 'param_dict_copy.to_csv', 'pd.DataFrame', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.show', 'pred.append', 'pred.conf_int', 'pred.predicted_mean.plot', 'print', 'query_job.to_dataframe', 'rand_list.append', 'range', 'relevant_features.index.to_list', 'relevant_features.to_list', 'results.keys', 'seasonal_dict_copy.pd.DataFrame.to_csv', 'sm.tsa.statespace.SARIMAX', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'submit.head', 'submit.info', 'submit.uu_id.unique', 'submit.uu_id.unique.size', 'test_2.info', 'tuple', 'warnings.filterwarnings', 'x.data_dict.plot', 'x.results.forecast', 'x.results.get_prediction', 'x.results.plot_diagnostics', 'y.astype']"
linkthelord,9,"['Dense', 'Dropout', 'GradientBoostingRegressor', 'LE.fit_transform', 'LSTM', 'LSTM_regressor.add', 'LSTM_regressor.compile', 'LSTM_regressor.fit', 'LabelEncoder', 'RB_other.transform', 'RobustScaler', 'SC_other.fit_transform', 'SC_other.transform', 'Sequential', 'StandardScaler', 'a.drop', 'a.isna', 'a.isna.sum', 'a.select_dtypes', 'a.select_dtypes.columns.a.fillna', 'approximatedimputation', 'auto_arima', 'ax.fill_between', 'ax.set_xlabel', 'ax.set_ylabel', 'bestp.append', 'bigquery.Client', 'bigquery_client.list_datasets', 'bigquery_client.query', 'c.drop', 'c.drop.reset_index', 'c.drop.to_csv', 'c_XTest.to_numpy', 'c_XTrain.astype', 'c_XTrain.to_numpy', 'c_YTrain.astype', 'col.df3.astype', 'col.df3.nunique', 'col.df3.str.replace', 'combined.drop', 'combined.dropna', 'combined.dtype', 'combined.fill_na', 'combined.fillna', 'combined.groupby', 'combined.groupby.sum', 'combined.groupby.sum.reset_index', 'combined.head', 'combined.iloc.drop', 'combined.isna', 'combined.isna.sum', 'combined.max.combined.combined.prediction.merge.to_csv', 'combined.max.combined.combined.prediction.pd.merge.drop_duplicates', 'combined.max.combined.combined.prediction.pd.merge.drop_duplicates.to_csv', 'combined.max.combined.combined.prediction.pd.merge.to_csv', 'combined.mean', 'combined.plot', 'combined.prediction.pd.merge.drop_duplicates', 'combined.prediction.pd.merge.drop_duplicates.to_csv', 'combined.prediction.pd.merge.to_csv', 'combined.rename', 'combined.to_csv', 'combinedd.drop', 'complete.i.complete.mean', 'complete.mean', 'covid19_cases_data.head', 'data.colname', 'data.colnames', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.unique', 'data.valuas', 'data.values', 'df.mean', 'df1.uu_id.nunique', 'df2.uu_id.nunique', 'df3.astype', 'df3.copy', 'df3.corr', 'df3.drop', 'df3.replace', 'df3.uu_id.nunique', 'df3.uu_id.unique', 'experiment.append', 'experiment.groupby', 'experiment.groupby.sum', 'experiment.groupby.sum.reset_index', 'experiment.unique', 'experiment.unique.prediction.prediction.loc.index.astype', 'f.read', 'firstgroup.combined.sum', 'format', 'gb.get_group', 'gbr.fit', 'gbr.predict', 'gbr.score', 'get_predictions', 'groups.append', 'groups.groupby', 'groups.groupby.sum', 'groups.groupby.sum.reset_index', 'groups.unique', 'groups.unique.prediction.prediction.loc.index', 'groups.unqiue', 'groups.values', 'head', 'i.combined.fillna', 'i.combined.mean', 'i.combined.mode', 'i.groups.groupby', 'i.groups.groupby.sum', 'i.groups.groupby.sum.reset_index', 'i.groups.unique', 'i.groups.unique.prediction.prediction.loc.index.astype', 'import', 'int', 'itertools.product', 'j.i.data.values.isna', 'l.append', 'len', 'line.split', 'list', 'max', 'mean', 'mean_squared_error', 'mod.fit', 'nn.Linear', 'nn.ReLU', 'np.array', 'np.asarray', 'np.insert', 'np.na', 'np.reshape', 'open', 'os.makedirs', 'pandas.DataFrame', 'pd.DataFrame', 'pd.get_dummies', 'pd.isna', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.legend', 'plt.show', 'pred.conf_int', 'pred.forecast', 'pred.predicted_mean', 'pred.predicted_mean.plot', 'prediction.columns.tolist', 'prediction.merge', 'prediction.to_csv', 'prediction.unique', 'prediction_list.copy', 'prediction_list.loc.to_csv', 'prediction_list.to_csv', 'prediction_sub.to_csv', 'print', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'range', 'regressor.predict', 'result_list.append', 'results.get_prediction', 'results.plot_diagnostics', 'results.summary', 'sc.fit_transform', 'sc.transform', 'secondgroup.combined.sum', 'self.MyNetwork.super.__init__', 'self.fc1', 'self.fc2', 'self.relu', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.lineplot', 'sns.scatterplot', 'stats.linregress', 'stepwise_fit.summary', 'str', 'subgroups.set_index', 'sum', 'super', 'temp.astype', 'thirdgroup.combined.sum', 'torch.rand', 'train_test_split', 'type', 'unique', 'warnings.filterwarnings', 'y.astype', 'y.plot']"
m-2dschnell,9,"['GridSearchCV', 'HistGradientBoostingRegressor', 'RandomForestRegressor', 'abs', 'bigquery.Client', 'bigquery_client.query', 'col.i.x.x.loc.mean', 'col.x.max', 'data.astype', 'data.corr', 'data.describe', 'data.drop', 'data.drop_duplicates', 'data.duplicated', 'data.factorize', 'data.fillna', 'data.fillna.head', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.race_amerindian.sum', 'data.set_index', 'data.sum', 'data.total_claims.sum', 'df.duplicated', 'format', 'grid.fit', 'gridcv_xgb.predict', 'import', 'itertools.product', 'len', 'li.append', 'list', 'mod.fit', 'model.compile', 'model.fit', 'model.predict', 'model.score', 'np.asarray', 'np.where', 'out_df.to_csv', 'pd.DataFrame', 'pd.Index', 'pd.to_datetime', 'pd.to_numeric', 'plt.figure', 'plt.show', 'pred.apply', 'pred.describe', 'pred.drop', 'pred.factorize', 'pred.head', 'pred.isin', 'pred.summary', 'pred.to_numeric', 'pred.x.x.loc.mean', 'print', 'query_job.to_dataframe', 'r2_score', 'range', 'results.summary', 'set', 'sm.tsa.statespace.SARIMAX', 'sns.heatmap', 'tf.keras.Sequential', 'tf.keras.layers.Dense', 'tf.keras.losses.SparseCategoricalCrossentropy', 'train_test_split', 'type', 'uu_id.factorize', 'x.astype', 'x.factorize', 'x.isin', 'x.max', 'x_train.fillna', 'xgb.XGBRegressor', 'y.astype', 'y.plot']"
manthankeim,9,"['Counter', 'N.rndperm.df.loc.copy', 'PCA', 'Pipeline', 'StandardScaler', 'TSNE', 'UMAP', 'ax.matshow', 'ax.scatter', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'ax.set_zlabel', 'ax.subplot.gca', 'axs.plot', 'axs.set_title', 'bigquery.Client', 'bigquery_client.query', 'chart_metrics.keys', 'col.df.plot', 'col.df_post.plot', 'col.df_pre.plot', 'credentials.Certificate', 'data.plot.bar', 'data.user_email.isin', 'data_active.apply', 'data_active.str.find', 'data_active.tolist', 'database.collection', 'database.collection.get', 'database.collection.where', 'datetime.now', 'df.apply', 'df.plot', 'df.to_csv', 'df_post.head', 'df_post.plot', 'df_post.set_color_cycle', 'df_pre.column', 'df_pre.columns', 'df_pre.head', 'df_pre.plot', 'dict', 'digits.target.astype', 'display', 'doc.id.lower', 'doc.id.str.database.collection.get', 'doc.to_dict', 'doc.to_dict.value_counts', 'docs.to_csv', 'draw_imports_subplots', 'dt', 'email_list.append', 'event.append', 'event.value_counts', 'exp_plot.participant.emotion.pn.Column.embed', 'feat_cols.i.rndperm.df.loc.values.reshape', 'feat_cols.i.rndperm.df.loc.values.reshape.astype', 'fetch_openml', 'fig.add_subplot', 'fig.add_trace', 'fig.gca', 'fig.show', 'fig.update_layout', 'fig.update_traces', 'fig_2d.show', 'fig_3d.show', 'fig_3d.update_traces', 'fig_means.add_trace', 'fig_means.show', 'fig_means.update_layout', 'final_plat.isin', 'final_plat.sum', 'final_plat.to_csv', 'firebase_admin.initialize_app', 'firestore.client', 'float', 'form.to_dict', 'format', 'go.Bar', 'go.Box', 'go.Figure', 'go.Scatter', 'go.scatter.Line', 'go.scatter.Marker', 'have_queried.apply', 'have_queried.str.find', 'hub_metrics_object', 'import', 'inactive.apply', 'inactive.str.find', 'inactive.to_list', 'len', 'list', 'load_digits', 'load_iris', 'load_wine', 'make_subplots', 'math.pow', 'metric.submission_group_means.append', 'metric.submission_means.append', 'my_ax.set_color_cycle', 'np.random.permutation', 'np.random.seed', 'out', 'pandas.DataFrame', 'pca.fit_transform', 'pd.DataFrame', 'pd.ExcelFile', 'pd.concat', 'pipe.fit_transform', 'plot.legend_elements', 'plot_mean_line', 'plt.figure', 'plt.figure.gca', 'plt.gray', 'plt.legend', 'plt.scatter', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'pn.Column', 'pn.Widgets.IntSlider', 'pn.Widgets.Select', 'pn.depends', 'pn.widgets.IntSlider', 'pn.widgets.Select', 'post.parse', 'post_plot.plot', 'pre.parse', 'pre_plot.plot', 'print', 'print_hub_metrics_list', 'print_stats_result', 'print_t_result', 'px.bar', 'px.data.iris', 'px.line', 'px.scatter', 'px.scatter_3d', 'px.scatter_matrix', 'query_job.to_dataframe', 'range', 'read_json_file', 'run_submission_t_tests', 'scistats.ttest_ind', 'set', 'sns.color_palette', 'sns.scatterplot', 'stats.mean', 'stats.stdev', 'str', 'submissionId.submission_data.append', 'submissionId.submission_group_data.append', 'submission_t_test', 'subplot_labels.append', 'subplot_labels_arr.append', 't_test', 'temp_df.bar', 'temp_df.hvplot', 'temp_df.plot', 'ten_days.database.collection.where.stream', 'time.time', 'timedelta', 'tsne.fit_transform', 'type', 'umap_2d.fit', 'umap_2d.fit_transform', 'umap_2d.transform', 'umap_3d.fit_transform', 'user.lower', 'user_em.append', 'user_ids.append', 'user_metrics.keys', 'x.most_common', 'y.most_common']"
mapldx,9,[]
meenwp,9,"['DataFrame', 'LinearRegression', 'X.columns.score', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'corrheatmap', 'covid19_cases_data.head', 'data.corr', 'data.corr.round', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'data.tail', 'data.values.np.array.reshape', 'des_stat', 'df.average_wage.unique', 'df.corr', 'df.describe', 'df.drop', 'df.dropna', 'df.dtypes', 'df.edu_8th_or_less.unique', 'df.edu_grades_9_11.unique', 'df.edu_hs_grad_equiv.unique', 'df.edu_unknown.unique', 'df.fillna', 'df.gender_female.unique', 'df.gender_male.unique', 'df.gender_na.unique', 'df.groupby', 'df.groupby.sum', 'df.head', 'df.info', 'df.isnull', 'df.isnull.any', 'df.mean', 'df.plot', 'df.race_amerindian.unique', 'df.unique', 'df2.dropna', 'display', 'employ_wage_data.score', 'example_function', 'final_prediction_data.drop', 'final_reg.fit', 'final_reg.predict', 'float', 'format', 'future_regressor.fit', 'future_regressor.predict', 'future_weeks_pred.astype', 'hist_claims', 'import', 'int', 'max', 'metrics.mean_absolute_error', 'metrics.mean_absolute_percentage_error', 'metrics.mean_squared_error', 'min', 'model.fit', 'model.predict', 'modelevaluation', 'np.array', 'np.sqrt', 'np.triu_indices_from', 'np.zeros_like', 'ols', 'ols.fit', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.merge', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplots', 'plt.xlabel', 'plt.ylabel', 'pred_claims.astype', 'prediction_data.drop', 'prediction_data.groupby', 'prediction_data.groupby.mean', 'prediction_data.head', 'prediction_list.head', 'prediction_list.to_csv', 'prediction_list.uu_id.unique', 'print', 'query_from_statement', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'reduce', 'reg.fit', 'reg.predict', 'reg.score', 'reg_model.summary', 'regressor.fit', 'regressor.predict', 'result.summary', 'round', 'sm.OLS', 'sns.boxplot', 'sns.distplot', 'sns.diverging_palette', 'sns.heatmap', 'sns.lineplot', 'sns.relplot', 'sns.set', 'sum', 'train_test_split', 'umemploy_wage_data.ols.fit', 'unemploy_predict.drop', 'unemploy_predict.head', 'unemploy_wage_data.corr', 'unemploy_wage_data.describe', 'unemploy_wage_data.drop', 'unemploy_wage_data.fillna', 'unemploy_wage_data.groupby', 'unemploy_wage_data.groupby.mean', 'unemploy_wage_data.groupby.sum', 'unemploy_wage_data.head', 'unemploy_wage_data.ols.fit', 'unemploy_wage_data.score', 'unemploy_wage_data.value.reshape', 'unemploy_wage_data.values.reshape', 'unemployclaims_supplemental_data.drop', 'unemployclaims_supplemental_data.drop_duplicates', 'unemployclaims_supplemental_data.fillna', 'unemployclaims_supplemental_data.head', 'unemployclaims_supplemental_data.join', 'unemployclaims_supplemental_data.set_index', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.fillna', 'unemployment_claims_data.isna', 'unemployment_claims_data.isna.sum', 'unemployment_claims_data.join', 'unemployment_data', 'unemployment_data.head', 'unemployment_data.size', 'unemployment_data.uu_id.size', 'unemployment_data.uu_id.unique', 'unemployment_data.week_number.unique', 'unemployment_prediction_data.head', 'unemployment_prediction_data.join', 'unemployment_prediction_data.to_csv', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.isna', 'unemployment_wage_data.isna.sum', 'unemployment_wage_data.ols.fit', 'unemployment_wage_data.set_index', 'wage_data.average_wage.fillna', 'wage_data.average_wage.isnull', 'wage_data.average_wage.isnull.any', 'wage_data.average_wage.mean', 'wage_data.average_wage.where.mean', 'wage_data.fillna', 'wage_data.groupby', 'wage_data.groupby.mean', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.any', 'wage_data.tract.unique', 'wage_data.uu_id.unique', 'wage_data2.head', 'y.plot', 'y_pred.flatten', 'y_pred.plot', 'y_test.flatten', 'zip']"
memoriahu,9,"['DecisionTreeClassifier', 'Index', 'RandomForestClassifier', 'RandomForestRegressor', 'X_grid.reshape', 'a.head', 'a.to_dataframe', 'abs', 'bigquery.Client', 'bigquery_client.query', 'clf.fit', 'data.drop', 'data.groupby', 'data.groupby.sum', 'data.groupby.sum.reset_index', 'data.head', 'data.set_index', 'df.pred.join.to_csv', 'df_tmp.reset_index', 'dotfile.getvalue', 'dotfile.getvalue.pydotplus.graph_from_dot_data.write_png', 'employ.drop', 'employ.head', 'employ.head.describe', 'employ.iloc.drop', 'en', 'example_function', 'export_graphviz', 'fo.write', 'import', 'int', 'len', 'list', 'load_iris', 'make_regression', 'max', 'mean_squared_error', 'min', 'model.fit', 'np.arange', 'np.around', 'np.arrage', 'np.arrange', 'np.array', 'np.ceil', 'np.floor', 'np.mean', 'np.random.randint', 'np.random.uniform', 'np.rint', 'np.round', 'o.to_csv', 'open', 'os.system', 'overall.describe', 'overall.drop', 'overall.groupby', 'overall.groupby.sum', 'overall.groupby.sum.reset_index', 'overall.head', 'overview.head', 'pd.DataFrame', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.axis', 'plt.bar', 'plt.figure', 'plt.grid', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.title', 'plt.xlabel', 'plt.ylabel', 'pred.drop', 'pred.groupby', 'pred.head', 'pred.insert', 'pred.join', 'pred.set_index', 'pred.set_index.join', 'pred.to_csv', 'predictions.astype', 'predictions.head', 'predn.describe', 'predn.head', 'predn.join', 'print', 'pydotplus.graph_from_dot_data', 'q1.head', 'q1.top_category_employer1.replace', 'q1.top_category_employer2.replace', 'q1.top_category_employer3.replace', 'q2.head', 'qn1.reset_index', 'query1.bigquery_client.query.to_dataframe', 'query1.top_category_employer1.replace', 'query1.top_category_employer2.replace', 'query1.top_category_employer3.replace', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_jobb.to_dataframe', 'query_jobbb.to_dataframe', 'query_jobbbb.to_dataframe', 'regr.fit', 'regr.predict', 'regressor.fit', 'regressor.head', 'regressor.predict', 'regressor1.fit', 'regressor1.predict', 'rf.fit', 'rf.predict', 'round', 'str', 'sum', 'test_features.regressor.predict.astype', 'top_category_employer1.replace', 'top_category_employer2.replace', 'top_category_employer3.replace', 'train_test_split', 'tree.export_graphviz', 'tree.plot_tree', 'type', 'wage.head', 'week41.to_csv', 'x.any', 'x.len.any', 'x.max.any', 'x.min.any', 'x.np.array.reshape', 'x.reshape', 'x_test.regressor.predict.astype', 'y.np.array.reshape', 'y.reshape']"
moonooooo,9,"['Decimal', 'Exception', 'a.to_integral_value', 'bigquery.Client', 'bigquery_client.query', 'd.split', 'd.split.split', 'd.value', 'd.values', 'data.append', 'data.fillna', 'data.fillna.iloc', 'data.to_string', 'data_less_10w.append', 'data_missing.append', 'data_missing.drop_duplicates', 'data_missing.head', 'df.drop', 'df.sort_index', 'df.sort_index.reset_index', 'display', 'enumerate', 'fill_week4_and_week23', 'format', 'import', 'int', 'iter', 'len', 'list', 'mae_loss', 'map', 'next', 'np.absolute', 'np.around', 'np.array', 'np.mean', 'np.rint', 'np.round', 'num_of_uuids.np.array.sum', 'pd.DataFrame', 'pd.DataFrame.from_dict', 'pd.read_csv', 'pl_query_job.to_dataframe', 'plot_visit_count', 'plt.axhline', 'plt.bar', 'plt.barh', 'plt.eventplot', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.show', 'plt.text', 'plt.tight_layout', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.ylabel', 'plt.yticks', 'pp.pprint', 'pp.print', 'pprint', 'pprint.PrettyPrinter', 'prediction_list.to_csv', 'print', 'query.bigquery_client.query.to_dataframe', 'query.bigquery_client.query.to_dataframe.head', 'query.bigquery_client.query.to_dataframe.to_string', 'query_all_total_claims', 'query_job.to_dataframe', 'query_job.to_dataframe.drop_duplicates', 'query_job.to_dataframe.drop_duplicates.to_numpy', 'query_job.to_dataframe.to_list', 'query_job.to_dataframe.to_numpy', 'range', 'raw_data_df_list.append', 'raw_total_claims_data.append', 'raw_total_claims_df.T.to_numpy', 'raw_total_claims_df.to_csv', 'result_to_csv.to_csv', 'round', 'row.np.array.mean', 'str', 'temp.head', 'temp.sort_index', 'temp.sort_index.reset_index', 'ten_35w_data.append', 'test.append', 'test.to_string', 'ud_query_job.to_dataframe', 'unemployement_data.columns', 'unemployement_data.columns.tolist', 'unemployement_data.head', 'unemployement_data.to_csv', 'unemployement_data.top', 'uuid.raw_total_claims_data.append', 'wage_data.head', 'wage_data.to_csv', 'warnings.filterwarnings', 'wd_query_job.to_dataframe', 'week_available.append', 'week_available.shape', 'week_number_count.T.style.hideIndex', 'week_number_count.T.style.hide_index', 'week_number_count.T.to_numpy', 'week_number_count.T.to_string', 'week_number_count.head', 'week_number_count.style.hide_index', 'week_number_count.to_dict', 'week_number_count.to_list', 'week_number_count.to_numpy', 'week_number_count.to_string', 'week_number_count_filled.append']"
nnonno,9,"['LinearRegression', 'bigquery.Client', 'bigquery_client.query', 'data.values.reshape', 'df.head', 'df1.plot', 'enumerate', 'enumerous', 'import', 'len', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'np.sqrt', 'pd.DataFrame', 'pd.isna', 'pd.unique', 'plt.grid', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_list.copy', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'train_test_split', 'unemployment_data.copy', 'unemployment_sample.drop', 'unemployment_sample.drop.to_numpy', 'unemployment_sample.drop.values.reshape', 'unemployment_sample.dropna', 'unemployment_sample.loc', 'unemployment_sample.to_numpy', 'wage_data.copy', 'wage_sample.drop', 'y_pred.flatten', 'y_test.flatten']"
oubotong,9,[]
raghu1996,9,"['A.score', 'ARIMA', 'ARIMA_model.plot_diagnostics', 'C_arr.append', 'GridSearchCV', 'Index', 'KNN_GV.fit', 'KNN_GV.score', 'KNeighborsClassifier', 'LabelEncoder', 'LinearRegression', 'MSE', 'OneHotEncoder', 'Print', 'R_arr.append', 'RandomForestRegressor', 'SARIMAX', 'SARIMAX_model.fit', 'SARIMA_model.plot_diagnostics', 'StandardScaler', 'X.astype', 'X.columns', 'X.drop', 'X_train.astype', 'X_train.columns', 'abs', 'actual.append', 'actual_nonstat.append', 'actual_stat.append', 'add.append', 'adfuller', 'ans.append', 'ans_df.sort_values', 'arange', 'auto_arima', 'ax.axvline', 'bigquery.Client', 'bigquery_client.list_datasets', 'bigquery_client.list_tables', 'bigquery_client.query', 'boundary_week.data.data.loc.dropna', 'boundary_week.data.data.loc.item', 'boundary_week.data.uuid.data.data.loc.max', 'boundary_week.data.uuid.data.data.loc.min', 'check_stationarity', 'check_stationary', 'client.list_tables', 'col.boundary_week.data.data.loc.asfloat', 'col.boundary_week.data.data.loc.astype', 'col.boundary_week.data.data.loc.dropna', 'col.boundary_week.data.data.loc.dropna.to_numpy', 'col.boundary_week.data.data.loc.dropna.to_numpy.reshape', 'col.boundary_week.data.data.loc.reshape', 'col.boundary_week.data.data.loc.reshape.astype', 'col.boundary_week.data.data.loc.to_numpy', 'col.boundary_week.data.data.loc.to_numpy.reshape', 'col.boundary_week.data.data.loc.values.reshape', 'col.boundary_week.data.data.loc.values.reshape.astype', 'col.data.diff', 'col.data.diff.dropna', 'col.data.dropna', 'col.df.isnull', 'col.df.isnull.sum', 'col.df.unique', 'col.merged_data.interpolate', 'col.merged_data.replace', 'col.ts_train.astype', 'cols.nextt.item', 'cols.prev.item', 'cols.train_data.fillna', 'cols.train_data.isnull', 'cols.train_data.isnull.sum', 'data.all', 'data.apply', 'data.asfreq', 'data.asfreq.fillna', 'data.astype', 'data.columns', 'data.data.loc.item', 'data.data.reset_index', 'data.diff', 'data.diff.apply', 'data.diff.diff', 'data.diff.dropna', 'data.diff.dropna.apply', 'data.drop', 'data.drop_duplicates', 'data.dropna', 'data.dtypes', 'data.fillna', 'data.head', 'data.interpolate', 'data.isna', 'data.isnull', 'data.isnull.sum', 'data.item', 'data.iterrows', 'data.max', 'data.max.item', 'data.plot', 'data.rolling', 'data.rolling.mean', 'data.rolling.std', 'data.set_index', 'data.shift', 'data.unique', 'data.values', 'data.values.apply', 'data2.eq', 'data2.iterrows', 'dataBalanceCheck', 'dataExplore', 'dataFillNa', 'dataIdentifyDateMonth', 'data_filtered.corr', 'data_lastWeek.drop_duplicates', 'data_lastWeek.set_index', 'data_new.plot', 'data_pred.astype', 'data_pred.drop', 'data_pred.head', 'data_pred.set_index', 'data_pred.set_index.join', 'data_pred_query.copy', 'data_train.apply', 'data_train.asfreq', 'data_train.diff', 'data_train.diff.diff', 'data_train.diff.diff.diff', 'data_train.diff.diff.diff.fillna', 'data_train.diff.diff.fillna', 'data_train.diff.fillna', 'data_train.drop', 'data_train.fillna', 'data_train.fillna.diff', 'data_train.fillna.len.range.i.i.reshape', 'data_train.get_dummies', 'data_train.group_by', 'data_train.group_by.interpolate', 'data_train.groupby', 'data_train.groupby.apply', 'data_train.groupby.interpolate', 'data_train.index.max', 'data_train.index.min', 'data_train.interpolate', 'data_train.iterrows', 'data_train.max', 'data_train.numpy', 'data_train.numpy.reshape', 'data_train.reindex', 'data_train.reshape', 'data_train.set_index', 'data_train.to_numpy', 'data_train.to_numpy.reshape', 'data_train.values.reshape', 'data_train_x_m1.astype', 'data_train_y.astype', 'data_valid.drop', 'data_valid_x_m1.astype', 'datetime.datetime.strptime', 'datetime_list.append', 'decompose_data.plot', 'decomposition.plot', 'df.index.max', 'df.index.min', 'df_reindexed.fillna', 'df_reindexed.fillna.interpolate', 'df_reindexed.interpolate', 'diff_inv', 'encoder.fit', 'encoder.transform', 'entry_count.append', 'entry_count.sort', 'enumerate', 'err_arr.append', 'errors.np.isnan.sum', 'exog.data_train.fillna', 'exog_col.boundary_week.data.data.loc.dropna', 'final_output.assign', 'final_output.astype', 'final_output.rename', 'final_output.reset_index', 'final_output.to_csv', 'final_test_data.assign', 'final_test_data.copy', 'final_test_data.drop', 'final_test_data.dropna', 'final_test_data.isnull', 'final_test_data.isnull.sum', 'final_test_data.iterrows', 'float.ts_train.astype.reshape', 'float.ts_train.astype.reshape.shape', 'float.ts_train.astype.shape', 'float.ts_train.astype.to_numpy', 'float.ts_train.astype.to_numpy.shape', 'float.ts_train.to_numpy.astype.shape', 'forecast', 'forecast_col.boundary_week.data.data.loc.dropna', 'format', 'get_datetime', 'grid.fit', 'gridcv_xgb.predict', 'id.data.data.isnull', 'id.data.data.isnull.all', 'id.merged_data.merged_data.sort_values', 'id.ts_data.ts_data.ts_data.loc.unique', 'id.ts_data.unique.ts_data.ts_data.loc.unique', 'id1.data2.eq.any', 'idd.merged_data.merged_data.loc.copy', 'idd.merged_data.merged_data.sort_values', 'idd.merged_data.merged_data.unique', 'idd.ts_data.ts_data.sort_index', 'ids.merged_data.merged_data.loc.copy', 'ids.merged_data.merged_data.loc.diff', 'ids.merged_data.merged_data.loc.diff.diff', 'ids.merged_data.merged_data.loc.diff.diff.diff', 'ids.merged_data.merged_data.loc.diff.diff.diff.dropna', 'ids.merged_data.merged_data.loc.diff.diff.dropna', 'ids.merged_data.merged_data.loc.diff.dropna', 'import', 'int', 'is_na.append', 'itertools.product', 'le.fit', 'le.inverse_transform', 'le.inversetransform', 'le.transform', 'le_emp1.fit', 'le_emp1.transform', 'le_emp2.fit', 'le_emp2.transform', 'le_emp3.fit', 'le_emp3.transform', 'le_tractname.fit', 'le_tractname.transform', 'le_uuid.fit', 'le_uuid.inverse_transform', 'le_uuid.transform', 'len', 'list', 'loss', 'loss_arr.append', 'mape.isnull', 'mape.isnull.sum', 'mape.np.isnan.sum', 'max', 'max_.seasonal.idxmin', 'max_week_no.data.data.item', 'max_week_no.data.data.loc.item', 'max_week_number.data.data.loc.item', 'max_week_number.item', 'max_week_number.ts_data.uuid.ts_data.ts_data.loc.item', 'merged_data.asfreq', 'merged_data.copy', 'merged_data.drop', 'merged_data.drop.drop_duplicates', 'merged_data.drop_duplicates', 'merged_data.dropna', 'merged_data.fillna', 'merged_data.head', 'merged_data.isnull', 'merged_data.isnull.sum', 'merged_data.len.unique', 'merged_data.merged_data.merged_data.loc.copy', 'merged_data.set_index', 'merged_data.sort_index', 'merged_data.unique', 'merged_data.unique.sort', 'merged_data.uu_id.unique', 'merged_data.week_number.unique', 'min', 'min_2.seasonal.idxmax', 'mod.fit', 'model', 'model.fit', 'model.fit_transform', 'model.get_forecast', 'model.predict', 'model.score', 'new_data.asfreq', 'new_data.asfreq.dropna', 'new_data.asfreq.fillna', 'new_data.drop_duplicates', 'new_data.dropna', 'nextt.item', 'np.abs', 'np.antilog', 'np.arange', 'np.asarray', 'np.exp', 'np.floor', 'np.isnan', 'np.log', 'np.log.data_train.apply.fillna', 'np.log10', 'np.log10.data_train.apply.fillna', 'np.matrix', 'np.mean', 'np.nanmean', 'np.range', 'np.reshape', 'np.round', 'np.sort', 'np.sqrt', 'np.sqrt.data_train.apply.fillna', 'np.where', 'np.zeros', 'onehot.fit_transform', 'out.unique', 'output.append', 'output_df.Metric.values', 'pd.DataFrame', 'pd.Dataframe', 'pd.DatetimeIndex', 'pd.Series', 'pd.concat', 'pd.date_range', 'pd.get_dummies', 'pd.isna', 'pd.merge', 'pd.series', 'pd.to_datetime', 'pd.unique', 'pdq.append', 'pdqs.append', 'plot_acf', 'plot_pacf', 'plt.axvline', 'plt.colorbar', 'plt.figure', 'plt.grid', 'plt.imshow', 'plt.legend', 'plt.plot', 'plt.savefig', 'plt.set_title', 'plt.show', 'plt.stem', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.xtickslabels', 'plt.ylabel', 'plt.yticks', 'pm.auto_arima', 'poission_model.fit', 'pred.append', 'pred_df.iterrows', 'pred_nonstat.append', 'pred_stat.append', 'prediction.item', 'prediction_data.copy', 'prediction_data.head', 'prediction_data.iterrows', 'prediction_out.astype', 'prepocessing.LabelEncoder', 'preprocessing.LabelEncoder', 'prev.item', 'print', 'print_column_info', 'print_na_info', 'query_job.to_dataframe', 'query_job1.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'query_job4.to_dataframe', 'query_job_pred.to_dataframe', 'r2_score', 'range', 'reg.fit', 'reg.predict', 'req.item', 'result.summary', 'rf.fit', 'rf.predict', 'rf1.fit', 'rf1.predict', 'rolling_mean.shift', 'round', 'row.item', 'row.item.pred_df.pred_df.loc.item', 'row.pred_df.pred_df.item', 'row.pred_df.pred_df.loc.item', 'sarimax_forecast', 'sarimax_gridsearch', 'scaler.fit', 'scaler.transform', 'seaborn.heatmap', 'seasonal.idxmax', 'seasonal.idxmin', 'seasonal.plot', 'seasonal_decompose', 'series.copy', 'series_undifferenced.cumsum', 'sm.GLM', 'sm.families.Poisson', 'sm.tsa.statespace.SARIMAX', 'start_week.data.boundary_week.data.data.loc.copy', 'start_week.data.boundary_week.data.data.loc.drop', 'start_week.ts_data.uuid.ts_data.ts_data.loc.copy', 'start_week_nonstat.ts_data.uuid.ts_data.ts_data.loc.copy', 'start_week_stat.ts_data.uuid.ts_data.ts_data.loc.copy', 'stat.append', 'str', 'test.drop', 'timeseries_data.head', 'timeseries_data.iterrows', 'timestamp_data.iterrows', 'tot_claims.append', 'total_claims.item', 'total_claims_list.append', 'train.drop', 'train_data.assign', 'train_data.drop', 'train_data.drop_na', 'train_data.dropna', 'train_data.eval', 'train_data.fillna', 'train_data.interpolate', 'train_data.isnull', 'train_data.isnull.sum', 'train_data.iterrows', 'train_data.sort_values', 'train_data.str.strip', 'train_data.unique', 'train_test_split', 'ts_data.asfreq', 'ts_data.drop_duplicates', 'ts_data.head', 'ts_data.rolling', 'ts_data.rolling.mean', 'ts_data.rolling.std', 'ts_data.sort_index', 'ts_data.unique', 'ts_data.uuid.ts_data.ts_data.loc.copy', 'ts_test.append', 'ts_test.ts_test.item', 'ts_test.ts_test.loc.item', 'ts_test_ex.astype', 'ts_train.astype', 'ts_train.drop_index', 'ts_train.max', 'ts_train.min', 'ts_train.numpy', 'ts_train.reset_index', 'ts_train.shape', 'ts_train.to_numpy', 'ts_train.to_numpy.astype', 'ts_train.to_numpy.shape', 'ts_train.values.astype', 'ts_train_ex.astype', 'ts_trainex.astype', 'unemployment_data.copy', 'unemployment_data.head', 'unemployment_data.unique', 'useful_data.astype', 'useful_data.drop', 'useful_data.fillna', 'useful_data.reshape', 'useful_data.to_numpy', 'useful_data.to_numpy.reshape', 'useful_data.toarray', 'useful_data.toarray.reshape', 'uu_id.ts_data.ts_data.rolling', 'uu_id.ts_data.ts_data.rolling.mean', 'uu_id_const.train_data.train_data.loc.unique', 'uu_id_const.vis_data.vis_data.loc.unique', 'uu_id_const.vis_data.week.vis_data.vis_data.loc.total_claims.item', 'uuid.ts_data.s_data.loc.rolling', 'uuid.ts_data.s_data.loc.rolling.std', 'uuid.ts_data.ts_data.loc.copy', 'uuid.ts_data.ts_data.loc.rolling', 'uuid.ts_data.ts_data.loc.rolling.mean', 'uuid.ts_data.ts_data.loc.rolling.std', 'uuid.ts_data.ts_data.loc.unique', 'uuid.ts_data.ts_data.rolling', 'uuid.ts_data.ts_data.rolling.mean', 'uuid_list.append', 'val.sort_values', 'val.val.rows', 'vals.items', 'values1.items', 'vis_data.append', 'vis_data.drop', 'vis_data.drop.drop_duplicates', 'vis_data.fillna', 'vis_data.isin', 'vis_data.isnull', 'vis_data.isnull.sum', 'vis_data.plot', 'vis_data.reset_index', 'vis_data.set_index', 'vis_data.set_index.reindex', 'vis_data.sort_values', 'vis_data.unique', 'vis_data.vis_data.loc.sort_values', 'vis_data.week_number.unique', 'wage_data.head', 'wage_data.unique', 'warnings.filterwarnings', 'warnings.simplefilter', 'week.data.data.reset_index', 'week_no_list.append', 'week_number.ts_data.uuid.ts_data.ts_data.loc.item', 'week_number.ts_data.uuid.ts_data.ts_data.loc.max', 'week_number_list.append', 'weeks.append', 'x.interpolate', 'xgb.XGBRegressor', 'y.astype', 'y.columns', 'y.isnull', 'y.isnull.sum', 'y.item', 'y.items', 'y.value', 'y.values', 'y_pred.conf_int', 'y_pred_df.data.data.loc.item', 'y_test.np.isnan.sum']"
reevapatel,9,"['LinearRegression', 'abs', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.corr', 'data.describe', 'data.drop', 'data.head', 'data.info', 'data.plot', 'data_3.drop', 'df.mean', 'final_training_data.drop', 'final_training_data.dropna', 'final_training_data.head', 'hash', 'import', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.Series', 'pd.get_dummies', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'y.plot', 'y_pred.plot']"
rithvikd24,9,"['bigquery.Client', 'bigquery_client.query', 'data.corr', 'data.head', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'sns.heatmap', 'unemployment_data.head', 'wage_data.head']"
rpresent,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'prediction_list.head', 'prediction_list.to_csv', 'query_job.to_dataframe', 'unemployment_data.describe', 'unemployment_data.head', 'unemployment_data.summary', 'unemployment_data.total_claims.describe', 'unemployment_data.total_claims.summary', 'wage_data.head']"
saikrishna99-2dcreator,9,['import']
sanket1105,9,"['ARIMA', 'GridSearchCV', 'LinearRegression', 'MAPE', 'RandomForestRegressor', 'RandomizedSearchCV', 'X.copy', 'X2.apply', 'XGBRegressor', 'a.data.replace', 'a.data.str.replace', 'a.data.str.split', 'a.unique', 'bigquery.Client', 'bigquery_client.query', 'breakcolumn', 'data.copy', 'data.drop', 'data.head', 'data.info', 'data.isna', 'data.isna.sum', 'data.replace', 'data.replce', 'data.str.split', 'data.uu_id.head', 'data1.copy', 'data1.drop', 'data1.fillna', 'data1.head', 'data1.info', 'data1.nunique', 'data2.drop', 'data2.drop_duplicates', 'data2.groupby', 'data2.head', 'data2.index.nunique', 'data2.join', 'data2.nunique', 'data2.set_index', 'data2.unique', 'data2.uu_id.nunique', 'data2.uu_is.nunique', 'df.astype', 'df.convert_dtypes', 'df.dtype', 'df.fillna', 'df.info', 'df.str.split', 'df.type', 'df1.copy', 'df1.drop', 'df2.apply', 'df2.drop', 'df3.drop_duplicates', 'df3.head', 'final_data.head', 'final_prediction.drop', 'final_prediction.head', 'final_prediction.info', 'final_prediction.reset_index', 'future_weeks_pred.astype', 'grid_search.fit', 'grid_search.predict', 'i.data1.replace', 'import', 'int', 'iterator.mean', 'iterator.std', 'iterator.std.iterator.mean.iterator.round', 'k.first', 'k.head', 'k.isna', 'k.isna.sum', 'k.tail', 'k.uu_id.pd.unique.sum', 'label_encoder.fit_transform', 'len', 'linreg.fit', 'linreg.predict', 'list', 'max', 'max_depth.append', 'mean_squared_error', 'model.fit', 'np.abs', 'np.cumsum', 'np.linspace', 'np.mean', 'np.nunique', 'np.random.randn', 'np.round', 'pd.DataFrame', 'pd.merge', 'pd.nunique', 'pd.option_context', 'pd.set_option', 'pd.to_numeric', 'pd.unique', 'plt.figure', 'plt.legend', 'plt.plot', 'prediction.pd.DataFrame.head', 'prediction.set_index', 'prediction.to_csv', 'prediction.uu_id.nunique', 'preprocessing.LabelEncoder', 'print', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'range', 'regressor.fit', 'regressor.predict', 'rf_random.fit', 'rfr.fit', 'rfr.predict', 'round', 'set', 'str.df.astype.astype', 'train_test_split', 'unemployment_data.copy', 'unemployment_data.drop_duplicates', 'unemployment_data.duplicated', 'unemployment_data.head', 'wage_data.drop_duplicates', 'wage_data.head', 'xgb.XGBRegressor', 'xgb_grid.fit', 'xgb_grid.predict']"
sawula,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'import', 'print', 'query_job.to_dataframe']"
sbrunswi,9,[]
shahryarbq,9,"['LinearRegression', 'OneHotEncoder', 'SimpleImputer', 'X.corr', 'X.head', 'X.pd.DataFrame.corr', 'X.pd.dataFrame.corr', 'X.pd.dataframe.corr', 'abs', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.mean', 'enc.fit_transform', 'imp.fit_transform', 'import', 'information_data.head', 'len', 'max', 'min', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Series', 'pd.dataFrame', 'pd.dataframe', 'pd.get_dummies', 'pd.to_datetime', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'unemployment_data.corr', 'unemployment_data.drop', 'unemployment_data.head', 'unemployment_data.set_index', 'wage_data.corr', 'wage_data.head', 'y.plot', 'y_pred.plot', 'zip']"
shangjia35,9,"['bigquery.Client', 'import', 'np.cumsum', 'np.linspace', 'np.random.randn', 'plt.figure', 'plt.legend', 'plt.plot', 'print']"
shlok2002,9,"['bigquery.Client', 'bigquery_client.query', 'df.describe', 'df.head', 'df.value_counts', 'df.value_counts.group', 'import', 'pd.set_option', 'query_job.to_dataframe']"
shuuul,9,"['bigquery.Client', 'import', 'plt.style.use', 'sns.set_style']"
sogunmod,9,"['np.cumsum', 'np.linspace', 'np.random.randn', 'print']"
souradipp76,9,[]
tame0001,9,"['bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'data.head', 'df.mean', 'df.to_csv', 'get_data', 'import', 'int', 'len', 'np.cumsum', 'np.linspace', 'np.random.randn', 'pandas.DataFrame', 'pd.DataFrame', 'pd.Dataframe', 'plt.figure', 'plt.legend', 'plt.plot', 'pred._to_csv', 'pred.to_csv', 'pred.to_list', 'pred.to_list.apply', 'pred.to_numpy', 'pred.to_numpy.as_type', 'pred.to_numpy.astype', 'prediction_list.groupby', 'print', 'query_job.to_dataframe', 'sub.to_list', 'submission.head', 'type', 'unemploy.groupby', 'unemploy.groupby.apply', 'unemploy.groupby.get_group', 'unemploy.groupby.mean', 'unemploy.groupby.mean.apply', 'unemployment.head', 'unemployment.unemployment.sort_by', 'unemployment.unemployment.sort_values', 'unemployment.unemployment.sort_values.drop_duplicates', 'unemployment.unemployment.sort_values.ewm', 'unemployment.unemployment.sort_values.ewm.mean', 'unemployment.unemployment.sort_values.ewm.mean.dtype', 'unemployment.unemployment.sort_values.ewm.mean.tail', 'unemployment.unemployment.sort_values.ewm.mean.to_numpy', 'unemployment.unemployment.sort_values.mean', 'unemployment.unemployment.sort_values.mean.apply', 'unemployment.unemployment.sort_values.tail', 'unemployment.unemployment.sortby', 'wage.head', 'x.sort_values', 'x.sort_values.drop_duplicates', 'x.sort_values.drop_duplicates.ewm', 'x.sort_values.drop_duplicates.ewm.mean', 'x.sort_values.drop_duplicates.ewm.mean.to_numpy', 'x.sort_values.ewm', 'x.sort_values.ewm.mean', 'x.sort_values.ewm.mean.to_numpy', 'x.sort_values.tail']"
tigr-2d10,9,"['DataFrame', 'LinearRegression', 'abs', 'array.reshape', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'cols_plot.unemployment_claims_data.plot', 'cols_plot.unemployment_wage_data.plot', 'data.corr', 'data.drop', 'data.head', 'data.plot', 'data.sample', 'data.set_index', 'data.shift', 'df.head', 'df1.plot', 'final_reg.fit', 'final_reg.predict', 'final_regressor.fit', 'final_regressor.predict', 'float', 'import', 'max', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'min', 'model.fit', 'model.predict', 'np.DataFrame', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.sqrt', 'pd.DataFrame', 'pd.Series', 'pd.merge', 'pd.to_datetime', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'pred_claims.astype', 'prediction_data.drop', 'prediction_data.groupby', 'prediction_data.groupby.mean', 'prediction_data.head', 'prediction_list.head', 'prediction_list.to_csv', 'print', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'query_job3.to_dataframe', 'regressor.fit', 'regressor.predict', 'sns.distplot', 'sns.heatmap', 'sns.set', 'sum', 'train_test_split', 'unemployment_claim_data', 'unemployment_claims_data', 'unemployment_claims_data.corr', 'unemployment_claims_data.drop', 'unemployment_claims_data.drop_duplicates', 'unemployment_claims_data.duplicated', 'unemployment_claims_data.plot', 'unemployment_claims_data.set_index', 'unemployment_claims_data.values.reshape', 'unemployment_data.corr', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.duplicated', 'unemployment_data.head', 'unemployment_data.plot', 'unemployment_data.reshape', 'unemployment_data.set_index', 'unemployment_wage_data.corr', 'unemployment_wage_data.drop', 'unemployment_wage_data.drop_duplicates', 'unemployment_wage_data.duplicated', 'unemployment_wage_data.fillna', 'unemployment_wage_data.head', 'unemployment_wage_data.plot', 'unemployment_wage_data.set_index', 'unemployment_wage_data.shift', 'unemployment_wage_data.values.reshape', 'unemplyment_data.drop', 'wage_data.average_wage.mean', 'wage_data.fillna', 'wage_data.head', 'wage_data.isnull', 'wage_data.isnull.any', 'wage_data2.head', 'y.flatten', 'y.plot', 'y_pred.flatten', 'y_pred.plot', 'y_test.flatten']"
tingchunkuo,9,"['AutoARIMA', 'AutoARIMA.fit', 'AutoARIMA.fit_predict', 'X.append', 'autoarima_args.AutoARIMA.fit_predict', 'bigquery.Client', 'bigquery_client.query', 'bigquery_client.query.to_dataframe', 'bigquery_client.query.to_dataframe.drop_duplicates', 'bigquery_client.query.to_dataframe.drop_duplicates.reset_index', 'bigquery_client.query.to_dataframe.nunique', 'c.startswith', 'cols.data.fillna', 'cols.data.groupby.sum', 'cols.data.groupby.sum.plot', 'cols.data.replace', 'cols.data.replace.describe', 'cols.data.replace.sum', 'cols.data.sum', 'cols_race.data.groupby.sum', 'cols_race.data.groupby.sum.plot', 'common_cols.data_dict.data_dict.merge.sort_values', 'common_cols.data_dict.data_dict.merge.sort_values.drop_duplicates', 'common_cols.data_dict.data_dict.merge.sort_values.drop_duplicates.reset_index', 'common_cols.data_dict.data_dict.merge.sort_values.reset_index', 'cvalues.isna', 'cvalues.isna.sum', 'data.data.set_index', 'data.data.set_index.loc.plot', 'data.dropna', 'data.get_dummies', 'data.groupby', 'data.groupby.count', 'data.groupby.count.max', 'data.groupby.count.plot', 'data.groupby.count.sum', 'data.groupby.max', 'data.groupby.plot.scatter', 'data.groupby.sum', 'data.groupby.sum.plot', 'data.groupby.sum.plot.scatter', 'data.groupby.sum.reset_index', 'data.groupby.sum.reset_index.merge', 'data.iloc.data.data.set_index', 'data.iloc.data.data.set_index.asfreq', 'data.iloc.data.data.set_index.asfreq.bfill', 'data.iloc.data.data.set_index.plot', 'data.items', 'data.min.data.data.set_index', 'data.min.data.data.set_index.asfreq', 'data.min.data.data.set_index.asfreq.bfill', 'data.nunique', 'data.plot', 'data.plot.scatter', 'data.scatter', 'data.set_index', 'data.set_index.groupby', 'data.set_index.groupby.plot', 'data.set_index.groupby.scatter', 'data.set_index.plot', 'data.sum', 'data.unique', 'data_dict.data_dict.merge.sort_values', 'data_dict.data_dict.merge.sort_values.drop_duplicates', 'data_dict.data_dict.merge.sort_values.drop_duplicates.reset_index', 'data_dict.data_dict.merge.sort_values.reset_index', 'data_dict.data_dict.sum.all', 'data_dict.items', 'data_dict.merge', 'data_dict.sum', 'data_dict.values', 'data_tables.tolist', 'data_tables.unique', 'dd.items', 'df.describe', 'dict', 'e.data.groupby.sum', 'e.data.groupby.sum.plot', 'format', 'i.data.data.set_index', 'i.data.data.set_index.asfreq', 'i.data.data.set_index.asfreq.bfill', 'i.data.data.set_index.asfreq.reindex', 'i.data.groupby.count', 'import', 'int', 'ironhacks_competition.bigquery_client.query.to_dataframe', 'len', 'list', 'map', 'max', 'min', 'model.predict', 'model.predict.reset_index', 'model.predict.reset_index.rename', 'model.predict.reset_index.rename.merge', 'n_periods.AutoARIMA.fit_predict', 'pd.DataFrame', 'pd.Series', 'pd.concat', 'pd.date_range', 'pd.date_range.range.pd.Series.reset_index', 'pd.date_range.rename', 'pd.date_range.rename.range.pd.Series.reset_index', 'pd.date_range.rename.to_series', 'pd.date_range.to_series', 'pd.date_range.to_series.rename', 'pd.get_dummies', 'pd.to_datetime', 'plt.bar', 'plt.figure', 'pred_results.append', 'pred_results.pd.DataFrame.data_dict.merge.to_csv', 'pred_results.pd.DataFrame.prediction_list.merge.to_csv', 'prediction_list.merge', 'print', 'print_missing', 'query_job.to_dataframe', 'range', 'round', 'schema.bigquery_client.query.to_dataframe', 'schema.data_tables.data_tables.loc.tolist', 'seaborn.scatterplot', 'set', 'sns.legend', 'sns.plot', 'sns.scatterplot', 'str', 'table_name.bigquery_client.query.to_dataframe', 'table_name.schema.bigquery_client.query.to_dataframe', 'time_index.y.reindex.fillna', 'tqdm', 'train_timeperiods.i.data.data.set_index.asfreq.reindex.fillna', 'tuple', 'visual_data.merge', 'wt.astype', 'wt.set_index', 'wt.set_index.loc.astype', 'wt.set_index.loc.to_series', 'wt.y.index.max.sum', 'x.merge', 'y.index.max', 'y.index.max.astype', 'y.index.max.date', 'y.plot', 'y.reindex']"
tungvu3117,9,[]
twinblade02,9,"['BayesianRidge', 'Bidirectional', 'DL_X.describe', 'DL_X.head', 'DL_XTest.astype', 'DL_XTest.describe', 'DL_XTest.reshape', 'DL_XTest.to_numpy', 'DL_XTrain.astype', 'DL_XTrain.to_numpy', 'DL_YTest.astpye', 'DL_YTest.to_numpy', 'DL_YTrain.astype', 'DL_data.describe', 'DL_data.drop', 'DL_data.head', 'Dense', 'Dropout', 'ENet.predict', 'ElasticNetCV', 'GS.fit', 'GridSearchCV', 'LE.fit_transform', 'LE.transform', 'LR.fit', 'LR.predict', 'LR2.fit', 'LR2.predict', 'LSTM', 'LSTM_regressor.add', 'LSTM_regressor.compile', 'LSTM_regressor.fit', 'LSTM_regressor.predict', 'LabelEncoder', 'Lasso', 'LassoCV', 'LinearRegression', 'MM_claims.fit_transform', 'MM_claims.inverse_transform', 'MM_other.fit_transform', 'MM_other.inverse_transform', 'MM_wage.fit_transform', 'MinMaxScaler', 'PReg.fit_transform', 'PolynomialFeatures', 'RB_claims.fit_transform', 'RB_claims.inverse_transform', 'RB_other.fit_transform', 'RB_other.inverse_transform', 'RB_other.transform', 'RandomForestRegressor', 'RandomizedSearchCV', 'Regressor_BR.fit', 'Regressor_BR.predict', 'Regressor_LA_bestFit.fit', 'Regressor_Lasso.predict', 'Regressor_RF.predict', 'Regressor_RF_bestFit.fit', 'Regressor_RF_bestFit.predict', 'Regressor_SVR.fit', 'Regressor_SVR.predict', 'RepeatedKFold', 'RepeatedKFoldKFold', 'RepeatedStratifiedKFold', 'RobustScaler', 'SC_other.fit_transform', 'SC_other.transform', 'SVR', 'Sequential', 'StackLSTM_Regressor.add', 'StackLSTM_Regressor.compile', 'StackLSTM_Regressor.fit', 'StackLSTM_Regressor.predict', 'StackLSTM_regressor.predict', 'StandardScaler', 'X.ravel', 'X_Train.head', 'X_test.ENet.predict.reshape', 'X_test.Regressor_BR.predict.reshape', 'X_test.Regressor_Lasso.predict.reshape', 'X_test.Regressor_RF.predict.reshape', 'X_test.Regressor_RF_bestFit.predict.reshape', 'X_test.Regressor_SVR.predict.reshape', 'X_test.describe', 'X_test.values.Regressor_RF_bestFit.predict.reshape', 'X_train.head', 'Y.describe', 'Y.ravel', 'Y.reshape', 'Y.shape', 'Y_pred_BR.flatten', 'Y_pred_ENet.flatten', 'Y_pred_Lasso.flatten', 'Y_pred_RFR.flatten', 'Y_pred_SVR.flatten', 'Y_pred_SVR.reshape', 'Y_test.RB_claims.inverse_transform.flatten', 'Y_test.flatten', 'Y_train.ravel', 'ax.bar', 'ax.legend', 'bigquery.Client', 'bigquery_client.query', 'check_unemployment.isnull', 'check_unemployment.isnull.sum', 'check_unemployment.isnulll', 'check_unemployment.isnulll.sum', 'check_unemployment.unique', 'check_unemployment.unique.value_counts', 'check_unemployment.value_counts', 'clean_uemp.dropna', 'clean_umepl.corr', 'clean_umepl.isnull', 'clean_umepl.isnull.sum', 'clean_umepl.value_counts', 'clean_unemploymentDf.corr', 'clean_unemploymentDf.duplicated', 'clean_unemploymentDf.fillna', 'clean_unemploymentDf.isnull', 'clean_unemploymentDf.isnull.sum', 'confusion_matrix', 'datetime.strptime', 'dict', 'edu_hist.plot', 'evaluate_regreENetor', 'evaluate_regressor', 'evaluate_regressorENet', 'float', 'gender_demographics.plot', 'get_pred_frame', 'get_predictions', 'grid.fit', 'import', 'ingest.describe', 'ingest.drop', 'ingest.to_csv', 'int', 'len', 'loguniform', 'main_df.copy', 'main_df.corr', 'main_df.datetime.strptime.strftime', 'main_df.describe', 'main_df.drop', 'main_df.dropna', 'main_df.dtype', 'main_df.groupby', 'main_df.groupby.count', 'main_df.groupby.mean', 'main_df.groupby.sum', 'main_df.isna', 'main_df.isna.sum', 'main_df.isnull', 'main_df.isnull.sum', 'main_df.nuinque', 'main_df.nunique', 'main_df.rename', 'main_df.unique', 'main_df.unique.count', 'main_df.values.reshape', 'mean_absolute_error', 'mean_squared_error', 'merged_ingest.copy', 'merged_ingest.describe', 'merged_ingest.drop', 'merged_ingest.head', 'merged_ingest.isnull', 'merged_ingest.isnull.sum', 'merged_ingest.sample', 'merged_ingest.to_csv', 'np.abs', 'np.arange', 'np.array', 'np.insert', 'np.mean', 'np.ones_like', 'np.reshape', 'np.sqrt', 'np.triu', 'old_ingest.describe', 'os.makedirs', 'pd.DataFrame', 'pd.concat', 'pd.merge', 'pd.read_csv', 'pd.to_datetime', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'plt.subplot', 'plt.subplots', 'plt.title', 'plt.xlabel', 'plt.xticks', 'plt.ylabel', 'poly.fit_transform', 'poly.transform', 'prediction_array.flatten', 'prediction_list.copy', 'prediction_list.dtype', 'prediction_sub.append', 'prediction_sub.to_csv', 'print', 'query_job.to_dataframe', 'range', 'regressor.predict', 'result_list.append', 'result_list.dtypes', 'search.fit', 'search_Lasso.fit', 'sns.barplot', 'sns.displot', 'sns.heatmap', 'sns.hist', 'sns.histplot', 'sns.kdeplot', 'sns.pairplot', 'sns.scatterplot', 'sum', 'sum.main_df.groupby.sum', 'train_test_split', 'unemployment_data.copy', 'unemployment_data.corr', 'unemployment_data.describe', 'unemployment_data.fillna', 'unemployment_data.info', 'unemployment_data.isnull', 'unemployment_data.isnull.sum', 'unemployment_data.notnull', 'unemployment_data.replace', 'unemployment_data.unique', 'uniform', 'updated_ingest.copy', 'updated_ingest.drop', 'updated_ingest.to_csv', 'wage_data.dropna', 'wage_data.duplicated', 'wage_data.fillna', 'wage_data.info', 'wage_data.isnull', 'wage_data.isnull.sum', 'wage_data.mean', 'zip']"
venkys96,9,"['bigquery.Client', 'bigquery_client.query', 'import', 'print', 'query_job.to_dataframe']"
vishalcv98,9,[]
vishveshvsk,9,"['LabelEncoder.fit_transform', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'id.work_data_collection.drop', 'id.work_data_collection.drop_duplicates', 'import', 'linear_model.LinearRegression', 'lm.fit', 'lm.score', 'num_data.interpolate', 'pd.merge', 'query_job.to_dataframe', 'query_job2.to_dataframe', 'series.interploate', 'sns.heatmap', 'type', 'unemployment_data.drop', 'unemployment_data.drop_duplicates', 'unemployment_data.fillna', 'unemployment_data.head', 'unemployment_data.iloc.astype', 'unemployment_data.iloc.interpolate', 'unemployment_data.interpolate', 'unemployment_data.to_csv', 'wage_data.drop', 'wage_data.fillna', 'wage_data.head', 'work_data.drop_dulpicates', 'work_data.drop_duplicates', 'work_data.head']"
vpoliset,9,"['LinearRegression', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'df.head', 'df.mean', 'df.values.reshape', 'df1.plot', 'df2.to_csv', 'dtype', 'edu_level.groupby', 'edu_level.groupby.count', 'edu_level.groupby.count.reset_index', 'edu_level.groupby.count.reset_index.sort_values', 'edu_level.head', 'edu_lvl.head', 'edu_lvl.max', 'edu_lvl.min', 'example_function', 'gender.groupby', 'gender.groupby.count', 'gender.groupby.count.reset_index', 'gender.groupby.count.reset_index.sort_values', 'gender.head', 'gender.max', 'genders.head', 'genders.max', 'import', 'len', 'metrics.mean_absolute_error', 'metrics.mean_squared_error', 'model.fit', 'model.predict', 'np.cumsum', 'np.linspace', 'np.random.randn', 'np.sqrt', 'pandas.DataFrame', 'pd.DataFrame', 'plt.figure', 'plt.grid', 'plt.legend', 'plt.plot', 'plt.scatter', 'plt.show', 'prediction_data.head', 'print', 'query_job.to_dataframe', 'regressor.fit', 'regressor.predict', 'table_data.head', 'train_test_split', 'unemployment_data.columns', 'unemployment_data.dropna', 'unemployment_data.head', 'wage_data.head', 'y_pred.flatten', 'y_test.flatten']"
xiaohanyu1,9,[]
xp1orer,9,[]
xuhenggao,9,[]
yaminipraneetha,9,"['LinearRegression', 'LinearRegression.fit', 'PCA', 'XGBRegressor', 'XGBRegressor.fit', 'X_test.drop', 'X_train.drop', 'bigquery.Client', 'bigquery_client.query', 'covid19_cases_data.head', 'df_data.head', 'df_final.to_csv', 'df_pred_final_1.drop_duplicates', 'df_test.drop', 'fin.columns.isin', 'fin.drop', 'fin.set_index', 'fin.shape', 'final_data.drop', 'final_data.info', 'final_data1.set_index', 'import', 'int', 'len', 'list', 'lm.mean_squared_error', 'lm.predict', 'lm.score', 'mean_squared_error', 'model.fit', 'model.predict', 'model.score', 'pca.fit_transform', 'pd.DataFrame', 'pd.get_dummies', 'plt.show', 'pred_data.head', 'pred_data.info', 'pred_data.join', 'pred_data.merge', 'pred_data.set_index', 'print', 'query_job.to_dataframe', 'set', 'set1.diference', 'set1.difference', 'set2.difference', 'sum', 'test_train_split', 'train_test_split', 'umemp_data.info', 'unemp_data.astype', 'unemp_data.describe', 'unemp_data.drop', 'unemp_data.dropna', 'unemp_data.fillna', 'unemp_data.gender_male.isnull', 'unemp_data.groupby', 'unemp_data.groupby.count', 'unemp_data.groupby.fillna', 'unemp_data.groupby.head', 'unemp_data.groupby.notna', 'unemp_data.groupby.notna.transform', 'unemp_data.groupby.notnull', 'unemp_data.groupby.notnull.transform', 'unemp_data.groupby.sum', 'unemp_data.groupby.transform', 'unemp_data.head', 'unemp_data.hist', 'unemp_data.info', 'unemp_data.isna', 'unemp_data.isna.sum', 'unemp_data.isnull', 'unemp_data.merge', 'unemp_data.notna', 'unemp_data.notnull', 'unemp_data.notnull.sum', 'unemp_data.notnull.unemp_data.groupby', 'unemp_data.notnull.unemp_data.groupby.transform', 'unemp_data.nunique', 'unemp_data.replace', 'unemp_data.shape', 'unemp_data.unique', 'unemp_data.uu_id.unemp_data.sort_values', 'wage_data.describe', 'wage_data.fillna', 'wage_data.groupby', 'wage_data.groupby.transform', 'wage_data.head', 'wage_data.info', 'x.fillna', 'x.isnull', 'x.mean', 'x.mean.isna', 'x.mean.isnull', 'x.mean.null', 'x.mode', 'xgb.XGBRegressor', 'xgb.XGBRegressor.fit']"
yizhou-2dfang,9,[]
zhanwang90,9,"['ARIMA_predict', 'LinearRegression', 'MAPE', 'MAPE_list.append', 'MSPE', 'MSPE_list.append', 'OLS', 'X.drop', 'X.head', 'X_lag1.y_lag1.OLS.fit', 'X_lag1.y_lag1.OLS.fit.summary', 'abs', 'auto_arima', 'ax.plot', 'ax.set_title', 'ax.set_xlabel', 'ax.set_ylabel', 'bigquery.Client', 'bigquery_client.query', 'cols_plot.data.plot', 'covid19_cases_data.head', 'dat.value_counts', 'data.apply', 'data.copy', 'data.corr', 'data.data.isnull', 'data.data.isnull.all', 'data.day', 'data.drop', 'data.head', 'data.info', 'data.isna', 'data.plot', 'data.poisson.fit', 'data.rolling', 'data.rolling.mean', 'data.sample', 'data.set_index', 'data.shift', 'data.value_counts', 'dataBalanceCheck', 'dataExplore', 'dataFillNa', 'dataIdentifyDWM', 'dataIdentifyDateMonth', 'data_balance.fillna', 'data_balance.groupby', 'data_balance.head', 'data_balance.index.duplicated', 'data_balance.index.unique', 'data_balance.interpolate', 'data_balance.mean', 'data_balance.reindex', 'data_balance.reset_index', 'data_balance.set_index', 'data_balance.set_index.reindex', 'data_balance.sort_index', 'data_balance.week_number.max', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.reindex.reset_index', 'data_balance.week_number.max.data_balance.week_number.min.range.data_balance.index.unique.pd.MultiIndex.from_product.data_balance.set_index.reindex.reset_index', 'data_balance.week_number.min', 'data_balance_ave.groupby', 'data_balance_ave.groupby.mean', 'data_balance_ave.head', 'data_balance_ave.reset_index', 'data_balance_ave_model.set_index', 'data_balance_ave_train.set_index', 'data_balance_ave_valid', 'data_balance_ave_valid.merge', 'data_balance_tract_model.set_index', 'data_balance_train.drop', 'data_balance_train_x_m1.astype', 'data_balance_train_y.astype', 'data_balance_valid.drop', 'data_balance_valid_x.head', 'data_balance_valid_x_m1.astype', 'data_balance_valid_y.head', 'data_balanceindex.duplicated', 'data_estimate_m1.head', 'data_lastWeek.drop_duplicates', 'data_lastWeek.set_index', 'data_pred.astype', 'data_pred.drop', 'data_pred.head', 'data_pred.set_index', 'data_pred.set_index.join', 'data_pred_query.copy', 'data_pred_query.head', 'data_pred_query.merge', 'data_pred_query.to_csv', 'data_train.drop', 'data_train_x.head', 'data_train_x_m1.astype', 'data_train_x_m1.describe', 'data_train_x_m1.dtype', 'data_train_x_m1.head', 'data_train_x_m1.info', 'data_train_y.astype', 'data_unemp.head', 'data_valid.drop', 'data_valid_x_m1.astype', 'data_valid_x_m1.describe', 'data_wage.head', 'date.isna', 'datetime', 'datetime.datetime', 'datetime.strptime', 'df.mean', 'df_balance.fillna', 'df_balanced.fillna', 'df_forecast.rename', 'fig.show', 'grp.set_index', 'grp.set_index.interpolate', 'id.data.data.isnull', 'id.data.data.isnull.all', 'import', 'int', 'len', 'linear_model.PoissonRegressor', 'm1.fit', 'm1.summary', 'math.ceil', 'max', 'min', 'model.fit', 'model.forecast', 'model.plot_predict', 'model.predict', 'model.summary', 'model_lag1.fit', 'model_lag1.summary', 'np.cumsum', 'np.linspace', 'np.random.randn', 'output.head', 'pandas.DataFrame', 'pd.DataFrame', 'pd.DatetimeIndex', 'pd.MultiIndex.from_product', 'pd.Series', 'pd.get_dummies', 'pd.sum', 'pd.to_datetime', 'pd.to_numeric', 'pd.unique', 'plot_acf', 'plt.figure', 'plt.legend', 'plt.plot', 'plt.show', 'plt.subplots', 'poission_model.fit', 'poission_model_m2.fit', 'poisson', 'print', 'px.line', 'query_job.to_dataframe', 'query_job_pred.to_dataframe', 'query_job_unemp.to_dataframe', 'query_job_wage.to_dataframe', 'range', 'result.predict', 'result.summary', 'result_m2.predict', 'result_m2.summary', 'sm.GLM', 'sm.add_constant', 'sm.families.Poisson', 'sns.boxplot', 'sns.heatmap', 'sns.set', 'str', 'sum', 'type', 'x.head', 'y.plot', 'y_pred.plot', 'zip']"
